/** \mainpage SecurityPkg Package Document
  Provides security features that conform to TCG/UEFI industry standards<br>
<br>
  The security features include secure boot, measured boot and user identification.<br>
  It also provides the definitions(including PPIs/PROTOCOLs/GUIDs and library classes)<br>
  and libraries instances, which are used for those features.<br>
<br>
 Copyright (c) 2009 - 2020, Intel Corporation. All rights reserved.<BR><br>
 (C) Copyright 2015 Hewlett Packard Enterprise Development LP <BR><br>
 Copyright (c) Microsoft Corporation.<BR><br>
 SPDX-License-Identifier: BSD-2-Clause-Patent<br>

 \section Known_Issue_section Known Issue
<ul><li> OPTIONAL macro for function parameter can not be dealed with doxygen, so it disappear in this document! </li></ul>
 \section PackageBasicInformation Package Basic Information
<TABLE><TR><TD><B>Version of DEC file specification</B></TD><TD>0x00010005</TD></TR><TR><TD><B>Package Guid</B></TD><TD>4EFC4F66-6219-4427-B780-FB99F470767F</TD></TR></TABLE><br>
 \section Packages Packages
<ul><li><a href="../../index.html">Packages</a></li></ul>
<p> \section content_index INDEX
<ul>
<li>\subpage SecurityPkg_libraryclass "Library Class" </li>
<li>\subpage pcd_root_page "PCD" </li>
<li>\subpage guid_root_page "GUID" </li>
<li>\subpage ppi_root_page "PPI" </li>
</ul>
 **/
/** \page SecurityPkg_libraryclass Library Class
<p> \section content_index INDEX
<ul>
<li>\subpage lc_common "common" </li>
</ul>
 **/
/** \page lc_common common
<p> \section content_index INDEX
<ul>
<li>\subpage lc_HashLib "HashLib" </li>
<li>\subpage lc_PlatformSecureLib "PlatformSecureLib" </li>
<li>\subpage lc_RpmcLib "RpmcLib" </li>
<li>\subpage lc_SecureBootVariableLib "SecureBootVariableLib" </li>
<li>\subpage lc_SecureBootVariableProvisionLib "SecureBootVariableProvisionLib" </li>
<li>\subpage lc_Tcg2PhysicalPresenceLib "Tcg2PhysicalPresenceLib" </li>
<li>\subpage lc_Tcg2PpVendorLib "Tcg2PpVendorLib" </li>
<li>\subpage lc_TcgEventLogRecordLib "TcgEventLogRecordLib" </li>
<li>\subpage lc_TcgPhysicalPresenceLib "TcgPhysicalPresenceLib" </li>
<li>\subpage lc_TcgPpVendorLib "TcgPpVendorLib" </li>
<li>\subpage lc_TcgStorageCoreLib "TcgStorageCoreLib" </li>
<li>\subpage lc_TcgStorageOpalLib "TcgStorageOpalLib" </li>
<li>\subpage lc_Tpm12CommandLib "Tpm12CommandLib" </li>
<li>\subpage lc_Tpm12DeviceLib "Tpm12DeviceLib" </li>
<li>\subpage lc_Tpm2CommandLib "Tpm2CommandLib" </li>
<li>\subpage lc_Tpm2DeviceLib "Tpm2DeviceLib" </li>
<li>\subpage lc_TpmCommLib "TpmCommLib" </li>
<li>\subpage lc_TpmPlatformHierarchyLib "TpmPlatformHierarchyLib" </li>
<li>\subpage lc_VariableKeyLib "VariableKeyLib" </li>
</ul>
 **/
/** \page lc_HashLib HashLib
  @libraryclass  Provides hash interfaces from different implementations.<br>

 \section ref Refer to Header File
\link Include/Library/HashLib.h
 \endlink<p>

 **/
/** \page lc_PlatformSecureLib PlatformSecureLib
  @libraryclass  Provides a platform specific interface to detect physically present user.<br>

 \section ref Refer to Header File
\link Include/Library/PlatformSecureLib.h
 \endlink<p>

 **/
/** \page lc_RpmcLib RpmcLib
 @libraryclass  Provides interfaces to access RPMC device.<br>

 \section ref Refer to Header File
\link Include/Library/RpmcLib.h
 \endlink<p>

 **/
/** \page lc_SecureBootVariableLib SecureBootVariableLib
 @libraryclass  Provides helper functions related to creation/removal Secure Boot variables.<br>

 \section ref Refer to Header File
\link Include/Library/SecureBootVariableLib.h
 \endlink<p>

 **/
/** \page lc_SecureBootVariableProvisionLib SecureBootVariableProvisionLib
 @libraryclass  Provides support to enroll Secure Boot keys.<br>

 \section ref Refer to Header File
\link Include/Library/SecureBootVariableProvisionLib.h
 \endlink<p>

 **/
/** \page lc_Tcg2PhysicalPresenceLib Tcg2PhysicalPresenceLib
  @libraryclass  Handle TPM 2.0 physical presence request from OS.<br>

 \section ref Refer to Header File
\link Include/Library/Tcg2PhysicalPresenceLib.h
 \endlink<p>

 **/
/** \page lc_Tcg2PpVendorLib Tcg2PpVendorLib
  @libraryclass  Provides support for TCG Physical Presence Interface (PPI) specification<br>
   >= 128 Vendor Specific PPI Operation.<br>

 \section ref Refer to Header File
\link Include/Library/Tcg2PpVendorLib.h
 \endlink<p>

 **/
/** \page lc_TcgEventLogRecordLib TcgEventLogRecordLib
 @libraryclass  Provides interfaces about firmware TPM measurement.<br>

 \section ref Refer to Header File
\link Include/Library/TcgEventLogRecordLib.h
 \endlink<p>

 **/
/** \page lc_TcgPhysicalPresenceLib TcgPhysicalPresenceLib
  @libraryclass  Provides interfaces to handle TPM 1.2 request.<br>

 \section ref Refer to Header File
\link Include/Library/TcgPhysicalPresenceLib.h
 \endlink<p>

 **/
/** \page lc_TcgPpVendorLib TcgPpVendorLib
  @libraryclass  Provides support for TCG PP >= 128 Vendor Specific PPI Operation.<br>

 \section ref Refer to Header File
\link Include/Library/TcgPpVendorLib.h
 \endlink<p>

 **/
/** \page lc_TcgStorageCoreLib TcgStorageCoreLib
 @libraryclass  Provides interfaces about TCG storage generic command.<br>

 \section ref Refer to Header File
\link Include/Library/TcgStorageCoreLib.h
 \endlink<p>

 **/
/** \page lc_TcgStorageOpalLib TcgStorageOpalLib
 @libraryclass  Provides interfaces about TCG storage Opal generic command.<br>

 \section ref Refer to Header File
\link Include/Library/TcgStorageOpalLib.h
 \endlink<p>

 **/
/** \page lc_Tpm12CommandLib Tpm12CommandLib
  @libraryclass  Provides interfaces for other modules to send TPM 1.2 command.<br>

 \section ref Refer to Header File
\link Include/Library/Tpm12CommandLib.h
 \endlink<p>

 **/
/** \page lc_Tpm12DeviceLib Tpm12DeviceLib
  @libraryclass  Provides interfaces on how to access TPM 1.2 hardware device.<br>

 \section ref Refer to Header File
\link Include/Library/Tpm12DeviceLib.h
 \endlink<p>

 **/
/** \page lc_Tpm2CommandLib Tpm2CommandLib
  @libraryclass  Provides interfaces for other modules to send TPM 2.0 command.<br>

 \section ref Refer to Header File
\link Include/Library/Tpm2CommandLib.h
 \endlink<p>

 **/
/** \page lc_Tpm2DeviceLib Tpm2DeviceLib
  @libraryclass  Provides interfaces on how to access TPM 2.0 hardware device.<br>

 \section ref Refer to Header File
\link Include/Library/Tpm2DeviceLib.h
 \endlink<p>

 **/
/** \page lc_TpmCommLib TpmCommLib
  @libraryclass  Provides TPM Interface Specification (TIS) interfaces for TPM command.<br>

 \section ref Refer to Header File
\link Include/Library/TpmCommLib.h
 \endlink<p>

 **/
/** \page lc_TpmPlatformHierarchyLib TpmPlatformHierarchyLib
  @libraryclass  Handle TPM 2.0 platform hierarchy configuration<br>

 \section ref Refer to Header File
\link Include/Library/TpmPlatformHierarchyLib.h
 \endlink<p>

 **/
/** \page lc_VariableKeyLib VariableKeyLib
 @libraryclass  Provides interfaces to access variable root key.<br>

 \section ref Refer to Header File
\link Include/Library/VariableKeyLib.h
 \endlink<p>

 **/
/** \page pcd_root_page PCD
<p> \section content_index INDEX
<ul>
<li>\subpage pcd_PcdsDynamic_root_page "PcdsDynamic" </li>
<li>\subpage pcd_PcdsDynamicEx_root_page "PcdsDynamicEx" </li>
<li>\subpage pcd_PcdsFixedAtBuild_root_page "PcdsFixedAtBuild" </li>
<li>\subpage pcd_PcdsPatchableInModule_root_page "PcdsPatchableInModule" </li>
</ul>
 **/
/** \page pcd_PcdsDynamic_root_page PcdsDynamic
<p> \section content_index INDEX
<ul>
<li>\subpage pcd_PcdsDynamic_common_root_page "common" </li>
</ul>
 **/
/** \page pcd_PcdsDynamic_common_root_page common
<p> \section content_index INDEX
<ul>
<li>\subpage pcd_PcdsDynamic_common_PcdActiveTpmInterfaceType "gEfiSecurityPkgTokenSpaceGuid.PcdActiveTpmInterfaceType" </li>
<li>\subpage pcd_PcdsDynamic_common_PcdCRBIdleByPass "gEfiSecurityPkgTokenSpaceGuid.PcdCRBIdleByPass" </li>
<li>\subpage pcd_PcdsDynamic_common_PcdFirmwareDebuggerInitialized "gEfiSecurityPkgTokenSpaceGuid.PcdFirmwareDebuggerInitialized" </li>
<li>\subpage pcd_PcdsDynamic_common_PcdOptionRomImageVerificationPolicy "gEfiSecurityPkgTokenSpaceGuid.PcdOptionRomImageVerificationPolicy" </li>
<li>\subpage pcd_PcdsDynamic_common_PcdPhysicalPresenceCmdEnable "gEfiSecurityPkgTokenSpaceGuid.PcdPhysicalPresenceCmdEnable" </li>
<li>\subpage pcd_PcdsDynamic_common_PcdPhysicalPresenceHwEnable "gEfiSecurityPkgTokenSpaceGuid.PcdPhysicalPresenceHwEnable" </li>
<li>\subpage pcd_PcdsDynamic_common_PcdPhysicalPresenceLifetimeLock "gEfiSecurityPkgTokenSpaceGuid.PcdPhysicalPresenceLifetimeLock" </li>
<li>\subpage pcd_PcdsDynamic_common_PcdPkcs7CertBuffer "gEfiSecurityPkgTokenSpaceGuid.PcdPkcs7CertBuffer" </li>
<li>\subpage pcd_PcdsDynamic_common_PcdRandomizePlatformHierarchy "gEfiSecurityPkgTokenSpaceGuid.PcdRandomizePlatformHierarchy" </li>
<li>\subpage pcd_PcdsDynamic_common_PcdRsa2048Sha256PublicKeyBuffer "gEfiSecurityPkgTokenSpaceGuid.PcdRsa2048Sha256PublicKeyBuffer" </li>
<li>\subpage pcd_PcdsDynamic_common_PcdSkipHddPasswordPrompt "gEfiSecurityPkgTokenSpaceGuid.PcdSkipHddPasswordPrompt" </li>
<li>\subpage pcd_PcdsDynamic_common_PcdSkipOpalPasswordPrompt "gEfiSecurityPkgTokenSpaceGuid.PcdSkipOpalPasswordPrompt" </li>
<li>\subpage pcd_PcdsDynamic_common_PcdTcg2FinalLogAreaLen "gEfiSecurityPkgTokenSpaceGuid.PcdTcg2FinalLogAreaLen" </li>
<li>\subpage pcd_PcdsDynamic_common_PcdTcg2HashAlgorithmBitmap "gEfiSecurityPkgTokenSpaceGuid.PcdTcg2HashAlgorithmBitmap" </li>
<li>\subpage pcd_PcdsDynamic_common_PcdTcg2NumberOfPCRBanks "gEfiSecurityPkgTokenSpaceGuid.PcdTcg2NumberOfPCRBanks" </li>
<li>\subpage pcd_PcdsDynamic_common_PcdTcg2PhysicalPresenceFlags "gEfiSecurityPkgTokenSpaceGuid.PcdTcg2PhysicalPresenceFlags" </li>
<li>\subpage pcd_PcdsDynamic_common_PcdTcgLogAreaMinLen "gEfiSecurityPkgTokenSpaceGuid.PcdTcgLogAreaMinLen" </li>
<li>\subpage pcd_PcdsDynamic_common_PcdTcgPhysicalPresenceInterfaceVer "gEfiSecurityPkgTokenSpaceGuid.PcdTcgPhysicalPresenceInterfaceVer" </li>
<li>\subpage pcd_PcdsDynamic_common_PcdTpm2AcpiTableLaml "gEfiSecurityPkgTokenSpaceGuid.PcdTpm2AcpiTableLaml" </li>
<li>\subpage pcd_PcdsDynamic_common_PcdTpm2AcpiTableLasa "gEfiSecurityPkgTokenSpaceGuid.PcdTpm2AcpiTableLasa" </li>
<li>\subpage pcd_PcdsDynamic_common_PcdTpm2AcpiTableRev "gEfiSecurityPkgTokenSpaceGuid.PcdTpm2AcpiTableRev" </li>
<li>\subpage pcd_PcdsDynamic_common_PcdTpm2CurrentIrqNum "gEfiSecurityPkgTokenSpaceGuid.PcdTpm2CurrentIrqNum" </li>
<li>\subpage pcd_PcdsDynamic_common_PcdTpm2HashMask "gEfiSecurityPkgTokenSpaceGuid.PcdTpm2HashMask" </li>
<li>\subpage pcd_PcdsDynamic_common_PcdTpm2InitializationPolicy "gEfiSecurityPkgTokenSpaceGuid.PcdTpm2InitializationPolicy" </li>
<li>\subpage pcd_PcdsDynamic_common_PcdTpm2PossibleIrqNumBuf "gEfiSecurityPkgTokenSpaceGuid.PcdTpm2PossibleIrqNumBuf" </li>
<li>\subpage pcd_PcdsDynamic_common_PcdTpm2ScrtmPolicy "gEfiSecurityPkgTokenSpaceGuid.PcdTpm2ScrtmPolicy" </li>
<li>\subpage pcd_PcdsDynamic_common_PcdTpm2SelfTestPolicy "gEfiSecurityPkgTokenSpaceGuid.PcdTpm2SelfTestPolicy" </li>
<li>\subpage pcd_PcdsDynamic_common_PcdTpmAutoDetection "gEfiSecurityPkgTokenSpaceGuid.PcdTpmAutoDetection" </li>
<li>\subpage pcd_PcdsDynamic_common_PcdTpmBaseAddress "gEfiSecurityPkgTokenSpaceGuid.PcdTpmBaseAddress" </li>
<li>\subpage pcd_PcdsDynamic_common_PcdTpmInitializationPolicy "gEfiSecurityPkgTokenSpaceGuid.PcdTpmInitializationPolicy" </li>
<li>\subpage pcd_PcdsDynamic_common_PcdTpmInstanceGuid  "gEfiSecurityPkgTokenSpaceGuid.PcdTpmInstanceGuid " </li>
<li>\subpage pcd_PcdsDynamic_common_PcdTpmPhysicalPresence "gEfiSecurityPkgTokenSpaceGuid.PcdTpmPhysicalPresence" </li>
<li>\subpage pcd_PcdsDynamic_common_PcdTpmScrtmPolicy "gEfiSecurityPkgTokenSpaceGuid.PcdTpmScrtmPolicy" </li>
<li>\subpage pcd_PcdsDynamic_common_PcdUserPhysicalPresence "gEfiSecurityPkgTokenSpaceGuid.PcdUserPhysicalPresence" </li>
</ul>
 **/
/** \page pcd_PcdsDynamic_common_PcdActiveTpmInterfaceType gEfiSecurityPkgTokenSpaceGuid.PcdActiveTpmInterfaceType
 This PCD indicates current active TPM interface type.<br>
  According to TCG PTP spec 1.3, there are 3 types defined in TPM2_PTP_INTERFACE_TYPE.<BR><br>
  0x00 - FIFO interface as defined in TIS 1.3 is active.<BR><br>
  0x01 - FIFO interface as defined in PTP for TPM 2.0 is active.<BR><br>
  0x02 - CRB interface is active.<BR><br>
  0xFF - Contains no current active TPM interface type.<BR><br>
 @Prompt current active TPM interface type.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdActiveTpmInterfaceType</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001001E</CAPTION></TD><TD><CAPTION>UINT8</CAPTION></TD><TD><CAPTION>0xFF</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamic_common_PcdCRBIdleByPass gEfiSecurityPkgTokenSpaceGuid.PcdCRBIdleByPass
 This PCD records IdleBypass status supported by current active TPM interface.<br>
  According to TCG PTP spec 1.3, TPM with CRB interface can skip idle state and<br>
  directly move to CmdReady state. <BR><br>
  0x00 - Do not support IdleByPass.<BR><br>
  0x01 - Support IdleByPass.<BR><br>
  0xFF - IdleByPass State is not synced with TPM hardware.<BR><br>
 @Prompt IdleBypass status supported by current active TPM interface.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdCRBIdleByPass</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001001F</CAPTION></TD><TD><CAPTION>UINT8</CAPTION></TD><TD><CAPTION>0xFF</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamic_common_PcdFirmwareDebuggerInitialized gEfiSecurityPkgTokenSpaceGuid.PcdFirmwareDebuggerInitialized
 This PCD indicates if debugger exists. <BR><BR><br>
   TRUE  - Firmware debugger exists.<BR><br>
   FALSE - Firmware debugger doesn't exist.<BR><br>
 @Prompt Firmware debugger status.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdFirmwareDebuggerInitialized</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010009</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>FALSE</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamic_common_PcdOptionRomImageVerificationPolicy gEfiSecurityPkgTokenSpaceGuid.PcdOptionRomImageVerificationPolicy
 Image verification policy for OptionRom. Only following values are valid:<BR><BR><br>
  NOTE: Do NOT use 0x5 and 0x2 since it violates the UEFI specification and has been removed.<BR><br>
  0x00000000      Always trust the image.<BR><br>
  0x00000001      Never trust the image.<BR><br>
  0x00000002      Allow execution when there is security violation.<BR><br>
  0x00000003      Defer execution when there is security violation.<BR><br>
  0x00000004      Deny execution when there is security violation.<BR><br>
  0x00000005      Query user when there is security violation.<BR><br>
 @Prompt Set policy for the image from OptionRom.<br>
 @ValidRange 0x80000001 | 0x00000000 - 0x00000005<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdOptionRomImageVerificationPolicy</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00000001</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x04</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamic_common_PcdPhysicalPresenceCmdEnable gEfiSecurityPkgTokenSpaceGuid.PcdPhysicalPresenceCmdEnable
 Indicates whether the platform supports the software method of asserting physical presence.<BR><BR><br>
   TRUE  - Supports the software method of asserting physical presence.<BR><br>
   FALSE - Does not support the software method of asserting physical presence.<BR><br>
 @Prompt Enable software method of asserting physical presence.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdPhysicalPresenceCmdEnable</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010004</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>TRUE</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamic_common_PcdPhysicalPresenceHwEnable gEfiSecurityPkgTokenSpaceGuid.PcdPhysicalPresenceHwEnable
 Indicates whether the platform supports the hardware method of asserting physical presence.<BR><BR><br>
   TRUE  - Supports the hardware method of asserting physical presence.<BR><br>
   FALSE - Does not support the hardware method of asserting physical presence.<BR><br>
 @Prompt Enable hardware method of asserting physical presence.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdPhysicalPresenceHwEnable</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010005</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>TRUE</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamic_common_PcdPhysicalPresenceLifetimeLock gEfiSecurityPkgTokenSpaceGuid.PcdPhysicalPresenceLifetimeLock
 Indicates whether TPM physical presence is locked during platform initialization.<br>
  Once it is locked, it can not be unlocked for TPM life time.<BR><BR><br>
   TRUE  - Lock TPM physical presence asserting method.<BR><br>
   FALSE - Not lock TPM physical presence asserting method.<BR><br>
 @Prompt Lock TPM physical presence asserting method.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdPhysicalPresenceLifetimeLock</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010003</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>FALSE</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamic_common_PcdPkcs7CertBuffer gEfiSecurityPkgTokenSpaceGuid.PcdPkcs7CertBuffer
 Provides one PKCS7 cert used to verify Recovery and Capsule Update images<br>
  WARNING: The default value is treated as test key. Please do not use default value in the production.<br>
 @Prompt One PKCS7 cert used to verify Recovery and Capsule Update images<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdPkcs7CertBuffer</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010014</CAPTION></TD><TD><CAPTION>VOID*</CAPTION></TD><TD><CAPTION>{0x30, 0x82, 0x03, 0xec, 0x30, 0x82, 0x02, 0xd4, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x09, 0x00, 0xc0, 0x91, 0xc5, 0xe2, 0xb7, 0x66, 0xc0, 0xf8, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x0b, 0x05, 0x00, 0x30, 0x81, 0x82, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x43, 0x4e, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x08, 0x0c, 0x02, 0x53, 0x48, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x07, 0x0c, 0x02, 0x53, 0x48, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x09, 0x54, 0x69, 0x61, 0x6e, 0x6f, 0x43, 0x6f, 0x72, 0x65, 0x31, 0x0e, 0x30, 0x0c, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x0c, 0x05, 0x45, 0x44, 0x4b, 0x49, 0x49, 0x31, 0x11, 0x30, 0x0f, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x08, 0x54, 0x65, 0x73, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x31, 0x22, 0x30, 0x20, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x09, 0x01, 0x16, 0x13, 0x65, 0x64, 0x6b, 0x69, 0x69, 0x40, 0x74, 0x69, 0x61, 0x6e, 0x6f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6f, 0x72, 0x67, 0x30, 0x1e, 0x17, 0x0d, 0x31, 0x37, 0x30, 0x34, 0x31, 0x30, 0x30, 0x38, 0x32, 0x37, 0x34, 0x30, 0x5a, 0x17, 0x0d, 0x31, 0x37, 0x30, 0x35, 0x31, 0x30, 0x30, 0x38, 0x32, 0x37, 0x34, 0x30, 0x5a, 0x30, 0x81, 0x82, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x43, 0x4e, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x08, 0x0c, 0x02, 0x53, 0x48, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x07, 0x0c, 0x02, 0x53, 0x48, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x09, 0x54, 0x69, 0x61, 0x6e, 0x6f, 0x43, 0x6f, 0x72, 0x65, 0x31, 0x0e, 0x30, 0x0c, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x0c, 0x05, 0x45, 0x44, 0x4b, 0x49, 0x49, 0x31, 0x11, 0x30, 0x0f, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x08, 0x54, 0x65, 0x73, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x31, 0x22, 0x30, 0x20, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x09, 0x01, 0x16, 0x13, 0x65, 0x64, 0x6b, 0x69, 0x69, 0x40, 0x74, 0x69, 0x61, 0x6e, 0x6f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6f, 0x72, 0x67, 0x30, 0x82, 0x01, 0x22, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x01, 0x05, 0x00, 0x03, 0x82, 0x01, 0x0f, 0x00, 0x30, 0x82, 0x01, 0x0a, 0x02, 0x82, 0x01, 0x01, 0x00, 0xb9, 0x29, 0x29, 0x6c, 0x60, 0x0c, 0xd7, 0x23, 0xf6, 0x7d, 0xee, 0xf0, 0x62, 0xff, 0xd9, 0xc9, 0xaa, 0x55, 0x8c, 0x81, 0x95, 0x56, 0x3f, 0xb7, 0x56, 0x53, 0xb0, 0xc2, 0x82, 0x12, 0xc5, 0x3b, 0x75, 0x23, 0xb9, 0x4d, 0xd6, 0xc4, 0x55, 0x73, 0xf3, 0xaa, 0x95, 0xa8, 0x1b, 0xf3, 0x93, 0x7e, 0x9e, 0x40, 0xe4, 0x1d, 0x22, 0x9c, 0x93, 0x07, 0x0b, 0xd7, 0xaa, 0x5b, 0xd7, 0xe4, 0x1a, 0x21, 0x84, 0xd7, 0x63, 0x59, 0x03, 0x50, 0x1f, 0xf5, 0x14, 0x55, 0x93, 0x91, 0x9b, 0xf5, 0x52, 0xb0, 0xbf, 0x0e, 0x5c, 0x68, 0x3b, 0x59, 0x52, 0x98, 0x96, 0x56, 0xe1, 0xab, 0xc4, 0x43, 0xbb, 0x05, 0x57, 0x78, 0x45, 0x01, 0x9f, 0x58, 0x15, 0x53, 0x0e, 0x11, 0x94, 0x2f, 0x0e, 0xf1, 0xa6, 0x19, 0xa2, 0x6e, 0x86, 0x39, 0x2b, 0x33, 0x8d, 0xc7, 0xc5, 0xeb, 0xee, 0x1e, 0x33, 0xd3, 0x32, 0x94, 0xc1, 0x59, 0xc4, 0x0c, 0x97, 0x0b, 0x12, 0x48, 0x5f, 0x33, 0xf6, 0x60, 0x74, 0x7d, 0x57, 0xc2, 0x13, 0x2d, 0x7d, 0xa9, 0x87, 0xa3, 0x35, 0xea, 0x91, 0x83, 0x3f, 0x67, 0x7a, 0x92, 0x1f, 0x01, 0x53, 0x9f, 0x62, 0x5f, 0x99, 0x12, 0xfd, 0x73, 0x1b, 0x2d, 0x9e, 0x2b, 0x6c, 0x34, 0x49, 0xaf, 0x4f, 0x07, 0x8f, 0xc0, 0xe9, 0x6b, 0x9e, 0x5f, 0x79, 0x35, 0xda, 0x2a, 0x5c, 0x88, 0xee, 0xf6, 0x48, 0x61, 0xda, 0x96, 0xe3, 0x48, 0x46, 0xa0, 0x94, 0x1c, 0x9d, 0xf6, 0x5c, 0x87, 0x0e, 0xef, 0x74, 0x09, 0x91, 0x0d, 0x3d, 0x5a, 0xe7, 0xc5, 0x4c, 0x8a, 0x7a, 0xac, 0xa1, 0x85, 0xb6, 0x67, 0x44, 0x17, 0x55, 0x52, 0x3a, 0xe8, 0x11, 0x4d, 0x58, 0xa2, 0x93, 0x00, 0x62, 0xea, 0x7b, 0x80, 0xed, 0xcf, 0xbd, 0xdf, 0x75, 0x80, 0x4b, 0xb9, 0x65, 0x63, 0xad, 0x0b, 0x4d, 0x74, 0xfa, 0x59, 0x02, 0x03, 0x01, 0x00, 0x01, 0xa3, 0x63, 0x30, 0x61, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0x16, 0xaa, 0xd6, 0x8e, 0x1b, 0x2d, 0x43, 0xf3, 0x2d, 0xb0, 0x24, 0xad, 0x36, 0x65, 0x3f, 0xb2, 0xfa, 0xb1, 0x2c, 0xed, 0x30, 0x1f, 0x06, 0x03, 0x55, 0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0x16, 0xaa, 0xd6, 0x8e, 0x1b, 0x2d, 0x43, 0xf3, 0x2d, 0xb0, 0x24, 0xad, 0x36, 0x65, 0x3f, 0xb2, 0xfa, 0xb1, 0x2c, 0xed, 0x30, 0x0f, 0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x05, 0x30, 0x03, 0x01, 0x01, 0xff, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff, 0x04, 0x04, 0x03, 0x02, 0x01, 0x86, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x0b, 0x05, 0x00, 0x03, 0x82, 0x01, 0x01, 0x00, 0x95, 0xde, 0xdf, 0xa4, 0x14, 0xdb, 0x92, 0x22, 0x78, 0x1a, 0xbd, 0x31, 0x9d, 0x1e, 0xd7, 0x2f, 0x0a, 0x10, 0x11, 0x5d, 0x74, 0x61, 0xe8, 0x30, 0xc4, 0xf3, 0x15, 0xe9, 0x30, 0x54, 0xf4, 0xbb, 0x0c, 0x04, 0x78, 0x13, 0x5d, 0x2c, 0xdd, 0x8c, 0x92, 0x90, 0xd1, 0x9c, 0xd0, 0xd0, 0x18, 0xa3, 0xa3, 0xfc, 0x8c, 0x28, 0x5a, 0xd4, 0x91, 0x4d, 0x08, 0xc3, 0xf6, 0x1a, 0xc8, 0xdd, 0xa6, 0x08, 0x58, 0xe2, 0x15, 0x95, 0xfb, 0x2d, 0x2d, 0x8a, 0xb1, 0x30, 0x80, 0xbd, 0x9a, 0xb6, 0xe1, 0x2c, 0x20, 0x3e, 0xdd, 0xc4, 0xc7, 0x55, 0x65, 0xcf, 0x28, 0x17, 0xf4, 0xee, 0xda, 0xbe, 0x77, 0x70, 0xd5, 0x52, 0xd6, 0x15, 0x7a, 0xfb, 0xad, 0xaf, 0xfd, 0xd5, 0x45, 0x90, 0x5a, 0xe6, 0x31, 0x42, 0xd7, 0x84, 0xb3, 0x49, 0x56, 0x6a, 0xd3, 0x47, 0xf3, 0xbf, 0x68, 0x60, 0x8b, 0x0f, 0xe2, 0xaf, 0xf4, 0xe3, 0xec, 0x12, 0xb9, 0xe2, 0x3a, 0x16, 0x11, 0x4e, 0x4d, 0x73, 0x79, 0xaf, 0x47, 0x85, 0x4c, 0x76, 0x26, 0x9e, 0x8b, 0x32, 0xc0, 0x8e, 0xc2, 0xdc, 0x27, 0xa6, 0xef, 0xac, 0x93, 0x9e, 0xa1, 0x5e, 0xcf, 0x34, 0x45, 0xe0, 0x2a, 0xc7, 0x9d, 0x4d, 0xd7, 0xd7, 0x37, 0x72, 0x97, 0xf8, 0x58, 0xf9, 0xb6, 0x35, 0x48, 0xf1, 0xd1, 0x0a, 0x72, 0x7f, 0xfd, 0x4d, 0x7c, 0xe9, 0xcc, 0xd8, 0x48, 0x1b, 0x49, 0x52, 0x53, 0xde, 0x51, 0x01, 0x53, 0x35, 0xbc, 0x90, 0xcd, 0x8c, 0x8a, 0xcc, 0x43, 0x20, 0xa7, 0x45, 0xff, 0x2b, 0x55, 0xb0, 0x8b, 0x2d, 0xff, 0x55, 0x15, 0x4b, 0x84, 0xd0, 0xc3, 0xd3, 0x90, 0x9c, 0x94, 0x4b, 0x55, 0xd5, 0x62, 0xea, 0x22, 0xab, 0x62, 0x68, 0xdd, 0x53, 0xc6, 0xdc, 0xa5, 0xdd, 0x9a, 0x2d, 0x8e, 0x79, 0x7c, 0x2e, 0x9c, 0xe4, 0x66, 0x80, 0x8c, 0x1d}</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamic_common_PcdRandomizePlatformHierarchy gEfiSecurityPkgTokenSpaceGuid.PcdRandomizePlatformHierarchy
 Indicates whether the TPM2 platform hierarchy will be disabled by using<br>
  a random password or by disabling the hierarchy<br>
   TRUE  - A random password will be used<br>
   FALSE - The hierarchy will be disabled<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdRandomizePlatformHierarchy</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010024</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>TRUE</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamic_common_PcdRsa2048Sha256PublicKeyBuffer gEfiSecurityPkgTokenSpaceGuid.PcdRsa2048Sha256PublicKeyBuffer
 Provides one or more SHA 256 Hashes of the RSA 2048 public keys used to verify Recovery and Capsule Update images<br>
  WARNING: The default value is treated as test key. Please do not use default value in the production.<br>
 @Prompt One or more SHA 256 Hashes of RSA 2048 bit public keys used to verify Recovery and Capsule Update images<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdRsa2048Sha256PublicKeyBuffer</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010013</CAPTION></TD><TD><CAPTION>VOID*</CAPTION></TD><TD><CAPTION>{0x91, 0x29, 0xc4, 0xbd, 0xea, 0x6d, 0xda, 0xb3, 0xaa, 0x6f, 0x50, 0x16, 0xfc, 0xdb, 0x4b, 0x7e, 0x3c, 0xd6, 0xdc, 0xa4, 0x7a, 0x0e, 0xdd, 0xe6, 0x15, 0x8c, 0x73, 0x96, 0xa2, 0xd4, 0xa6, 0x4d}</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamic_common_PcdSkipHddPasswordPrompt gEfiSecurityPkgTokenSpaceGuid.PcdSkipHddPasswordPrompt
 Indicates if Hdd Password driver skip password prompt.<BR><BR><br>
   TRUE  - Skip password prompt.<BR><br>
   FALSE - Does not skip password prompt.<BR><br>
 @Prompt Skip Hdd Password prompt.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdSkipHddPasswordPrompt</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010021</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>FALSE</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamic_common_PcdSkipOpalPasswordPrompt gEfiSecurityPkgTokenSpaceGuid.PcdSkipOpalPasswordPrompt
 Indicates if Opal DXE driver skip password prompt.<BR><BR><br>
   TRUE  - Skip password prompt.<BR><br>
   FALSE - Does not skip password prompt.<BR><br>
 @Prompt Skip Opal DXE driver password prompt.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdSkipOpalPasswordPrompt</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010020</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>FALSE</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamic_common_PcdTcg2FinalLogAreaLen gEfiSecurityPkgTokenSpaceGuid.PcdTcg2FinalLogAreaLen
 This PCD defines length(in bytes) of the TCG2 Final event log area.<br>
 @Prompt Length(in bytes) of the TCG2 Final event log area.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTcg2FinalLogAreaLen</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010018</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x8000</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamic_common_PcdTcg2HashAlgorithmBitmap gEfiSecurityPkgTokenSpaceGuid.PcdTcg2HashAlgorithmBitmap
 This PCD indicated final BIOS supported Hash mask.<br>
    Bios may choose to register a subset of PcdTpm2HashMask.<br>
    So this PCD is final value of how many hash algo is extended to PCR.<br>
 If software HashLib(HashLibBaseCryptoRouter) solution is chosen, this PCD<br>
 has no need to be configured in platform dsc and will be set to correct<br>
 value by the HashLib instance according to the HashInstanceLib instances<br>
 linked, and the value of this PCD should be got in module entrypoint.<br>
 @Prompt Hash Algorithm bitmap.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTcg2HashAlgorithmBitmap</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010016</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0xFFFFFFFF</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamic_common_PcdTcg2NumberOfPCRBanks gEfiSecurityPkgTokenSpaceGuid.PcdTcg2NumberOfPCRBanks
 This PCR means the OEM configured number of PCR banks.<br>
  0 means dynamic get from supported HASH algorithm<br>
 @Prompt OEM configured number of PCR banks.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTcg2NumberOfPCRBanks</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010015</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x0</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamic_common_PcdTcg2PhysicalPresenceFlags gEfiSecurityPkgTokenSpaceGuid.PcdTcg2PhysicalPresenceFlags
 This PCD defines initial setting of TCG2 Persistent Firmware Management Flags<br>
 PCD can be configured for different settings in different scenarios<br>
 This PCD follows UEFI TCG2 library definition bit of the BIOS TPM/Storage Management Flags<BR><br>
    BIT0  -  Reserved <BR><br>
    BIT1  -  TCG2_BIOS_TPM_MANAGEMENT_FLAG_PP_REQUIRED_FOR_CLEAR <BR><br>
    BIT2  -  Reserved <BR><br>
    BIT3  -  TCG2_LIB_PP_FLAG_RESET_TRACK <BR><br>
    BIT4  -  TCG2_BIOS_TPM_MANAGEMENT_FLAG_PP_REQUIRED_FOR_TURN_ON <BR><br>
    BIT5  -  TCG2_BIOS_TPM_MANAGEMENT_FLAG_PP_REQUIRED_FOR_TURN_OFF <BR><br>
    BIT6  -  TCG2_BIOS_TPM_MANAGEMENT_FLAG_PP_REQUIRED_FOR_CHANGE_EPS <BR><br>
    BIT7  -  TCG2_BIOS_TPM_MANAGEMENT_FLAG_PP_REQUIRED_FOR_CHANGE_PCRS <BR><br>
    BIT16 -  TCG2_BIOS_STORAGE_MANAGEMENT_FLAG_PP_REQUIRED_FOR_ENABLE_BLOCK_SID <BR><br>
    BIT17 -  TCG2_BIOS_STORAGE_MANAGEMENT_FLAG_PP_REQUIRED_FOR_DISABLE_BLOCK_SID <BR><br>
    BIT18 -  TCG2_BIOS_STORAGE_MANAGEMENT_FLAG_ENABLE_BLOCK_SID <BR><br>
 @Prompt Initial setting of TCG2 Persistent Firmware Management Flags<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTcg2PhysicalPresenceFlags</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001001B</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x700E2</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamic_common_PcdTcgLogAreaMinLen gEfiSecurityPkgTokenSpaceGuid.PcdTcgLogAreaMinLen
 This PCD defines minimum length(in bytes) of the system preboot TCG event log area(LAML).<br>
  For PC Client Implementation spec up to and including 1.2 the minimum log size is 64KB.<br>
 @Prompt Minimum length(in bytes) of the system preboot TCG event log area(LAML).<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTcgLogAreaMinLen</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010017</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x10000</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamic_common_PcdTcgPhysicalPresenceInterfaceVer gEfiSecurityPkgTokenSpaceGuid.PcdTcgPhysicalPresenceInterfaceVer
 Null-terminated string of the Version of Physical Presence interface supported by platform.<BR><BR><br>
 To support configuring from setup page, this PCD can be DynamicHii type and map to a setup option.<BR><br>
 For example, map to TCG2_VERSION.PpiVersion to be configured by Tcg2ConfigDxe driver.<BR><br>
 gEfiSecurityPkgTokenSpaceGuid.PcdTcgPhysicalPresenceInterfaceVer|L"TCG2_VERSION"|gTcg2ConfigFormSetGuid|0x0|"1.3"|NV,BS<BR><br>
 @Prompt Version of Physical Presence interface supported by platform.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTcgPhysicalPresenceInterfaceVer</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00000008</CAPTION></TD><TD><CAPTION>VOID*</CAPTION></TD><TD><CAPTION>"1.3"</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamic_common_PcdTpm2AcpiTableLaml gEfiSecurityPkgTokenSpaceGuid.PcdTpm2AcpiTableLaml
 This PCD records LAML field in TPM2 ACPI table.<br>
 @Prompt Tpm2AcpiTableLaml LAML field in TPM2 ACPI table.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpm2AcpiTableLaml</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010022</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamic_common_PcdTpm2AcpiTableLasa gEfiSecurityPkgTokenSpaceGuid.PcdTpm2AcpiTableLasa
 This PCD records LASA field in TPM2 ACPI table.<br>
 @Prompt Tpm2AcpiTableLasa LASA field in TPM2 ACPI table.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpm2AcpiTableLasa</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010023</CAPTION></TD><TD><CAPTION>UINT64</CAPTION></TD><TD><CAPTION>0</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamic_common_PcdTpm2AcpiTableRev gEfiSecurityPkgTokenSpaceGuid.PcdTpm2AcpiTableRev
 Indicate the TPM2 ACPI table revision. Rev 4 has been defined since TCG ACPI Specification Rev 00.37.<BR><BR><br>
 To support configuring from setup page, this PCD can be DynamicHii type and map to a setup option.<BR><br>
 For example, map to TCG2_VERSION.Tpm2AcpiTableRev to be configured by Tcg2ConfigDxe driver.<BR><br>
 gEfiSecurityPkgTokenSpaceGuid.PcdTpm2AcpiTableRev|L"TCG2_VERSION"|gTcg2ConfigFormSetGuid|0x8|3|NV,BS<BR><br>
 @Prompt Revision of TPM2 ACPI table.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpm2AcpiTableRev</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001001A</CAPTION></TD><TD><CAPTION>UINT8</CAPTION></TD><TD><CAPTION>3</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamic_common_PcdTpm2CurrentIrqNum gEfiSecurityPkgTokenSpaceGuid.PcdTpm2CurrentIrqNum
 Indicate current TPM2 Interrupt Number reported by _CRS control method.<BR><BR><br>
 TPM2 Interrupt feature is disabled If the pcd is set to 0.<BR><br>
 @Prompt Current TPM2 Interrupt Number<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpm2CurrentIrqNum</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001001C</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x00</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamic_common_PcdTpm2HashMask gEfiSecurityPkgTokenSpaceGuid.PcdTpm2HashMask
 This PCD indicates Hash mask for TPM 2.0. Bit definition strictly follows TCG Algorithm Registry.<BR><BR><br>
  If this bit is set, that means this algorithm is needed to extend to PCR.<BR><br>
  If this bit is clear, that means this algorithm is NOT needed to extend to PCR.<BR><br>
  If all the bits are clear, that means hash algorithm is determined by current Active PCR Banks.<BR><br>
    BIT0  -  SHA1.<BR><br>
    BIT1  -  SHA256.<BR><br>
    BIT2  -  SHA384.<BR><br>
    BIT3  -  SHA512.<BR><br>
    BIT4  -  SM3_256.<BR><br>
 @Prompt Hash mask for TPM 2.0<br>
 @ValidRange 0x80000001 | 0x00000000 - 0x0000001F<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpm2HashMask</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010010</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x0000001F</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamic_common_PcdTpm2InitializationPolicy gEfiSecurityPkgTokenSpaceGuid.PcdTpm2InitializationPolicy
 This PCD indicates the initialization policy for TPM 2.0.<BR><BR><br>
  If 0, no initialization needed - most likely used for chipset SRTM solution, in which TPM is already initialized.<BR><br>
  If 1, initialization needed.<BR><br>
 @Prompt TPM 2.0 device initialization policy.<BR><br>
 @ValidRange 0x80000001 | 0x00 - 0x1<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpm2InitializationPolicy</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001000A</CAPTION></TD><TD><CAPTION>UINT8</CAPTION></TD><TD><CAPTION>1</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamic_common_PcdTpm2PossibleIrqNumBuf gEfiSecurityPkgTokenSpaceGuid.PcdTpm2PossibleIrqNumBuf
 Indicate platform possible TPM2 Interrupt Number reported by _PRS control method.<BR><BR><br>
 Possible TPM2 Interrupt Number Buffer will not be reported if TPM2 Interrupt feature is disabled.<BR><br>
 @Prompt Possible TPM2 Interrupt Number buffer<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpm2PossibleIrqNumBuf</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001001D</CAPTION></TD><TD><CAPTION>VOID*</CAPTION></TD><TD><CAPTION>{0x00, 0x00, 0x00, 0x00}</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamic_common_PcdTpm2ScrtmPolicy gEfiSecurityPkgTokenSpaceGuid.PcdTpm2ScrtmPolicy
 This PCD indicates Static Core Root of Trust for Measurement (SCRTM) policy using TPM 2.0.<BR><BR><br>
  if 0, no SCRTM measurement needed - In this case, it is already done.<BR><br>
  if 1, SCRTM measurement done by BIOS.<BR><br>
 @Prompt SCRTM policy setting for TPM 2.0 device.<br>
 @ValidRange 0x80000001 | 0x00 - 0x1<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpm2ScrtmPolicy</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001000D</CAPTION></TD><TD><CAPTION>UINT8</CAPTION></TD><TD><CAPTION>1</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamic_common_PcdTpm2SelfTestPolicy gEfiSecurityPkgTokenSpaceGuid.PcdTpm2SelfTestPolicy
 This PCD indicates the TPM 2.0 SelfTest policy.<BR><BR><br>
  if 0, no SelfTest needed - most likely used for fTPM, because it might already be tested.<BR><br>
  if 1, SelfTest needed.<BR><br>
 @Prompt TPM 2.0 device selftest.<br>
 @ValidRange 0x80000001 | 0x00 - 0x1<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpm2SelfTestPolicy</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001000C</CAPTION></TD><TD><CAPTION>UINT8</CAPTION></TD><TD><CAPTION>1</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamic_common_PcdTpmAutoDetection gEfiSecurityPkgTokenSpaceGuid.PcdTpmAutoDetection
 This PCD indicates if BIOS auto detect TPM1.2 or dTPM2.0.<BR><BR><br>
  FALSE - No auto detection.<BR><br>
  TRUE  - Auto detection.<BR><br>
 @Prompt TPM type detection.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpmAutoDetection</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010011</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>TRUE</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamic_common_PcdTpmBaseAddress gEfiSecurityPkgTokenSpaceGuid.PcdTpmBaseAddress
 This PCD indicates TPM base address.<BR><BR><br>
 @Prompt TPM device address.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpmBaseAddress</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010012</CAPTION></TD><TD><CAPTION>UINT64</CAPTION></TD><TD><CAPTION>0xFED40000</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamic_common_PcdTpmInitializationPolicy gEfiSecurityPkgTokenSpaceGuid.PcdTpmInitializationPolicy
 This PCD indicates the initialization policy for TPM 1.2.<BR><BR><br>
  If 0, no initialization needed - most likely used for chipset SRTM solution, in which TPM is already initialized.<BR><br>
  If 1, initialization needed.<BR><br>
 @Prompt TPM 1.2 device initialization policy.<br>
 @ValidRange 0x80000001 | 0x00 - 0x1<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpmInitializationPolicy</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001000B</CAPTION></TD><TD><CAPTION>UINT8</CAPTION></TD><TD><CAPTION>1</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamic_common_PcdTpmInstanceGuid  gEfiSecurityPkgTokenSpaceGuid.PcdTpmInstanceGuid 
 Guid name to identify TPM instance.<BR><BR><br>
  NOTE: This Pcd must be FixedAtBuild if Standalone MM is used<br>
  TPM_DEVICE_INTERFACE_NONE means disable.<BR><br>
  TPM_DEVICE_INTERFACE_TPM12 means TPM 1.2 DTPM.<BR><br>
  TPM_DEVICE_INTERFACE_DTPM2 means TPM 2.0 DTPM.<BR><br>
  Other GUID value means other TPM 2.0 device.<BR><br>
 @Prompt TPM device type identifier<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpmInstanceGuid </CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001000F</CAPTION></TD><TD><CAPTION>VOID*</CAPTION></TD><TD><CAPTION>{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamic_common_PcdTpmPhysicalPresence gEfiSecurityPkgTokenSpaceGuid.PcdTpmPhysicalPresence
 Indicates the presence or absence of the platform operator during firmware booting.<br>
  If platform operator is not physical presence during boot. TPM will be locked and the TPM commands<br>
  that required operator physical presence can not run.<BR><BR><br>
   TRUE  - The platform operator is physically present.<BR><br>
   FALSE - The platform operator is not physically present.<BR><br>
 @Prompt Physical presence of the platform operator.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpmPhysicalPresence</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010001</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>TRUE</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamic_common_PcdTpmScrtmPolicy gEfiSecurityPkgTokenSpaceGuid.PcdTpmScrtmPolicy
 This PCD indicates Static Core Root of Trust for Measurement (SCRTM) policy using TPM 1.2.<BR><BR><br>
  if 0, no SCRTM measurement needed - In this case, it is already done.<BR><br>
  if 1, SCRTM measurement done by BIOS.<BR><br>
 @Prompt SCRTM policy setting for TPM 1.2 device<br>
 @ValidRange 0x80000001 | 0x00 - 0x1<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpmScrtmPolicy</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001000E</CAPTION></TD><TD><CAPTION>UINT8</CAPTION></TD><TD><CAPTION>1</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamic_common_PcdUserPhysicalPresence gEfiSecurityPkgTokenSpaceGuid.PcdUserPhysicalPresence
 Indicate whether a physical presence user exist.<br>
 When it is configured to Dynamic or DynamicEx, it can be set through detection using<br>
 a platform-specific method (e.g. Button pressed) in a actual platform in early boot phase.<BR><BR><br>
 @Prompt A physical presence user status<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdUserPhysicalPresence</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010019</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>FALSE</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamicEx_root_page PcdsDynamicEx
<p> \section content_index INDEX
<ul>
<li>\subpage pcd_PcdsDynamicEx_common_root_page "common" </li>
</ul>
 **/
/** \page pcd_PcdsDynamicEx_common_root_page common
<p> \section content_index INDEX
<ul>
<li>\subpage pcd_PcdsDynamicEx_common_PcdActiveTpmInterfaceType "gEfiSecurityPkgTokenSpaceGuid.PcdActiveTpmInterfaceType" </li>
<li>\subpage pcd_PcdsDynamicEx_common_PcdCRBIdleByPass "gEfiSecurityPkgTokenSpaceGuid.PcdCRBIdleByPass" </li>
<li>\subpage pcd_PcdsDynamicEx_common_PcdFirmwareDebuggerInitialized "gEfiSecurityPkgTokenSpaceGuid.PcdFirmwareDebuggerInitialized" </li>
<li>\subpage pcd_PcdsDynamicEx_common_PcdOptionRomImageVerificationPolicy "gEfiSecurityPkgTokenSpaceGuid.PcdOptionRomImageVerificationPolicy" </li>
<li>\subpage pcd_PcdsDynamicEx_common_PcdPhysicalPresenceCmdEnable "gEfiSecurityPkgTokenSpaceGuid.PcdPhysicalPresenceCmdEnable" </li>
<li>\subpage pcd_PcdsDynamicEx_common_PcdPhysicalPresenceHwEnable "gEfiSecurityPkgTokenSpaceGuid.PcdPhysicalPresenceHwEnable" </li>
<li>\subpage pcd_PcdsDynamicEx_common_PcdPhysicalPresenceLifetimeLock "gEfiSecurityPkgTokenSpaceGuid.PcdPhysicalPresenceLifetimeLock" </li>
<li>\subpage pcd_PcdsDynamicEx_common_PcdPkcs7CertBuffer "gEfiSecurityPkgTokenSpaceGuid.PcdPkcs7CertBuffer" </li>
<li>\subpage pcd_PcdsDynamicEx_common_PcdRandomizePlatformHierarchy "gEfiSecurityPkgTokenSpaceGuid.PcdRandomizePlatformHierarchy" </li>
<li>\subpage pcd_PcdsDynamicEx_common_PcdRsa2048Sha256PublicKeyBuffer "gEfiSecurityPkgTokenSpaceGuid.PcdRsa2048Sha256PublicKeyBuffer" </li>
<li>\subpage pcd_PcdsDynamicEx_common_PcdSkipHddPasswordPrompt "gEfiSecurityPkgTokenSpaceGuid.PcdSkipHddPasswordPrompt" </li>
<li>\subpage pcd_PcdsDynamicEx_common_PcdSkipOpalPasswordPrompt "gEfiSecurityPkgTokenSpaceGuid.PcdSkipOpalPasswordPrompt" </li>
<li>\subpage pcd_PcdsDynamicEx_common_PcdTcg2FinalLogAreaLen "gEfiSecurityPkgTokenSpaceGuid.PcdTcg2FinalLogAreaLen" </li>
<li>\subpage pcd_PcdsDynamicEx_common_PcdTcg2HashAlgorithmBitmap "gEfiSecurityPkgTokenSpaceGuid.PcdTcg2HashAlgorithmBitmap" </li>
<li>\subpage pcd_PcdsDynamicEx_common_PcdTcg2NumberOfPCRBanks "gEfiSecurityPkgTokenSpaceGuid.PcdTcg2NumberOfPCRBanks" </li>
<li>\subpage pcd_PcdsDynamicEx_common_PcdTcg2PhysicalPresenceFlags "gEfiSecurityPkgTokenSpaceGuid.PcdTcg2PhysicalPresenceFlags" </li>
<li>\subpage pcd_PcdsDynamicEx_common_PcdTcgLogAreaMinLen "gEfiSecurityPkgTokenSpaceGuid.PcdTcgLogAreaMinLen" </li>
<li>\subpage pcd_PcdsDynamicEx_common_PcdTcgPhysicalPresenceInterfaceVer "gEfiSecurityPkgTokenSpaceGuid.PcdTcgPhysicalPresenceInterfaceVer" </li>
<li>\subpage pcd_PcdsDynamicEx_common_PcdTpm2AcpiTableLaml "gEfiSecurityPkgTokenSpaceGuid.PcdTpm2AcpiTableLaml" </li>
<li>\subpage pcd_PcdsDynamicEx_common_PcdTpm2AcpiTableLasa "gEfiSecurityPkgTokenSpaceGuid.PcdTpm2AcpiTableLasa" </li>
<li>\subpage pcd_PcdsDynamicEx_common_PcdTpm2AcpiTableRev "gEfiSecurityPkgTokenSpaceGuid.PcdTpm2AcpiTableRev" </li>
<li>\subpage pcd_PcdsDynamicEx_common_PcdTpm2CurrentIrqNum "gEfiSecurityPkgTokenSpaceGuid.PcdTpm2CurrentIrqNum" </li>
<li>\subpage pcd_PcdsDynamicEx_common_PcdTpm2HashMask "gEfiSecurityPkgTokenSpaceGuid.PcdTpm2HashMask" </li>
<li>\subpage pcd_PcdsDynamicEx_common_PcdTpm2InitializationPolicy "gEfiSecurityPkgTokenSpaceGuid.PcdTpm2InitializationPolicy" </li>
<li>\subpage pcd_PcdsDynamicEx_common_PcdTpm2PossibleIrqNumBuf "gEfiSecurityPkgTokenSpaceGuid.PcdTpm2PossibleIrqNumBuf" </li>
<li>\subpage pcd_PcdsDynamicEx_common_PcdTpm2ScrtmPolicy "gEfiSecurityPkgTokenSpaceGuid.PcdTpm2ScrtmPolicy" </li>
<li>\subpage pcd_PcdsDynamicEx_common_PcdTpm2SelfTestPolicy "gEfiSecurityPkgTokenSpaceGuid.PcdTpm2SelfTestPolicy" </li>
<li>\subpage pcd_PcdsDynamicEx_common_PcdTpmAutoDetection "gEfiSecurityPkgTokenSpaceGuid.PcdTpmAutoDetection" </li>
<li>\subpage pcd_PcdsDynamicEx_common_PcdTpmBaseAddress "gEfiSecurityPkgTokenSpaceGuid.PcdTpmBaseAddress" </li>
<li>\subpage pcd_PcdsDynamicEx_common_PcdTpmInitializationPolicy "gEfiSecurityPkgTokenSpaceGuid.PcdTpmInitializationPolicy" </li>
<li>\subpage pcd_PcdsDynamicEx_common_PcdTpmInstanceGuid  "gEfiSecurityPkgTokenSpaceGuid.PcdTpmInstanceGuid " </li>
<li>\subpage pcd_PcdsDynamicEx_common_PcdTpmPhysicalPresence "gEfiSecurityPkgTokenSpaceGuid.PcdTpmPhysicalPresence" </li>
<li>\subpage pcd_PcdsDynamicEx_common_PcdTpmScrtmPolicy "gEfiSecurityPkgTokenSpaceGuid.PcdTpmScrtmPolicy" </li>
<li>\subpage pcd_PcdsDynamicEx_common_PcdUserPhysicalPresence "gEfiSecurityPkgTokenSpaceGuid.PcdUserPhysicalPresence" </li>
</ul>
 **/
/** \page pcd_PcdsDynamicEx_common_PcdActiveTpmInterfaceType gEfiSecurityPkgTokenSpaceGuid.PcdActiveTpmInterfaceType
 This PCD indicates current active TPM interface type.<br>
  According to TCG PTP spec 1.3, there are 3 types defined in TPM2_PTP_INTERFACE_TYPE.<BR><br>
  0x00 - FIFO interface as defined in TIS 1.3 is active.<BR><br>
  0x01 - FIFO interface as defined in PTP for TPM 2.0 is active.<BR><br>
  0x02 - CRB interface is active.<BR><br>
  0xFF - Contains no current active TPM interface type.<BR><br>
 @Prompt current active TPM interface type.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdActiveTpmInterfaceType</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001001E</CAPTION></TD><TD><CAPTION>UINT8</CAPTION></TD><TD><CAPTION>0xFF</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamicEx_common_PcdCRBIdleByPass gEfiSecurityPkgTokenSpaceGuid.PcdCRBIdleByPass
 This PCD records IdleBypass status supported by current active TPM interface.<br>
  According to TCG PTP spec 1.3, TPM with CRB interface can skip idle state and<br>
  directly move to CmdReady state. <BR><br>
  0x00 - Do not support IdleByPass.<BR><br>
  0x01 - Support IdleByPass.<BR><br>
  0xFF - IdleByPass State is not synced with TPM hardware.<BR><br>
 @Prompt IdleBypass status supported by current active TPM interface.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdCRBIdleByPass</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001001F</CAPTION></TD><TD><CAPTION>UINT8</CAPTION></TD><TD><CAPTION>0xFF</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamicEx_common_PcdFirmwareDebuggerInitialized gEfiSecurityPkgTokenSpaceGuid.PcdFirmwareDebuggerInitialized
 This PCD indicates if debugger exists. <BR><BR><br>
   TRUE  - Firmware debugger exists.<BR><br>
   FALSE - Firmware debugger doesn't exist.<BR><br>
 @Prompt Firmware debugger status.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdFirmwareDebuggerInitialized</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010009</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>FALSE</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamicEx_common_PcdOptionRomImageVerificationPolicy gEfiSecurityPkgTokenSpaceGuid.PcdOptionRomImageVerificationPolicy
 Image verification policy for OptionRom. Only following values are valid:<BR><BR><br>
  NOTE: Do NOT use 0x5 and 0x2 since it violates the UEFI specification and has been removed.<BR><br>
  0x00000000      Always trust the image.<BR><br>
  0x00000001      Never trust the image.<BR><br>
  0x00000002      Allow execution when there is security violation.<BR><br>
  0x00000003      Defer execution when there is security violation.<BR><br>
  0x00000004      Deny execution when there is security violation.<BR><br>
  0x00000005      Query user when there is security violation.<BR><br>
 @Prompt Set policy for the image from OptionRom.<br>
 @ValidRange 0x80000001 | 0x00000000 - 0x00000005<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdOptionRomImageVerificationPolicy</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00000001</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x04</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamicEx_common_PcdPhysicalPresenceCmdEnable gEfiSecurityPkgTokenSpaceGuid.PcdPhysicalPresenceCmdEnable
 Indicates whether the platform supports the software method of asserting physical presence.<BR><BR><br>
   TRUE  - Supports the software method of asserting physical presence.<BR><br>
   FALSE - Does not support the software method of asserting physical presence.<BR><br>
 @Prompt Enable software method of asserting physical presence.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdPhysicalPresenceCmdEnable</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010004</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>TRUE</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamicEx_common_PcdPhysicalPresenceHwEnable gEfiSecurityPkgTokenSpaceGuid.PcdPhysicalPresenceHwEnable
 Indicates whether the platform supports the hardware method of asserting physical presence.<BR><BR><br>
   TRUE  - Supports the hardware method of asserting physical presence.<BR><br>
   FALSE - Does not support the hardware method of asserting physical presence.<BR><br>
 @Prompt Enable hardware method of asserting physical presence.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdPhysicalPresenceHwEnable</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010005</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>TRUE</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamicEx_common_PcdPhysicalPresenceLifetimeLock gEfiSecurityPkgTokenSpaceGuid.PcdPhysicalPresenceLifetimeLock
 Indicates whether TPM physical presence is locked during platform initialization.<br>
  Once it is locked, it can not be unlocked for TPM life time.<BR><BR><br>
   TRUE  - Lock TPM physical presence asserting method.<BR><br>
   FALSE - Not lock TPM physical presence asserting method.<BR><br>
 @Prompt Lock TPM physical presence asserting method.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdPhysicalPresenceLifetimeLock</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010003</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>FALSE</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamicEx_common_PcdPkcs7CertBuffer gEfiSecurityPkgTokenSpaceGuid.PcdPkcs7CertBuffer
 Provides one PKCS7 cert used to verify Recovery and Capsule Update images<br>
  WARNING: The default value is treated as test key. Please do not use default value in the production.<br>
 @Prompt One PKCS7 cert used to verify Recovery and Capsule Update images<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdPkcs7CertBuffer</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010014</CAPTION></TD><TD><CAPTION>VOID*</CAPTION></TD><TD><CAPTION>{0x30, 0x82, 0x03, 0xec, 0x30, 0x82, 0x02, 0xd4, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x09, 0x00, 0xc0, 0x91, 0xc5, 0xe2, 0xb7, 0x66, 0xc0, 0xf8, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x0b, 0x05, 0x00, 0x30, 0x81, 0x82, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x43, 0x4e, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x08, 0x0c, 0x02, 0x53, 0x48, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x07, 0x0c, 0x02, 0x53, 0x48, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x09, 0x54, 0x69, 0x61, 0x6e, 0x6f, 0x43, 0x6f, 0x72, 0x65, 0x31, 0x0e, 0x30, 0x0c, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x0c, 0x05, 0x45, 0x44, 0x4b, 0x49, 0x49, 0x31, 0x11, 0x30, 0x0f, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x08, 0x54, 0x65, 0x73, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x31, 0x22, 0x30, 0x20, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x09, 0x01, 0x16, 0x13, 0x65, 0x64, 0x6b, 0x69, 0x69, 0x40, 0x74, 0x69, 0x61, 0x6e, 0x6f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6f, 0x72, 0x67, 0x30, 0x1e, 0x17, 0x0d, 0x31, 0x37, 0x30, 0x34, 0x31, 0x30, 0x30, 0x38, 0x32, 0x37, 0x34, 0x30, 0x5a, 0x17, 0x0d, 0x31, 0x37, 0x30, 0x35, 0x31, 0x30, 0x30, 0x38, 0x32, 0x37, 0x34, 0x30, 0x5a, 0x30, 0x81, 0x82, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x43, 0x4e, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x08, 0x0c, 0x02, 0x53, 0x48, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x07, 0x0c, 0x02, 0x53, 0x48, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x09, 0x54, 0x69, 0x61, 0x6e, 0x6f, 0x43, 0x6f, 0x72, 0x65, 0x31, 0x0e, 0x30, 0x0c, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x0c, 0x05, 0x45, 0x44, 0x4b, 0x49, 0x49, 0x31, 0x11, 0x30, 0x0f, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x08, 0x54, 0x65, 0x73, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x31, 0x22, 0x30, 0x20, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x09, 0x01, 0x16, 0x13, 0x65, 0x64, 0x6b, 0x69, 0x69, 0x40, 0x74, 0x69, 0x61, 0x6e, 0x6f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6f, 0x72, 0x67, 0x30, 0x82, 0x01, 0x22, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x01, 0x05, 0x00, 0x03, 0x82, 0x01, 0x0f, 0x00, 0x30, 0x82, 0x01, 0x0a, 0x02, 0x82, 0x01, 0x01, 0x00, 0xb9, 0x29, 0x29, 0x6c, 0x60, 0x0c, 0xd7, 0x23, 0xf6, 0x7d, 0xee, 0xf0, 0x62, 0xff, 0xd9, 0xc9, 0xaa, 0x55, 0x8c, 0x81, 0x95, 0x56, 0x3f, 0xb7, 0x56, 0x53, 0xb0, 0xc2, 0x82, 0x12, 0xc5, 0x3b, 0x75, 0x23, 0xb9, 0x4d, 0xd6, 0xc4, 0x55, 0x73, 0xf3, 0xaa, 0x95, 0xa8, 0x1b, 0xf3, 0x93, 0x7e, 0x9e, 0x40, 0xe4, 0x1d, 0x22, 0x9c, 0x93, 0x07, 0x0b, 0xd7, 0xaa, 0x5b, 0xd7, 0xe4, 0x1a, 0x21, 0x84, 0xd7, 0x63, 0x59, 0x03, 0x50, 0x1f, 0xf5, 0x14, 0x55, 0x93, 0x91, 0x9b, 0xf5, 0x52, 0xb0, 0xbf, 0x0e, 0x5c, 0x68, 0x3b, 0x59, 0x52, 0x98, 0x96, 0x56, 0xe1, 0xab, 0xc4, 0x43, 0xbb, 0x05, 0x57, 0x78, 0x45, 0x01, 0x9f, 0x58, 0x15, 0x53, 0x0e, 0x11, 0x94, 0x2f, 0x0e, 0xf1, 0xa6, 0x19, 0xa2, 0x6e, 0x86, 0x39, 0x2b, 0x33, 0x8d, 0xc7, 0xc5, 0xeb, 0xee, 0x1e, 0x33, 0xd3, 0x32, 0x94, 0xc1, 0x59, 0xc4, 0x0c, 0x97, 0x0b, 0x12, 0x48, 0x5f, 0x33, 0xf6, 0x60, 0x74, 0x7d, 0x57, 0xc2, 0x13, 0x2d, 0x7d, 0xa9, 0x87, 0xa3, 0x35, 0xea, 0x91, 0x83, 0x3f, 0x67, 0x7a, 0x92, 0x1f, 0x01, 0x53, 0x9f, 0x62, 0x5f, 0x99, 0x12, 0xfd, 0x73, 0x1b, 0x2d, 0x9e, 0x2b, 0x6c, 0x34, 0x49, 0xaf, 0x4f, 0x07, 0x8f, 0xc0, 0xe9, 0x6b, 0x9e, 0x5f, 0x79, 0x35, 0xda, 0x2a, 0x5c, 0x88, 0xee, 0xf6, 0x48, 0x61, 0xda, 0x96, 0xe3, 0x48, 0x46, 0xa0, 0x94, 0x1c, 0x9d, 0xf6, 0x5c, 0x87, 0x0e, 0xef, 0x74, 0x09, 0x91, 0x0d, 0x3d, 0x5a, 0xe7, 0xc5, 0x4c, 0x8a, 0x7a, 0xac, 0xa1, 0x85, 0xb6, 0x67, 0x44, 0x17, 0x55, 0x52, 0x3a, 0xe8, 0x11, 0x4d, 0x58, 0xa2, 0x93, 0x00, 0x62, 0xea, 0x7b, 0x80, 0xed, 0xcf, 0xbd, 0xdf, 0x75, 0x80, 0x4b, 0xb9, 0x65, 0x63, 0xad, 0x0b, 0x4d, 0x74, 0xfa, 0x59, 0x02, 0x03, 0x01, 0x00, 0x01, 0xa3, 0x63, 0x30, 0x61, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0x16, 0xaa, 0xd6, 0x8e, 0x1b, 0x2d, 0x43, 0xf3, 0x2d, 0xb0, 0x24, 0xad, 0x36, 0x65, 0x3f, 0xb2, 0xfa, 0xb1, 0x2c, 0xed, 0x30, 0x1f, 0x06, 0x03, 0x55, 0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0x16, 0xaa, 0xd6, 0x8e, 0x1b, 0x2d, 0x43, 0xf3, 0x2d, 0xb0, 0x24, 0xad, 0x36, 0x65, 0x3f, 0xb2, 0xfa, 0xb1, 0x2c, 0xed, 0x30, 0x0f, 0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x05, 0x30, 0x03, 0x01, 0x01, 0xff, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff, 0x04, 0x04, 0x03, 0x02, 0x01, 0x86, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x0b, 0x05, 0x00, 0x03, 0x82, 0x01, 0x01, 0x00, 0x95, 0xde, 0xdf, 0xa4, 0x14, 0xdb, 0x92, 0x22, 0x78, 0x1a, 0xbd, 0x31, 0x9d, 0x1e, 0xd7, 0x2f, 0x0a, 0x10, 0x11, 0x5d, 0x74, 0x61, 0xe8, 0x30, 0xc4, 0xf3, 0x15, 0xe9, 0x30, 0x54, 0xf4, 0xbb, 0x0c, 0x04, 0x78, 0x13, 0x5d, 0x2c, 0xdd, 0x8c, 0x92, 0x90, 0xd1, 0x9c, 0xd0, 0xd0, 0x18, 0xa3, 0xa3, 0xfc, 0x8c, 0x28, 0x5a, 0xd4, 0x91, 0x4d, 0x08, 0xc3, 0xf6, 0x1a, 0xc8, 0xdd, 0xa6, 0x08, 0x58, 0xe2, 0x15, 0x95, 0xfb, 0x2d, 0x2d, 0x8a, 0xb1, 0x30, 0x80, 0xbd, 0x9a, 0xb6, 0xe1, 0x2c, 0x20, 0x3e, 0xdd, 0xc4, 0xc7, 0x55, 0x65, 0xcf, 0x28, 0x17, 0xf4, 0xee, 0xda, 0xbe, 0x77, 0x70, 0xd5, 0x52, 0xd6, 0x15, 0x7a, 0xfb, 0xad, 0xaf, 0xfd, 0xd5, 0x45, 0x90, 0x5a, 0xe6, 0x31, 0x42, 0xd7, 0x84, 0xb3, 0x49, 0x56, 0x6a, 0xd3, 0x47, 0xf3, 0xbf, 0x68, 0x60, 0x8b, 0x0f, 0xe2, 0xaf, 0xf4, 0xe3, 0xec, 0x12, 0xb9, 0xe2, 0x3a, 0x16, 0x11, 0x4e, 0x4d, 0x73, 0x79, 0xaf, 0x47, 0x85, 0x4c, 0x76, 0x26, 0x9e, 0x8b, 0x32, 0xc0, 0x8e, 0xc2, 0xdc, 0x27, 0xa6, 0xef, 0xac, 0x93, 0x9e, 0xa1, 0x5e, 0xcf, 0x34, 0x45, 0xe0, 0x2a, 0xc7, 0x9d, 0x4d, 0xd7, 0xd7, 0x37, 0x72, 0x97, 0xf8, 0x58, 0xf9, 0xb6, 0x35, 0x48, 0xf1, 0xd1, 0x0a, 0x72, 0x7f, 0xfd, 0x4d, 0x7c, 0xe9, 0xcc, 0xd8, 0x48, 0x1b, 0x49, 0x52, 0x53, 0xde, 0x51, 0x01, 0x53, 0x35, 0xbc, 0x90, 0xcd, 0x8c, 0x8a, 0xcc, 0x43, 0x20, 0xa7, 0x45, 0xff, 0x2b, 0x55, 0xb0, 0x8b, 0x2d, 0xff, 0x55, 0x15, 0x4b, 0x84, 0xd0, 0xc3, 0xd3, 0x90, 0x9c, 0x94, 0x4b, 0x55, 0xd5, 0x62, 0xea, 0x22, 0xab, 0x62, 0x68, 0xdd, 0x53, 0xc6, 0xdc, 0xa5, 0xdd, 0x9a, 0x2d, 0x8e, 0x79, 0x7c, 0x2e, 0x9c, 0xe4, 0x66, 0x80, 0x8c, 0x1d}</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamicEx_common_PcdRandomizePlatformHierarchy gEfiSecurityPkgTokenSpaceGuid.PcdRandomizePlatformHierarchy
 Indicates whether the TPM2 platform hierarchy will be disabled by using<br>
  a random password or by disabling the hierarchy<br>
   TRUE  - A random password will be used<br>
   FALSE - The hierarchy will be disabled<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdRandomizePlatformHierarchy</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010024</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>TRUE</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamicEx_common_PcdRsa2048Sha256PublicKeyBuffer gEfiSecurityPkgTokenSpaceGuid.PcdRsa2048Sha256PublicKeyBuffer
 Provides one or more SHA 256 Hashes of the RSA 2048 public keys used to verify Recovery and Capsule Update images<br>
  WARNING: The default value is treated as test key. Please do not use default value in the production.<br>
 @Prompt One or more SHA 256 Hashes of RSA 2048 bit public keys used to verify Recovery and Capsule Update images<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdRsa2048Sha256PublicKeyBuffer</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010013</CAPTION></TD><TD><CAPTION>VOID*</CAPTION></TD><TD><CAPTION>{0x91, 0x29, 0xc4, 0xbd, 0xea, 0x6d, 0xda, 0xb3, 0xaa, 0x6f, 0x50, 0x16, 0xfc, 0xdb, 0x4b, 0x7e, 0x3c, 0xd6, 0xdc, 0xa4, 0x7a, 0x0e, 0xdd, 0xe6, 0x15, 0x8c, 0x73, 0x96, 0xa2, 0xd4, 0xa6, 0x4d}</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamicEx_common_PcdSkipHddPasswordPrompt gEfiSecurityPkgTokenSpaceGuid.PcdSkipHddPasswordPrompt
 Indicates if Hdd Password driver skip password prompt.<BR><BR><br>
   TRUE  - Skip password prompt.<BR><br>
   FALSE - Does not skip password prompt.<BR><br>
 @Prompt Skip Hdd Password prompt.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdSkipHddPasswordPrompt</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010021</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>FALSE</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamicEx_common_PcdSkipOpalPasswordPrompt gEfiSecurityPkgTokenSpaceGuid.PcdSkipOpalPasswordPrompt
 Indicates if Opal DXE driver skip password prompt.<BR><BR><br>
   TRUE  - Skip password prompt.<BR><br>
   FALSE - Does not skip password prompt.<BR><br>
 @Prompt Skip Opal DXE driver password prompt.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdSkipOpalPasswordPrompt</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010020</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>FALSE</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamicEx_common_PcdTcg2FinalLogAreaLen gEfiSecurityPkgTokenSpaceGuid.PcdTcg2FinalLogAreaLen
 This PCD defines length(in bytes) of the TCG2 Final event log area.<br>
 @Prompt Length(in bytes) of the TCG2 Final event log area.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTcg2FinalLogAreaLen</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010018</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x8000</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamicEx_common_PcdTcg2HashAlgorithmBitmap gEfiSecurityPkgTokenSpaceGuid.PcdTcg2HashAlgorithmBitmap
 This PCD indicated final BIOS supported Hash mask.<br>
    Bios may choose to register a subset of PcdTpm2HashMask.<br>
    So this PCD is final value of how many hash algo is extended to PCR.<br>
 If software HashLib(HashLibBaseCryptoRouter) solution is chosen, this PCD<br>
 has no need to be configured in platform dsc and will be set to correct<br>
 value by the HashLib instance according to the HashInstanceLib instances<br>
 linked, and the value of this PCD should be got in module entrypoint.<br>
 @Prompt Hash Algorithm bitmap.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTcg2HashAlgorithmBitmap</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010016</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0xFFFFFFFF</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamicEx_common_PcdTcg2NumberOfPCRBanks gEfiSecurityPkgTokenSpaceGuid.PcdTcg2NumberOfPCRBanks
 This PCR means the OEM configured number of PCR banks.<br>
  0 means dynamic get from supported HASH algorithm<br>
 @Prompt OEM configured number of PCR banks.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTcg2NumberOfPCRBanks</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010015</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x0</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamicEx_common_PcdTcg2PhysicalPresenceFlags gEfiSecurityPkgTokenSpaceGuid.PcdTcg2PhysicalPresenceFlags
 This PCD defines initial setting of TCG2 Persistent Firmware Management Flags<br>
 PCD can be configured for different settings in different scenarios<br>
 This PCD follows UEFI TCG2 library definition bit of the BIOS TPM/Storage Management Flags<BR><br>
    BIT0  -  Reserved <BR><br>
    BIT1  -  TCG2_BIOS_TPM_MANAGEMENT_FLAG_PP_REQUIRED_FOR_CLEAR <BR><br>
    BIT2  -  Reserved <BR><br>
    BIT3  -  TCG2_LIB_PP_FLAG_RESET_TRACK <BR><br>
    BIT4  -  TCG2_BIOS_TPM_MANAGEMENT_FLAG_PP_REQUIRED_FOR_TURN_ON <BR><br>
    BIT5  -  TCG2_BIOS_TPM_MANAGEMENT_FLAG_PP_REQUIRED_FOR_TURN_OFF <BR><br>
    BIT6  -  TCG2_BIOS_TPM_MANAGEMENT_FLAG_PP_REQUIRED_FOR_CHANGE_EPS <BR><br>
    BIT7  -  TCG2_BIOS_TPM_MANAGEMENT_FLAG_PP_REQUIRED_FOR_CHANGE_PCRS <BR><br>
    BIT16 -  TCG2_BIOS_STORAGE_MANAGEMENT_FLAG_PP_REQUIRED_FOR_ENABLE_BLOCK_SID <BR><br>
    BIT17 -  TCG2_BIOS_STORAGE_MANAGEMENT_FLAG_PP_REQUIRED_FOR_DISABLE_BLOCK_SID <BR><br>
    BIT18 -  TCG2_BIOS_STORAGE_MANAGEMENT_FLAG_ENABLE_BLOCK_SID <BR><br>
 @Prompt Initial setting of TCG2 Persistent Firmware Management Flags<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTcg2PhysicalPresenceFlags</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001001B</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x700E2</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamicEx_common_PcdTcgLogAreaMinLen gEfiSecurityPkgTokenSpaceGuid.PcdTcgLogAreaMinLen
 This PCD defines minimum length(in bytes) of the system preboot TCG event log area(LAML).<br>
  For PC Client Implementation spec up to and including 1.2 the minimum log size is 64KB.<br>
 @Prompt Minimum length(in bytes) of the system preboot TCG event log area(LAML).<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTcgLogAreaMinLen</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010017</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x10000</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamicEx_common_PcdTcgPhysicalPresenceInterfaceVer gEfiSecurityPkgTokenSpaceGuid.PcdTcgPhysicalPresenceInterfaceVer
 Null-terminated string of the Version of Physical Presence interface supported by platform.<BR><BR><br>
 To support configuring from setup page, this PCD can be DynamicHii type and map to a setup option.<BR><br>
 For example, map to TCG2_VERSION.PpiVersion to be configured by Tcg2ConfigDxe driver.<BR><br>
 gEfiSecurityPkgTokenSpaceGuid.PcdTcgPhysicalPresenceInterfaceVer|L"TCG2_VERSION"|gTcg2ConfigFormSetGuid|0x0|"1.3"|NV,BS<BR><br>
 @Prompt Version of Physical Presence interface supported by platform.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTcgPhysicalPresenceInterfaceVer</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00000008</CAPTION></TD><TD><CAPTION>VOID*</CAPTION></TD><TD><CAPTION>"1.3"</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamicEx_common_PcdTpm2AcpiTableLaml gEfiSecurityPkgTokenSpaceGuid.PcdTpm2AcpiTableLaml
 This PCD records LAML field in TPM2 ACPI table.<br>
 @Prompt Tpm2AcpiTableLaml LAML field in TPM2 ACPI table.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpm2AcpiTableLaml</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010022</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamicEx_common_PcdTpm2AcpiTableLasa gEfiSecurityPkgTokenSpaceGuid.PcdTpm2AcpiTableLasa
 This PCD records LASA field in TPM2 ACPI table.<br>
 @Prompt Tpm2AcpiTableLasa LASA field in TPM2 ACPI table.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpm2AcpiTableLasa</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010023</CAPTION></TD><TD><CAPTION>UINT64</CAPTION></TD><TD><CAPTION>0</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamicEx_common_PcdTpm2AcpiTableRev gEfiSecurityPkgTokenSpaceGuid.PcdTpm2AcpiTableRev
 Indicate the TPM2 ACPI table revision. Rev 4 has been defined since TCG ACPI Specification Rev 00.37.<BR><BR><br>
 To support configuring from setup page, this PCD can be DynamicHii type and map to a setup option.<BR><br>
 For example, map to TCG2_VERSION.Tpm2AcpiTableRev to be configured by Tcg2ConfigDxe driver.<BR><br>
 gEfiSecurityPkgTokenSpaceGuid.PcdTpm2AcpiTableRev|L"TCG2_VERSION"|gTcg2ConfigFormSetGuid|0x8|3|NV,BS<BR><br>
 @Prompt Revision of TPM2 ACPI table.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpm2AcpiTableRev</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001001A</CAPTION></TD><TD><CAPTION>UINT8</CAPTION></TD><TD><CAPTION>3</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamicEx_common_PcdTpm2CurrentIrqNum gEfiSecurityPkgTokenSpaceGuid.PcdTpm2CurrentIrqNum
 Indicate current TPM2 Interrupt Number reported by _CRS control method.<BR><BR><br>
 TPM2 Interrupt feature is disabled If the pcd is set to 0.<BR><br>
 @Prompt Current TPM2 Interrupt Number<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpm2CurrentIrqNum</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001001C</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x00</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamicEx_common_PcdTpm2HashMask gEfiSecurityPkgTokenSpaceGuid.PcdTpm2HashMask
 This PCD indicates Hash mask for TPM 2.0. Bit definition strictly follows TCG Algorithm Registry.<BR><BR><br>
  If this bit is set, that means this algorithm is needed to extend to PCR.<BR><br>
  If this bit is clear, that means this algorithm is NOT needed to extend to PCR.<BR><br>
  If all the bits are clear, that means hash algorithm is determined by current Active PCR Banks.<BR><br>
    BIT0  -  SHA1.<BR><br>
    BIT1  -  SHA256.<BR><br>
    BIT2  -  SHA384.<BR><br>
    BIT3  -  SHA512.<BR><br>
    BIT4  -  SM3_256.<BR><br>
 @Prompt Hash mask for TPM 2.0<br>
 @ValidRange 0x80000001 | 0x00000000 - 0x0000001F<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpm2HashMask</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010010</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x0000001F</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamicEx_common_PcdTpm2InitializationPolicy gEfiSecurityPkgTokenSpaceGuid.PcdTpm2InitializationPolicy
 This PCD indicates the initialization policy for TPM 2.0.<BR><BR><br>
  If 0, no initialization needed - most likely used for chipset SRTM solution, in which TPM is already initialized.<BR><br>
  If 1, initialization needed.<BR><br>
 @Prompt TPM 2.0 device initialization policy.<BR><br>
 @ValidRange 0x80000001 | 0x00 - 0x1<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpm2InitializationPolicy</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001000A</CAPTION></TD><TD><CAPTION>UINT8</CAPTION></TD><TD><CAPTION>1</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamicEx_common_PcdTpm2PossibleIrqNumBuf gEfiSecurityPkgTokenSpaceGuid.PcdTpm2PossibleIrqNumBuf
 Indicate platform possible TPM2 Interrupt Number reported by _PRS control method.<BR><BR><br>
 Possible TPM2 Interrupt Number Buffer will not be reported if TPM2 Interrupt feature is disabled.<BR><br>
 @Prompt Possible TPM2 Interrupt Number buffer<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpm2PossibleIrqNumBuf</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001001D</CAPTION></TD><TD><CAPTION>VOID*</CAPTION></TD><TD><CAPTION>{0x00, 0x00, 0x00, 0x00}</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamicEx_common_PcdTpm2ScrtmPolicy gEfiSecurityPkgTokenSpaceGuid.PcdTpm2ScrtmPolicy
 This PCD indicates Static Core Root of Trust for Measurement (SCRTM) policy using TPM 2.0.<BR><BR><br>
  if 0, no SCRTM measurement needed - In this case, it is already done.<BR><br>
  if 1, SCRTM measurement done by BIOS.<BR><br>
 @Prompt SCRTM policy setting for TPM 2.0 device.<br>
 @ValidRange 0x80000001 | 0x00 - 0x1<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpm2ScrtmPolicy</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001000D</CAPTION></TD><TD><CAPTION>UINT8</CAPTION></TD><TD><CAPTION>1</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamicEx_common_PcdTpm2SelfTestPolicy gEfiSecurityPkgTokenSpaceGuid.PcdTpm2SelfTestPolicy
 This PCD indicates the TPM 2.0 SelfTest policy.<BR><BR><br>
  if 0, no SelfTest needed - most likely used for fTPM, because it might already be tested.<BR><br>
  if 1, SelfTest needed.<BR><br>
 @Prompt TPM 2.0 device selftest.<br>
 @ValidRange 0x80000001 | 0x00 - 0x1<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpm2SelfTestPolicy</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001000C</CAPTION></TD><TD><CAPTION>UINT8</CAPTION></TD><TD><CAPTION>1</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamicEx_common_PcdTpmAutoDetection gEfiSecurityPkgTokenSpaceGuid.PcdTpmAutoDetection
 This PCD indicates if BIOS auto detect TPM1.2 or dTPM2.0.<BR><BR><br>
  FALSE - No auto detection.<BR><br>
  TRUE  - Auto detection.<BR><br>
 @Prompt TPM type detection.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpmAutoDetection</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010011</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>TRUE</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamicEx_common_PcdTpmBaseAddress gEfiSecurityPkgTokenSpaceGuid.PcdTpmBaseAddress
 This PCD indicates TPM base address.<BR><BR><br>
 @Prompt TPM device address.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpmBaseAddress</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010012</CAPTION></TD><TD><CAPTION>UINT64</CAPTION></TD><TD><CAPTION>0xFED40000</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamicEx_common_PcdTpmInitializationPolicy gEfiSecurityPkgTokenSpaceGuid.PcdTpmInitializationPolicy
 This PCD indicates the initialization policy for TPM 1.2.<BR><BR><br>
  If 0, no initialization needed - most likely used for chipset SRTM solution, in which TPM is already initialized.<BR><br>
  If 1, initialization needed.<BR><br>
 @Prompt TPM 1.2 device initialization policy.<br>
 @ValidRange 0x80000001 | 0x00 - 0x1<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpmInitializationPolicy</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001000B</CAPTION></TD><TD><CAPTION>UINT8</CAPTION></TD><TD><CAPTION>1</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamicEx_common_PcdTpmInstanceGuid  gEfiSecurityPkgTokenSpaceGuid.PcdTpmInstanceGuid 
 Guid name to identify TPM instance.<BR><BR><br>
  NOTE: This Pcd must be FixedAtBuild if Standalone MM is used<br>
  TPM_DEVICE_INTERFACE_NONE means disable.<BR><br>
  TPM_DEVICE_INTERFACE_TPM12 means TPM 1.2 DTPM.<BR><br>
  TPM_DEVICE_INTERFACE_DTPM2 means TPM 2.0 DTPM.<BR><br>
  Other GUID value means other TPM 2.0 device.<BR><br>
 @Prompt TPM device type identifier<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpmInstanceGuid </CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001000F</CAPTION></TD><TD><CAPTION>VOID*</CAPTION></TD><TD><CAPTION>{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamicEx_common_PcdTpmPhysicalPresence gEfiSecurityPkgTokenSpaceGuid.PcdTpmPhysicalPresence
 Indicates the presence or absence of the platform operator during firmware booting.<br>
  If platform operator is not physical presence during boot. TPM will be locked and the TPM commands<br>
  that required operator physical presence can not run.<BR><BR><br>
   TRUE  - The platform operator is physically present.<BR><br>
   FALSE - The platform operator is not physically present.<BR><br>
 @Prompt Physical presence of the platform operator.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpmPhysicalPresence</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010001</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>TRUE</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamicEx_common_PcdTpmScrtmPolicy gEfiSecurityPkgTokenSpaceGuid.PcdTpmScrtmPolicy
 This PCD indicates Static Core Root of Trust for Measurement (SCRTM) policy using TPM 1.2.<BR><BR><br>
  if 0, no SCRTM measurement needed - In this case, it is already done.<BR><br>
  if 1, SCRTM measurement done by BIOS.<BR><br>
 @Prompt SCRTM policy setting for TPM 1.2 device<br>
 @ValidRange 0x80000001 | 0x00 - 0x1<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpmScrtmPolicy</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001000E</CAPTION></TD><TD><CAPTION>UINT8</CAPTION></TD><TD><CAPTION>1</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsDynamicEx_common_PcdUserPhysicalPresence gEfiSecurityPkgTokenSpaceGuid.PcdUserPhysicalPresence
 Indicate whether a physical presence user exist.<br>
 When it is configured to Dynamic or DynamicEx, it can be set through detection using<br>
 a platform-specific method (e.g. Button pressed) in a actual platform in early boot phase.<BR><BR><br>
 @Prompt A physical presence user status<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdUserPhysicalPresence</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010019</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>FALSE</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsFixedAtBuild_root_page PcdsFixedAtBuild
<p> \section content_index INDEX
<ul>
<li>\subpage pcd_PcdsFixedAtBuild_common_root_page "common" </li>
</ul>
 **/
/** \page pcd_PcdsFixedAtBuild_common_root_page common
<p> \section content_index INDEX
<ul>
<li>\subpage pcd_PcdsFixedAtBuild_common_PcdCpuRngSupportedAlgorithm "gEfiSecurityPkgTokenSpaceGuid.PcdCpuRngSupportedAlgorithm" </li>
<li>\subpage pcd_PcdsFixedAtBuild_common_PcdDeferImageLoadPolicy "gEfiSecurityPkgTokenSpaceGuid.PcdDeferImageLoadPolicy" </li>
<li>\subpage pcd_PcdsFixedAtBuild_common_PcdFirmwareDebuggerInitialized "gEfiSecurityPkgTokenSpaceGuid.PcdFirmwareDebuggerInitialized" </li>
<li>\subpage pcd_PcdsFixedAtBuild_common_PcdFixedMediaImageVerificationPolicy "gEfiSecurityPkgTokenSpaceGuid.PcdFixedMediaImageVerificationPolicy" </li>
<li>\subpage pcd_PcdsFixedAtBuild_common_PcdFixedUsbCredentialProviderTokenFileName "gEfiSecurityPkgTokenSpaceGuid.PcdFixedUsbCredentialProviderTokenFileName" </li>
<li>\subpage pcd_PcdsFixedAtBuild_common_PcdMaxAppendVariableSize "gEfiSecurityPkgTokenSpaceGuid.PcdMaxAppendVariableSize" </li>
<li>\subpage pcd_PcdsFixedAtBuild_common_PcdOptionRomImageVerificationPolicy "gEfiSecurityPkgTokenSpaceGuid.PcdOptionRomImageVerificationPolicy" </li>
<li>\subpage pcd_PcdsFixedAtBuild_common_PcdPhysicalPresenceCmdEnable "gEfiSecurityPkgTokenSpaceGuid.PcdPhysicalPresenceCmdEnable" </li>
<li>\subpage pcd_PcdsFixedAtBuild_common_PcdPhysicalPresenceHwEnable "gEfiSecurityPkgTokenSpaceGuid.PcdPhysicalPresenceHwEnable" </li>
<li>\subpage pcd_PcdsFixedAtBuild_common_PcdPhysicalPresenceLifetimeLock "gEfiSecurityPkgTokenSpaceGuid.PcdPhysicalPresenceLifetimeLock" </li>
<li>\subpage pcd_PcdsFixedAtBuild_common_PcdPkcs7CertBuffer "gEfiSecurityPkgTokenSpaceGuid.PcdPkcs7CertBuffer" </li>
<li>\subpage pcd_PcdsFixedAtBuild_common_PcdRandomizePlatformHierarchy "gEfiSecurityPkgTokenSpaceGuid.PcdRandomizePlatformHierarchy" </li>
<li>\subpage pcd_PcdsFixedAtBuild_common_PcdRemovableMediaImageVerificationPolicy "gEfiSecurityPkgTokenSpaceGuid.PcdRemovableMediaImageVerificationPolicy" </li>
<li>\subpage pcd_PcdsFixedAtBuild_common_PcdRsa2048Sha256PublicKeyBuffer "gEfiSecurityPkgTokenSpaceGuid.PcdRsa2048Sha256PublicKeyBuffer" </li>
<li>\subpage pcd_PcdsFixedAtBuild_common_PcdSkipHddPasswordPrompt "gEfiSecurityPkgTokenSpaceGuid.PcdSkipHddPasswordPrompt" </li>
<li>\subpage pcd_PcdsFixedAtBuild_common_PcdSkipOpalPasswordPrompt "gEfiSecurityPkgTokenSpaceGuid.PcdSkipOpalPasswordPrompt" </li>
<li>\subpage pcd_PcdsFixedAtBuild_common_PcdSmiCommandIoPort "gEfiSecurityPkgTokenSpaceGuid.PcdSmiCommandIoPort" </li>
<li>\subpage pcd_PcdsFixedAtBuild_common_PcdStatusCodeFvVerificationFail "gEfiSecurityPkgTokenSpaceGuid.PcdStatusCodeFvVerificationFail" </li>
<li>\subpage pcd_PcdsFixedAtBuild_common_PcdStatusCodeFvVerificationPass "gEfiSecurityPkgTokenSpaceGuid.PcdStatusCodeFvVerificationPass" </li>
<li>\subpage pcd_PcdsFixedAtBuild_common_PcdStatusCodeSubClassTpmDevice "gEfiSecurityPkgTokenSpaceGuid.PcdStatusCodeSubClassTpmDevice" </li>
<li>\subpage pcd_PcdsFixedAtBuild_common_PcdTcg2FinalLogAreaLen "gEfiSecurityPkgTokenSpaceGuid.PcdTcg2FinalLogAreaLen" </li>
<li>\subpage pcd_PcdsFixedAtBuild_common_PcdTcg2NumberOfPCRBanks "gEfiSecurityPkgTokenSpaceGuid.PcdTcg2NumberOfPCRBanks" </li>
<li>\subpage pcd_PcdsFixedAtBuild_common_PcdTcg2PhysicalPresenceFlags "gEfiSecurityPkgTokenSpaceGuid.PcdTcg2PhysicalPresenceFlags" </li>
<li>\subpage pcd_PcdsFixedAtBuild_common_PcdTcgLogAreaMinLen "gEfiSecurityPkgTokenSpaceGuid.PcdTcgLogAreaMinLen" </li>
<li>\subpage pcd_PcdsFixedAtBuild_common_PcdTcgPhysicalPresenceInterfaceVer "gEfiSecurityPkgTokenSpaceGuid.PcdTcgPhysicalPresenceInterfaceVer" </li>
<li>\subpage pcd_PcdsFixedAtBuild_common_PcdTpm2AcpiTableRev "gEfiSecurityPkgTokenSpaceGuid.PcdTpm2AcpiTableRev" </li>
<li>\subpage pcd_PcdsFixedAtBuild_common_PcdTpm2CurrentIrqNum "gEfiSecurityPkgTokenSpaceGuid.PcdTpm2CurrentIrqNum" </li>
<li>\subpage pcd_PcdsFixedAtBuild_common_PcdTpm2InitializationPolicy "gEfiSecurityPkgTokenSpaceGuid.PcdTpm2InitializationPolicy" </li>
<li>\subpage pcd_PcdsFixedAtBuild_common_PcdTpm2PossibleIrqNumBuf "gEfiSecurityPkgTokenSpaceGuid.PcdTpm2PossibleIrqNumBuf" </li>
<li>\subpage pcd_PcdsFixedAtBuild_common_PcdTpm2ScrtmPolicy "gEfiSecurityPkgTokenSpaceGuid.PcdTpm2ScrtmPolicy" </li>
<li>\subpage pcd_PcdsFixedAtBuild_common_PcdTpm2SelfTestPolicy "gEfiSecurityPkgTokenSpaceGuid.PcdTpm2SelfTestPolicy" </li>
<li>\subpage pcd_PcdsFixedAtBuild_common_PcdTpmAutoDetection "gEfiSecurityPkgTokenSpaceGuid.PcdTpmAutoDetection" </li>
<li>\subpage pcd_PcdsFixedAtBuild_common_PcdTpmBaseAddress "gEfiSecurityPkgTokenSpaceGuid.PcdTpmBaseAddress" </li>
<li>\subpage pcd_PcdsFixedAtBuild_common_PcdTpmInitializationPolicy "gEfiSecurityPkgTokenSpaceGuid.PcdTpmInitializationPolicy" </li>
<li>\subpage pcd_PcdsFixedAtBuild_common_PcdTpmInstanceGuid  "gEfiSecurityPkgTokenSpaceGuid.PcdTpmInstanceGuid " </li>
<li>\subpage pcd_PcdsFixedAtBuild_common_PcdTpmPhysicalPresence "gEfiSecurityPkgTokenSpaceGuid.PcdTpmPhysicalPresence" </li>
<li>\subpage pcd_PcdsFixedAtBuild_common_PcdTpmPlatformClass "gEfiSecurityPkgTokenSpaceGuid.PcdTpmPlatformClass" </li>
<li>\subpage pcd_PcdsFixedAtBuild_common_PcdTpmScrtmPolicy "gEfiSecurityPkgTokenSpaceGuid.PcdTpmScrtmPolicy" </li>
<li>\subpage pcd_PcdsFixedAtBuild_common_PcdUserPhysicalPresence "gEfiSecurityPkgTokenSpaceGuid.PcdUserPhysicalPresence" </li>
</ul>
 **/
/** \page pcd_PcdsFixedAtBuild_common_PcdCpuRngSupportedAlgorithm gEfiSecurityPkgTokenSpaceGuid.PcdCpuRngSupportedAlgorithm
<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdCpuRngSupportedAlgorithm</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010032</CAPTION></TD><TD><CAPTION>VOID*</CAPTION></TD><TD><CAPTION>{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsFixedAtBuild_common_PcdDeferImageLoadPolicy gEfiSecurityPkgTokenSpaceGuid.PcdDeferImageLoadPolicy
 Defer Image Load policy settings. The policy is bitwise.<br>
  If a bit is set, the image from corresponding device will be trusted when loading. Or<br>
  the image will be deferred. The deferred image will be checked after user is identified.<BR><BR><br>
    BIT0       - Image from unknown device. <BR><br>
    BIT1       - Image from firmware volume.<BR><br>
    BIT2       - Image from OptionRom.<BR><br>
    BIT3       - Image from removable media which includes CD-ROM, Floppy, USB and network.<BR><br>
    BIT4       - Image from fixed media device which includes hard disk.<BR><br>
 @Prompt Set policy whether trust image before user identification.<br>
 @ValidRange 0x80000002 | 0x00000000 - 0x0000001F<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdDeferImageLoadPolicy</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0000004</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x0000001F</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsFixedAtBuild_common_PcdFirmwareDebuggerInitialized gEfiSecurityPkgTokenSpaceGuid.PcdFirmwareDebuggerInitialized
 This PCD indicates if debugger exists. <BR><BR><br>
   TRUE  - Firmware debugger exists.<BR><br>
   FALSE - Firmware debugger doesn't exist.<BR><br>
 @Prompt Firmware debugger status.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdFirmwareDebuggerInitialized</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010009</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>FALSE</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsFixedAtBuild_common_PcdFixedMediaImageVerificationPolicy gEfiSecurityPkgTokenSpaceGuid.PcdFixedMediaImageVerificationPolicy
 Image verification policy for fixed media which includes hard disk.<br>
  Only following values are valid:<BR><BR><br>
  NOTE: Do NOT use 0x5 and 0x2 since it violates the UEFI specification and has been removed.<BR><br>
  0x00000000      Always trust the image.<BR><br>
  0x00000001      Never trust the image.<BR><br>
  0x00000002      Allow execution when there is security violation.<BR><br>
  0x00000003      Defer execution when there is security violation.<BR><br>
  0x00000004      Deny execution when there is security violation.<BR><br>
  0x00000005      Query user when there is security violation.<BR><br>
 @Prompt Set policy for the image from fixed media.<br>
 @ValidRange 0x80000001 | 0x00000000 - 0x00000005<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdFixedMediaImageVerificationPolicy</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00000003</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x04</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsFixedAtBuild_common_PcdFixedUsbCredentialProviderTokenFileName gEfiSecurityPkgTokenSpaceGuid.PcdFixedUsbCredentialProviderTokenFileName
 Null-terminated Unicode string of the file name that is the default name to save USB credential.<br>
  The specified file should be saved at the root directory of USB storage disk.<br>
 @Prompt File name to save credential.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdFixedUsbCredentialProviderTokenFileName</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00000005</CAPTION></TD><TD><CAPTION>VOID*</CAPTION></TD><TD><CAPTION>L"Token.bin"</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsFixedAtBuild_common_PcdMaxAppendVariableSize gEfiSecurityPkgTokenSpaceGuid.PcdMaxAppendVariableSize
 The size of Append variable buffer. This buffer is reserved for runtime use, OS can append data into one existing variable.<br>
  Note: This PCD is not been used.<br>
 @Prompt Max variable size for append operation.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdMaxAppendVariableSize</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x30000005</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x2000</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsFixedAtBuild_common_PcdOptionRomImageVerificationPolicy gEfiSecurityPkgTokenSpaceGuid.PcdOptionRomImageVerificationPolicy
 Image verification policy for OptionRom. Only following values are valid:<BR><BR><br>
  NOTE: Do NOT use 0x5 and 0x2 since it violates the UEFI specification and has been removed.<BR><br>
  0x00000000      Always trust the image.<BR><br>
  0x00000001      Never trust the image.<BR><br>
  0x00000002      Allow execution when there is security violation.<BR><br>
  0x00000003      Defer execution when there is security violation.<BR><br>
  0x00000004      Deny execution when there is security violation.<BR><br>
  0x00000005      Query user when there is security violation.<BR><br>
 @Prompt Set policy for the image from OptionRom.<br>
 @ValidRange 0x80000001 | 0x00000000 - 0x00000005<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdOptionRomImageVerificationPolicy</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00000001</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x04</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsFixedAtBuild_common_PcdPhysicalPresenceCmdEnable gEfiSecurityPkgTokenSpaceGuid.PcdPhysicalPresenceCmdEnable
 Indicates whether the platform supports the software method of asserting physical presence.<BR><BR><br>
   TRUE  - Supports the software method of asserting physical presence.<BR><br>
   FALSE - Does not support the software method of asserting physical presence.<BR><br>
 @Prompt Enable software method of asserting physical presence.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdPhysicalPresenceCmdEnable</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010004</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>TRUE</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsFixedAtBuild_common_PcdPhysicalPresenceHwEnable gEfiSecurityPkgTokenSpaceGuid.PcdPhysicalPresenceHwEnable
 Indicates whether the platform supports the hardware method of asserting physical presence.<BR><BR><br>
   TRUE  - Supports the hardware method of asserting physical presence.<BR><br>
   FALSE - Does not support the hardware method of asserting physical presence.<BR><br>
 @Prompt Enable hardware method of asserting physical presence.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdPhysicalPresenceHwEnable</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010005</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>TRUE</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsFixedAtBuild_common_PcdPhysicalPresenceLifetimeLock gEfiSecurityPkgTokenSpaceGuid.PcdPhysicalPresenceLifetimeLock
 Indicates whether TPM physical presence is locked during platform initialization.<br>
  Once it is locked, it can not be unlocked for TPM life time.<BR><BR><br>
   TRUE  - Lock TPM physical presence asserting method.<BR><br>
   FALSE - Not lock TPM physical presence asserting method.<BR><br>
 @Prompt Lock TPM physical presence asserting method.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdPhysicalPresenceLifetimeLock</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010003</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>FALSE</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsFixedAtBuild_common_PcdPkcs7CertBuffer gEfiSecurityPkgTokenSpaceGuid.PcdPkcs7CertBuffer
 Provides one PKCS7 cert used to verify Recovery and Capsule Update images<br>
  WARNING: The default value is treated as test key. Please do not use default value in the production.<br>
 @Prompt One PKCS7 cert used to verify Recovery and Capsule Update images<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdPkcs7CertBuffer</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010014</CAPTION></TD><TD><CAPTION>VOID*</CAPTION></TD><TD><CAPTION>{0x30, 0x82, 0x03, 0xec, 0x30, 0x82, 0x02, 0xd4, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x09, 0x00, 0xc0, 0x91, 0xc5, 0xe2, 0xb7, 0x66, 0xc0, 0xf8, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x0b, 0x05, 0x00, 0x30, 0x81, 0x82, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x43, 0x4e, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x08, 0x0c, 0x02, 0x53, 0x48, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x07, 0x0c, 0x02, 0x53, 0x48, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x09, 0x54, 0x69, 0x61, 0x6e, 0x6f, 0x43, 0x6f, 0x72, 0x65, 0x31, 0x0e, 0x30, 0x0c, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x0c, 0x05, 0x45, 0x44, 0x4b, 0x49, 0x49, 0x31, 0x11, 0x30, 0x0f, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x08, 0x54, 0x65, 0x73, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x31, 0x22, 0x30, 0x20, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x09, 0x01, 0x16, 0x13, 0x65, 0x64, 0x6b, 0x69, 0x69, 0x40, 0x74, 0x69, 0x61, 0x6e, 0x6f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6f, 0x72, 0x67, 0x30, 0x1e, 0x17, 0x0d, 0x31, 0x37, 0x30, 0x34, 0x31, 0x30, 0x30, 0x38, 0x32, 0x37, 0x34, 0x30, 0x5a, 0x17, 0x0d, 0x31, 0x37, 0x30, 0x35, 0x31, 0x30, 0x30, 0x38, 0x32, 0x37, 0x34, 0x30, 0x5a, 0x30, 0x81, 0x82, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x43, 0x4e, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x08, 0x0c, 0x02, 0x53, 0x48, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x07, 0x0c, 0x02, 0x53, 0x48, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x09, 0x54, 0x69, 0x61, 0x6e, 0x6f, 0x43, 0x6f, 0x72, 0x65, 0x31, 0x0e, 0x30, 0x0c, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x0c, 0x05, 0x45, 0x44, 0x4b, 0x49, 0x49, 0x31, 0x11, 0x30, 0x0f, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x08, 0x54, 0x65, 0x73, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x31, 0x22, 0x30, 0x20, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x09, 0x01, 0x16, 0x13, 0x65, 0x64, 0x6b, 0x69, 0x69, 0x40, 0x74, 0x69, 0x61, 0x6e, 0x6f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6f, 0x72, 0x67, 0x30, 0x82, 0x01, 0x22, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x01, 0x05, 0x00, 0x03, 0x82, 0x01, 0x0f, 0x00, 0x30, 0x82, 0x01, 0x0a, 0x02, 0x82, 0x01, 0x01, 0x00, 0xb9, 0x29, 0x29, 0x6c, 0x60, 0x0c, 0xd7, 0x23, 0xf6, 0x7d, 0xee, 0xf0, 0x62, 0xff, 0xd9, 0xc9, 0xaa, 0x55, 0x8c, 0x81, 0x95, 0x56, 0x3f, 0xb7, 0x56, 0x53, 0xb0, 0xc2, 0x82, 0x12, 0xc5, 0x3b, 0x75, 0x23, 0xb9, 0x4d, 0xd6, 0xc4, 0x55, 0x73, 0xf3, 0xaa, 0x95, 0xa8, 0x1b, 0xf3, 0x93, 0x7e, 0x9e, 0x40, 0xe4, 0x1d, 0x22, 0x9c, 0x93, 0x07, 0x0b, 0xd7, 0xaa, 0x5b, 0xd7, 0xe4, 0x1a, 0x21, 0x84, 0xd7, 0x63, 0x59, 0x03, 0x50, 0x1f, 0xf5, 0x14, 0x55, 0x93, 0x91, 0x9b, 0xf5, 0x52, 0xb0, 0xbf, 0x0e, 0x5c, 0x68, 0x3b, 0x59, 0x52, 0x98, 0x96, 0x56, 0xe1, 0xab, 0xc4, 0x43, 0xbb, 0x05, 0x57, 0x78, 0x45, 0x01, 0x9f, 0x58, 0x15, 0x53, 0x0e, 0x11, 0x94, 0x2f, 0x0e, 0xf1, 0xa6, 0x19, 0xa2, 0x6e, 0x86, 0x39, 0x2b, 0x33, 0x8d, 0xc7, 0xc5, 0xeb, 0xee, 0x1e, 0x33, 0xd3, 0x32, 0x94, 0xc1, 0x59, 0xc4, 0x0c, 0x97, 0x0b, 0x12, 0x48, 0x5f, 0x33, 0xf6, 0x60, 0x74, 0x7d, 0x57, 0xc2, 0x13, 0x2d, 0x7d, 0xa9, 0x87, 0xa3, 0x35, 0xea, 0x91, 0x83, 0x3f, 0x67, 0x7a, 0x92, 0x1f, 0x01, 0x53, 0x9f, 0x62, 0x5f, 0x99, 0x12, 0xfd, 0x73, 0x1b, 0x2d, 0x9e, 0x2b, 0x6c, 0x34, 0x49, 0xaf, 0x4f, 0x07, 0x8f, 0xc0, 0xe9, 0x6b, 0x9e, 0x5f, 0x79, 0x35, 0xda, 0x2a, 0x5c, 0x88, 0xee, 0xf6, 0x48, 0x61, 0xda, 0x96, 0xe3, 0x48, 0x46, 0xa0, 0x94, 0x1c, 0x9d, 0xf6, 0x5c, 0x87, 0x0e, 0xef, 0x74, 0x09, 0x91, 0x0d, 0x3d, 0x5a, 0xe7, 0xc5, 0x4c, 0x8a, 0x7a, 0xac, 0xa1, 0x85, 0xb6, 0x67, 0x44, 0x17, 0x55, 0x52, 0x3a, 0xe8, 0x11, 0x4d, 0x58, 0xa2, 0x93, 0x00, 0x62, 0xea, 0x7b, 0x80, 0xed, 0xcf, 0xbd, 0xdf, 0x75, 0x80, 0x4b, 0xb9, 0x65, 0x63, 0xad, 0x0b, 0x4d, 0x74, 0xfa, 0x59, 0x02, 0x03, 0x01, 0x00, 0x01, 0xa3, 0x63, 0x30, 0x61, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0x16, 0xaa, 0xd6, 0x8e, 0x1b, 0x2d, 0x43, 0xf3, 0x2d, 0xb0, 0x24, 0xad, 0x36, 0x65, 0x3f, 0xb2, 0xfa, 0xb1, 0x2c, 0xed, 0x30, 0x1f, 0x06, 0x03, 0x55, 0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0x16, 0xaa, 0xd6, 0x8e, 0x1b, 0x2d, 0x43, 0xf3, 0x2d, 0xb0, 0x24, 0xad, 0x36, 0x65, 0x3f, 0xb2, 0xfa, 0xb1, 0x2c, 0xed, 0x30, 0x0f, 0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x05, 0x30, 0x03, 0x01, 0x01, 0xff, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff, 0x04, 0x04, 0x03, 0x02, 0x01, 0x86, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x0b, 0x05, 0x00, 0x03, 0x82, 0x01, 0x01, 0x00, 0x95, 0xde, 0xdf, 0xa4, 0x14, 0xdb, 0x92, 0x22, 0x78, 0x1a, 0xbd, 0x31, 0x9d, 0x1e, 0xd7, 0x2f, 0x0a, 0x10, 0x11, 0x5d, 0x74, 0x61, 0xe8, 0x30, 0xc4, 0xf3, 0x15, 0xe9, 0x30, 0x54, 0xf4, 0xbb, 0x0c, 0x04, 0x78, 0x13, 0x5d, 0x2c, 0xdd, 0x8c, 0x92, 0x90, 0xd1, 0x9c, 0xd0, 0xd0, 0x18, 0xa3, 0xa3, 0xfc, 0x8c, 0x28, 0x5a, 0xd4, 0x91, 0x4d, 0x08, 0xc3, 0xf6, 0x1a, 0xc8, 0xdd, 0xa6, 0x08, 0x58, 0xe2, 0x15, 0x95, 0xfb, 0x2d, 0x2d, 0x8a, 0xb1, 0x30, 0x80, 0xbd, 0x9a, 0xb6, 0xe1, 0x2c, 0x20, 0x3e, 0xdd, 0xc4, 0xc7, 0x55, 0x65, 0xcf, 0x28, 0x17, 0xf4, 0xee, 0xda, 0xbe, 0x77, 0x70, 0xd5, 0x52, 0xd6, 0x15, 0x7a, 0xfb, 0xad, 0xaf, 0xfd, 0xd5, 0x45, 0x90, 0x5a, 0xe6, 0x31, 0x42, 0xd7, 0x84, 0xb3, 0x49, 0x56, 0x6a, 0xd3, 0x47, 0xf3, 0xbf, 0x68, 0x60, 0x8b, 0x0f, 0xe2, 0xaf, 0xf4, 0xe3, 0xec, 0x12, 0xb9, 0xe2, 0x3a, 0x16, 0x11, 0x4e, 0x4d, 0x73, 0x79, 0xaf, 0x47, 0x85, 0x4c, 0x76, 0x26, 0x9e, 0x8b, 0x32, 0xc0, 0x8e, 0xc2, 0xdc, 0x27, 0xa6, 0xef, 0xac, 0x93, 0x9e, 0xa1, 0x5e, 0xcf, 0x34, 0x45, 0xe0, 0x2a, 0xc7, 0x9d, 0x4d, 0xd7, 0xd7, 0x37, 0x72, 0x97, 0xf8, 0x58, 0xf9, 0xb6, 0x35, 0x48, 0xf1, 0xd1, 0x0a, 0x72, 0x7f, 0xfd, 0x4d, 0x7c, 0xe9, 0xcc, 0xd8, 0x48, 0x1b, 0x49, 0x52, 0x53, 0xde, 0x51, 0x01, 0x53, 0x35, 0xbc, 0x90, 0xcd, 0x8c, 0x8a, 0xcc, 0x43, 0x20, 0xa7, 0x45, 0xff, 0x2b, 0x55, 0xb0, 0x8b, 0x2d, 0xff, 0x55, 0x15, 0x4b, 0x84, 0xd0, 0xc3, 0xd3, 0x90, 0x9c, 0x94, 0x4b, 0x55, 0xd5, 0x62, 0xea, 0x22, 0xab, 0x62, 0x68, 0xdd, 0x53, 0xc6, 0xdc, 0xa5, 0xdd, 0x9a, 0x2d, 0x8e, 0x79, 0x7c, 0x2e, 0x9c, 0xe4, 0x66, 0x80, 0x8c, 0x1d}</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsFixedAtBuild_common_PcdRandomizePlatformHierarchy gEfiSecurityPkgTokenSpaceGuid.PcdRandomizePlatformHierarchy
 Indicates whether the TPM2 platform hierarchy will be disabled by using<br>
  a random password or by disabling the hierarchy<br>
   TRUE  - A random password will be used<br>
   FALSE - The hierarchy will be disabled<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdRandomizePlatformHierarchy</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010024</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>TRUE</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsFixedAtBuild_common_PcdRemovableMediaImageVerificationPolicy gEfiSecurityPkgTokenSpaceGuid.PcdRemovableMediaImageVerificationPolicy
 Image verification policy for removable media which includes CD-ROM, Floppy, USB and network.<br>
  Only following values are valid:<BR><BR><br>
  NOTE: Do NOT use 0x5 and 0x2 since it violates the UEFI specification and has been removed.<BR><br>
  0x00000000      Always trust the image.<BR><br>
  0x00000001      Never trust the image.<BR><br>
  0x00000002      Allow execution when there is security violation.<BR><br>
  0x00000003      Defer execution when there is security violation.<BR><br>
  0x00000004      Deny execution when there is security violation.<BR><br>
  0x00000005      Query user when there is security violation.<BR><br>
 @Prompt Set policy for the image from removable media.<br>
 @ValidRange 0x80000001 | 0x00000000 - 0x00000005<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdRemovableMediaImageVerificationPolicy</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00000002</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x04</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsFixedAtBuild_common_PcdRsa2048Sha256PublicKeyBuffer gEfiSecurityPkgTokenSpaceGuid.PcdRsa2048Sha256PublicKeyBuffer
 Provides one or more SHA 256 Hashes of the RSA 2048 public keys used to verify Recovery and Capsule Update images<br>
  WARNING: The default value is treated as test key. Please do not use default value in the production.<br>
 @Prompt One or more SHA 256 Hashes of RSA 2048 bit public keys used to verify Recovery and Capsule Update images<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdRsa2048Sha256PublicKeyBuffer</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010013</CAPTION></TD><TD><CAPTION>VOID*</CAPTION></TD><TD><CAPTION>{0x91, 0x29, 0xc4, 0xbd, 0xea, 0x6d, 0xda, 0xb3, 0xaa, 0x6f, 0x50, 0x16, 0xfc, 0xdb, 0x4b, 0x7e, 0x3c, 0xd6, 0xdc, 0xa4, 0x7a, 0x0e, 0xdd, 0xe6, 0x15, 0x8c, 0x73, 0x96, 0xa2, 0xd4, 0xa6, 0x4d}</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsFixedAtBuild_common_PcdSkipHddPasswordPrompt gEfiSecurityPkgTokenSpaceGuid.PcdSkipHddPasswordPrompt
 Indicates if Hdd Password driver skip password prompt.<BR><BR><br>
   TRUE  - Skip password prompt.<BR><br>
   FALSE - Does not skip password prompt.<BR><br>
 @Prompt Skip Hdd Password prompt.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdSkipHddPasswordPrompt</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010021</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>FALSE</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsFixedAtBuild_common_PcdSkipOpalPasswordPrompt gEfiSecurityPkgTokenSpaceGuid.PcdSkipOpalPasswordPrompt
 Indicates if Opal DXE driver skip password prompt.<BR><BR><br>
   TRUE  - Skip password prompt.<BR><br>
   FALSE - Does not skip password prompt.<BR><br>
 @Prompt Skip Opal DXE driver password prompt.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdSkipOpalPasswordPrompt</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010020</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>FALSE</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsFixedAtBuild_common_PcdSmiCommandIoPort gEfiSecurityPkgTokenSpaceGuid.PcdSmiCommandIoPort
 Defines the IO port used to trigger a software System Management Interrupt (SMI).<BR><BR><br>
  Used as the SMI Command IO port by security functionality that triggers a software SMI such<br>
  as Physical Presence Interface (PPI).<BR><br>
 @Prompt SMI Command IO port.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdSmiCommandIoPort</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00000009</CAPTION></TD><TD><CAPTION>UINT16</CAPTION></TD><TD><CAPTION>0xB2</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsFixedAtBuild_common_PcdStatusCodeFvVerificationFail gEfiSecurityPkgTokenSpaceGuid.PcdStatusCodeFvVerificationFail
<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdStatusCodeFvVerificationFail</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010031</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x0303100B</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsFixedAtBuild_common_PcdStatusCodeFvVerificationPass gEfiSecurityPkgTokenSpaceGuid.PcdStatusCodeFvVerificationPass
 Progress Code for FV verification result.<BR><BR><br>
  (EFI_SOFTWARE_PEI_MODULE | EFI_SUBCLASS_SPECIFIC | XXX)<br>
 @Prompt Status Code for FV verification result<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdStatusCodeFvVerificationPass</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010030</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x0303100A</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsFixedAtBuild_common_PcdStatusCodeSubClassTpmDevice gEfiSecurityPkgTokenSpaceGuid.PcdStatusCodeSubClassTpmDevice
 Progress Code for TPM device subclass definitions.<BR><BR><br>
  EFI_PERIPHERAL_TPM  = (EFI_PERIPHERAL | 0x000D0000) = 0x010D0000<BR><br>
 @Prompt Status Code for TPM device definitions<br>
 @ValidList  0x80000003 | 0x010D0000<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdStatusCodeSubClassTpmDevice</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00000007</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x010D0000</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsFixedAtBuild_common_PcdTcg2FinalLogAreaLen gEfiSecurityPkgTokenSpaceGuid.PcdTcg2FinalLogAreaLen
 This PCD defines length(in bytes) of the TCG2 Final event log area.<br>
 @Prompt Length(in bytes) of the TCG2 Final event log area.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTcg2FinalLogAreaLen</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010018</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x8000</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsFixedAtBuild_common_PcdTcg2NumberOfPCRBanks gEfiSecurityPkgTokenSpaceGuid.PcdTcg2NumberOfPCRBanks
 This PCR means the OEM configured number of PCR banks.<br>
  0 means dynamic get from supported HASH algorithm<br>
 @Prompt OEM configured number of PCR banks.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTcg2NumberOfPCRBanks</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010015</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x0</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsFixedAtBuild_common_PcdTcg2PhysicalPresenceFlags gEfiSecurityPkgTokenSpaceGuid.PcdTcg2PhysicalPresenceFlags
 This PCD defines initial setting of TCG2 Persistent Firmware Management Flags<br>
 PCD can be configured for different settings in different scenarios<br>
 This PCD follows UEFI TCG2 library definition bit of the BIOS TPM/Storage Management Flags<BR><br>
    BIT0  -  Reserved <BR><br>
    BIT1  -  TCG2_BIOS_TPM_MANAGEMENT_FLAG_PP_REQUIRED_FOR_CLEAR <BR><br>
    BIT2  -  Reserved <BR><br>
    BIT3  -  TCG2_LIB_PP_FLAG_RESET_TRACK <BR><br>
    BIT4  -  TCG2_BIOS_TPM_MANAGEMENT_FLAG_PP_REQUIRED_FOR_TURN_ON <BR><br>
    BIT5  -  TCG2_BIOS_TPM_MANAGEMENT_FLAG_PP_REQUIRED_FOR_TURN_OFF <BR><br>
    BIT6  -  TCG2_BIOS_TPM_MANAGEMENT_FLAG_PP_REQUIRED_FOR_CHANGE_EPS <BR><br>
    BIT7  -  TCG2_BIOS_TPM_MANAGEMENT_FLAG_PP_REQUIRED_FOR_CHANGE_PCRS <BR><br>
    BIT16 -  TCG2_BIOS_STORAGE_MANAGEMENT_FLAG_PP_REQUIRED_FOR_ENABLE_BLOCK_SID <BR><br>
    BIT17 -  TCG2_BIOS_STORAGE_MANAGEMENT_FLAG_PP_REQUIRED_FOR_DISABLE_BLOCK_SID <BR><br>
    BIT18 -  TCG2_BIOS_STORAGE_MANAGEMENT_FLAG_ENABLE_BLOCK_SID <BR><br>
 @Prompt Initial setting of TCG2 Persistent Firmware Management Flags<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTcg2PhysicalPresenceFlags</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001001B</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x700E2</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsFixedAtBuild_common_PcdTcgLogAreaMinLen gEfiSecurityPkgTokenSpaceGuid.PcdTcgLogAreaMinLen
 This PCD defines minimum length(in bytes) of the system preboot TCG event log area(LAML).<br>
  For PC Client Implementation spec up to and including 1.2 the minimum log size is 64KB.<br>
 @Prompt Minimum length(in bytes) of the system preboot TCG event log area(LAML).<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTcgLogAreaMinLen</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010017</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x10000</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsFixedAtBuild_common_PcdTcgPhysicalPresenceInterfaceVer gEfiSecurityPkgTokenSpaceGuid.PcdTcgPhysicalPresenceInterfaceVer
 Null-terminated string of the Version of Physical Presence interface supported by platform.<BR><BR><br>
 To support configuring from setup page, this PCD can be DynamicHii type and map to a setup option.<BR><br>
 For example, map to TCG2_VERSION.PpiVersion to be configured by Tcg2ConfigDxe driver.<BR><br>
 gEfiSecurityPkgTokenSpaceGuid.PcdTcgPhysicalPresenceInterfaceVer|L"TCG2_VERSION"|gTcg2ConfigFormSetGuid|0x0|"1.3"|NV,BS<BR><br>
 @Prompt Version of Physical Presence interface supported by platform.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTcgPhysicalPresenceInterfaceVer</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00000008</CAPTION></TD><TD><CAPTION>VOID*</CAPTION></TD><TD><CAPTION>"1.3"</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsFixedAtBuild_common_PcdTpm2AcpiTableRev gEfiSecurityPkgTokenSpaceGuid.PcdTpm2AcpiTableRev
 Indicate the TPM2 ACPI table revision. Rev 4 has been defined since TCG ACPI Specification Rev 00.37.<BR><BR><br>
 To support configuring from setup page, this PCD can be DynamicHii type and map to a setup option.<BR><br>
 For example, map to TCG2_VERSION.Tpm2AcpiTableRev to be configured by Tcg2ConfigDxe driver.<BR><br>
 gEfiSecurityPkgTokenSpaceGuid.PcdTpm2AcpiTableRev|L"TCG2_VERSION"|gTcg2ConfigFormSetGuid|0x8|3|NV,BS<BR><br>
 @Prompt Revision of TPM2 ACPI table.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpm2AcpiTableRev</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001001A</CAPTION></TD><TD><CAPTION>UINT8</CAPTION></TD><TD><CAPTION>3</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsFixedAtBuild_common_PcdTpm2CurrentIrqNum gEfiSecurityPkgTokenSpaceGuid.PcdTpm2CurrentIrqNum
 Indicate current TPM2 Interrupt Number reported by _CRS control method.<BR><BR><br>
 TPM2 Interrupt feature is disabled If the pcd is set to 0.<BR><br>
 @Prompt Current TPM2 Interrupt Number<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpm2CurrentIrqNum</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001001C</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x00</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsFixedAtBuild_common_PcdTpm2InitializationPolicy gEfiSecurityPkgTokenSpaceGuid.PcdTpm2InitializationPolicy
 This PCD indicates the initialization policy for TPM 2.0.<BR><BR><br>
  If 0, no initialization needed - most likely used for chipset SRTM solution, in which TPM is already initialized.<BR><br>
  If 1, initialization needed.<BR><br>
 @Prompt TPM 2.0 device initialization policy.<BR><br>
 @ValidRange 0x80000001 | 0x00 - 0x1<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpm2InitializationPolicy</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001000A</CAPTION></TD><TD><CAPTION>UINT8</CAPTION></TD><TD><CAPTION>1</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsFixedAtBuild_common_PcdTpm2PossibleIrqNumBuf gEfiSecurityPkgTokenSpaceGuid.PcdTpm2PossibleIrqNumBuf
 Indicate platform possible TPM2 Interrupt Number reported by _PRS control method.<BR><BR><br>
 Possible TPM2 Interrupt Number Buffer will not be reported if TPM2 Interrupt feature is disabled.<BR><br>
 @Prompt Possible TPM2 Interrupt Number buffer<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpm2PossibleIrqNumBuf</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001001D</CAPTION></TD><TD><CAPTION>VOID*</CAPTION></TD><TD><CAPTION>{0x00, 0x00, 0x00, 0x00}</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsFixedAtBuild_common_PcdTpm2ScrtmPolicy gEfiSecurityPkgTokenSpaceGuid.PcdTpm2ScrtmPolicy
 This PCD indicates Static Core Root of Trust for Measurement (SCRTM) policy using TPM 2.0.<BR><BR><br>
  if 0, no SCRTM measurement needed - In this case, it is already done.<BR><br>
  if 1, SCRTM measurement done by BIOS.<BR><br>
 @Prompt SCRTM policy setting for TPM 2.0 device.<br>
 @ValidRange 0x80000001 | 0x00 - 0x1<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpm2ScrtmPolicy</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001000D</CAPTION></TD><TD><CAPTION>UINT8</CAPTION></TD><TD><CAPTION>1</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsFixedAtBuild_common_PcdTpm2SelfTestPolicy gEfiSecurityPkgTokenSpaceGuid.PcdTpm2SelfTestPolicy
 This PCD indicates the TPM 2.0 SelfTest policy.<BR><BR><br>
  if 0, no SelfTest needed - most likely used for fTPM, because it might already be tested.<BR><br>
  if 1, SelfTest needed.<BR><br>
 @Prompt TPM 2.0 device selftest.<br>
 @ValidRange 0x80000001 | 0x00 - 0x1<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpm2SelfTestPolicy</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001000C</CAPTION></TD><TD><CAPTION>UINT8</CAPTION></TD><TD><CAPTION>1</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsFixedAtBuild_common_PcdTpmAutoDetection gEfiSecurityPkgTokenSpaceGuid.PcdTpmAutoDetection
 This PCD indicates if BIOS auto detect TPM1.2 or dTPM2.0.<BR><BR><br>
  FALSE - No auto detection.<BR><br>
  TRUE  - Auto detection.<BR><br>
 @Prompt TPM type detection.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpmAutoDetection</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010011</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>TRUE</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsFixedAtBuild_common_PcdTpmBaseAddress gEfiSecurityPkgTokenSpaceGuid.PcdTpmBaseAddress
 This PCD indicates TPM base address.<BR><BR><br>
 @Prompt TPM device address.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpmBaseAddress</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010012</CAPTION></TD><TD><CAPTION>UINT64</CAPTION></TD><TD><CAPTION>0xFED40000</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsFixedAtBuild_common_PcdTpmInitializationPolicy gEfiSecurityPkgTokenSpaceGuid.PcdTpmInitializationPolicy
 This PCD indicates the initialization policy for TPM 1.2.<BR><BR><br>
  If 0, no initialization needed - most likely used for chipset SRTM solution, in which TPM is already initialized.<BR><br>
  If 1, initialization needed.<BR><br>
 @Prompt TPM 1.2 device initialization policy.<br>
 @ValidRange 0x80000001 | 0x00 - 0x1<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpmInitializationPolicy</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001000B</CAPTION></TD><TD><CAPTION>UINT8</CAPTION></TD><TD><CAPTION>1</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsFixedAtBuild_common_PcdTpmInstanceGuid  gEfiSecurityPkgTokenSpaceGuid.PcdTpmInstanceGuid 
 Guid name to identify TPM instance.<BR><BR><br>
  NOTE: This Pcd must be FixedAtBuild if Standalone MM is used<br>
  TPM_DEVICE_INTERFACE_NONE means disable.<BR><br>
  TPM_DEVICE_INTERFACE_TPM12 means TPM 1.2 DTPM.<BR><br>
  TPM_DEVICE_INTERFACE_DTPM2 means TPM 2.0 DTPM.<BR><br>
  Other GUID value means other TPM 2.0 device.<BR><br>
 @Prompt TPM device type identifier<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpmInstanceGuid </CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001000F</CAPTION></TD><TD><CAPTION>VOID*</CAPTION></TD><TD><CAPTION>{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsFixedAtBuild_common_PcdTpmPhysicalPresence gEfiSecurityPkgTokenSpaceGuid.PcdTpmPhysicalPresence
 Indicates the presence or absence of the platform operator during firmware booting.<br>
  If platform operator is not physical presence during boot. TPM will be locked and the TPM commands<br>
  that required operator physical presence can not run.<BR><BR><br>
   TRUE  - The platform operator is physically present.<BR><br>
   FALSE - The platform operator is not physically present.<BR><br>
 @Prompt Physical presence of the platform operator.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpmPhysicalPresence</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010001</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>TRUE</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsFixedAtBuild_common_PcdTpmPlatformClass gEfiSecurityPkgTokenSpaceGuid.PcdTpmPlatformClass
 Specifies the type of TCG platform that contains TPM chip.<BR><BR><br>
  If 0, TCG platform type is PC client.<BR><br>
  If 1, TCG platform type is PC server.<BR><br>
 @Prompt Select platform type.<br>
 @ValidRange 0x80000001 | 0x00 - 0x1<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpmPlatformClass</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00000006</CAPTION></TD><TD><CAPTION>UINT8</CAPTION></TD><TD><CAPTION>0</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsFixedAtBuild_common_PcdTpmScrtmPolicy gEfiSecurityPkgTokenSpaceGuid.PcdTpmScrtmPolicy
 This PCD indicates Static Core Root of Trust for Measurement (SCRTM) policy using TPM 1.2.<BR><BR><br>
  if 0, no SCRTM measurement needed - In this case, it is already done.<BR><br>
  if 1, SCRTM measurement done by BIOS.<BR><br>
 @Prompt SCRTM policy setting for TPM 1.2 device<br>
 @ValidRange 0x80000001 | 0x00 - 0x1<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpmScrtmPolicy</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001000E</CAPTION></TD><TD><CAPTION>UINT8</CAPTION></TD><TD><CAPTION>1</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsFixedAtBuild_common_PcdUserPhysicalPresence gEfiSecurityPkgTokenSpaceGuid.PcdUserPhysicalPresence
 Indicate whether a physical presence user exist.<br>
 When it is configured to Dynamic or DynamicEx, it can be set through detection using<br>
 a platform-specific method (e.g. Button pressed) in a actual platform in early boot phase.<BR><BR><br>
 @Prompt A physical presence user status<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdUserPhysicalPresence</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010019</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>FALSE</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsPatchableInModule_root_page PcdsPatchableInModule
<p> \section content_index INDEX
<ul>
<li>\subpage pcd_PcdsPatchableInModule_common_root_page "common" </li>
</ul>
 **/
/** \page pcd_PcdsPatchableInModule_common_root_page common
<p> \section content_index INDEX
<ul>
<li>\subpage pcd_PcdsPatchableInModule_common_PcdCpuRngSupportedAlgorithm "gEfiSecurityPkgTokenSpaceGuid.PcdCpuRngSupportedAlgorithm" </li>
<li>\subpage pcd_PcdsPatchableInModule_common_PcdDeferImageLoadPolicy "gEfiSecurityPkgTokenSpaceGuid.PcdDeferImageLoadPolicy" </li>
<li>\subpage pcd_PcdsPatchableInModule_common_PcdFirmwareDebuggerInitialized "gEfiSecurityPkgTokenSpaceGuid.PcdFirmwareDebuggerInitialized" </li>
<li>\subpage pcd_PcdsPatchableInModule_common_PcdFixedMediaImageVerificationPolicy "gEfiSecurityPkgTokenSpaceGuid.PcdFixedMediaImageVerificationPolicy" </li>
<li>\subpage pcd_PcdsPatchableInModule_common_PcdFixedUsbCredentialProviderTokenFileName "gEfiSecurityPkgTokenSpaceGuid.PcdFixedUsbCredentialProviderTokenFileName" </li>
<li>\subpage pcd_PcdsPatchableInModule_common_PcdMaxAppendVariableSize "gEfiSecurityPkgTokenSpaceGuid.PcdMaxAppendVariableSize" </li>
<li>\subpage pcd_PcdsPatchableInModule_common_PcdOptionRomImageVerificationPolicy "gEfiSecurityPkgTokenSpaceGuid.PcdOptionRomImageVerificationPolicy" </li>
<li>\subpage pcd_PcdsPatchableInModule_common_PcdPhysicalPresenceCmdEnable "gEfiSecurityPkgTokenSpaceGuid.PcdPhysicalPresenceCmdEnable" </li>
<li>\subpage pcd_PcdsPatchableInModule_common_PcdPhysicalPresenceHwEnable "gEfiSecurityPkgTokenSpaceGuid.PcdPhysicalPresenceHwEnable" </li>
<li>\subpage pcd_PcdsPatchableInModule_common_PcdPhysicalPresenceLifetimeLock "gEfiSecurityPkgTokenSpaceGuid.PcdPhysicalPresenceLifetimeLock" </li>
<li>\subpage pcd_PcdsPatchableInModule_common_PcdPkcs7CertBuffer "gEfiSecurityPkgTokenSpaceGuid.PcdPkcs7CertBuffer" </li>
<li>\subpage pcd_PcdsPatchableInModule_common_PcdRandomizePlatformHierarchy "gEfiSecurityPkgTokenSpaceGuid.PcdRandomizePlatformHierarchy" </li>
<li>\subpage pcd_PcdsPatchableInModule_common_PcdRemovableMediaImageVerificationPolicy "gEfiSecurityPkgTokenSpaceGuid.PcdRemovableMediaImageVerificationPolicy" </li>
<li>\subpage pcd_PcdsPatchableInModule_common_PcdRsa2048Sha256PublicKeyBuffer "gEfiSecurityPkgTokenSpaceGuid.PcdRsa2048Sha256PublicKeyBuffer" </li>
<li>\subpage pcd_PcdsPatchableInModule_common_PcdSkipHddPasswordPrompt "gEfiSecurityPkgTokenSpaceGuid.PcdSkipHddPasswordPrompt" </li>
<li>\subpage pcd_PcdsPatchableInModule_common_PcdSkipOpalPasswordPrompt "gEfiSecurityPkgTokenSpaceGuid.PcdSkipOpalPasswordPrompt" </li>
<li>\subpage pcd_PcdsPatchableInModule_common_PcdSmiCommandIoPort "gEfiSecurityPkgTokenSpaceGuid.PcdSmiCommandIoPort" </li>
<li>\subpage pcd_PcdsPatchableInModule_common_PcdStatusCodeFvVerificationFail "gEfiSecurityPkgTokenSpaceGuid.PcdStatusCodeFvVerificationFail" </li>
<li>\subpage pcd_PcdsPatchableInModule_common_PcdStatusCodeFvVerificationPass "gEfiSecurityPkgTokenSpaceGuid.PcdStatusCodeFvVerificationPass" </li>
<li>\subpage pcd_PcdsPatchableInModule_common_PcdStatusCodeSubClassTpmDevice "gEfiSecurityPkgTokenSpaceGuid.PcdStatusCodeSubClassTpmDevice" </li>
<li>\subpage pcd_PcdsPatchableInModule_common_PcdTcg2FinalLogAreaLen "gEfiSecurityPkgTokenSpaceGuid.PcdTcg2FinalLogAreaLen" </li>
<li>\subpage pcd_PcdsPatchableInModule_common_PcdTcg2NumberOfPCRBanks "gEfiSecurityPkgTokenSpaceGuid.PcdTcg2NumberOfPCRBanks" </li>
<li>\subpage pcd_PcdsPatchableInModule_common_PcdTcg2PhysicalPresenceFlags "gEfiSecurityPkgTokenSpaceGuid.PcdTcg2PhysicalPresenceFlags" </li>
<li>\subpage pcd_PcdsPatchableInModule_common_PcdTcgLogAreaMinLen "gEfiSecurityPkgTokenSpaceGuid.PcdTcgLogAreaMinLen" </li>
<li>\subpage pcd_PcdsPatchableInModule_common_PcdTcgPhysicalPresenceInterfaceVer "gEfiSecurityPkgTokenSpaceGuid.PcdTcgPhysicalPresenceInterfaceVer" </li>
<li>\subpage pcd_PcdsPatchableInModule_common_PcdTpm2AcpiTableRev "gEfiSecurityPkgTokenSpaceGuid.PcdTpm2AcpiTableRev" </li>
<li>\subpage pcd_PcdsPatchableInModule_common_PcdTpm2CurrentIrqNum "gEfiSecurityPkgTokenSpaceGuid.PcdTpm2CurrentIrqNum" </li>
<li>\subpage pcd_PcdsPatchableInModule_common_PcdTpm2InitializationPolicy "gEfiSecurityPkgTokenSpaceGuid.PcdTpm2InitializationPolicy" </li>
<li>\subpage pcd_PcdsPatchableInModule_common_PcdTpm2PossibleIrqNumBuf "gEfiSecurityPkgTokenSpaceGuid.PcdTpm2PossibleIrqNumBuf" </li>
<li>\subpage pcd_PcdsPatchableInModule_common_PcdTpm2ScrtmPolicy "gEfiSecurityPkgTokenSpaceGuid.PcdTpm2ScrtmPolicy" </li>
<li>\subpage pcd_PcdsPatchableInModule_common_PcdTpm2SelfTestPolicy "gEfiSecurityPkgTokenSpaceGuid.PcdTpm2SelfTestPolicy" </li>
<li>\subpage pcd_PcdsPatchableInModule_common_PcdTpmAutoDetection "gEfiSecurityPkgTokenSpaceGuid.PcdTpmAutoDetection" </li>
<li>\subpage pcd_PcdsPatchableInModule_common_PcdTpmBaseAddress "gEfiSecurityPkgTokenSpaceGuid.PcdTpmBaseAddress" </li>
<li>\subpage pcd_PcdsPatchableInModule_common_PcdTpmInitializationPolicy "gEfiSecurityPkgTokenSpaceGuid.PcdTpmInitializationPolicy" </li>
<li>\subpage pcd_PcdsPatchableInModule_common_PcdTpmInstanceGuid  "gEfiSecurityPkgTokenSpaceGuid.PcdTpmInstanceGuid " </li>
<li>\subpage pcd_PcdsPatchableInModule_common_PcdTpmPhysicalPresence "gEfiSecurityPkgTokenSpaceGuid.PcdTpmPhysicalPresence" </li>
<li>\subpage pcd_PcdsPatchableInModule_common_PcdTpmPlatformClass "gEfiSecurityPkgTokenSpaceGuid.PcdTpmPlatformClass" </li>
<li>\subpage pcd_PcdsPatchableInModule_common_PcdTpmScrtmPolicy "gEfiSecurityPkgTokenSpaceGuid.PcdTpmScrtmPolicy" </li>
<li>\subpage pcd_PcdsPatchableInModule_common_PcdUserPhysicalPresence "gEfiSecurityPkgTokenSpaceGuid.PcdUserPhysicalPresence" </li>
</ul>
 **/
/** \page pcd_PcdsPatchableInModule_common_PcdCpuRngSupportedAlgorithm gEfiSecurityPkgTokenSpaceGuid.PcdCpuRngSupportedAlgorithm
<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdCpuRngSupportedAlgorithm</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010032</CAPTION></TD><TD><CAPTION>VOID*</CAPTION></TD><TD><CAPTION>{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsPatchableInModule_common_PcdDeferImageLoadPolicy gEfiSecurityPkgTokenSpaceGuid.PcdDeferImageLoadPolicy
 Defer Image Load policy settings. The policy is bitwise.<br>
  If a bit is set, the image from corresponding device will be trusted when loading. Or<br>
  the image will be deferred. The deferred image will be checked after user is identified.<BR><BR><br>
    BIT0       - Image from unknown device. <BR><br>
    BIT1       - Image from firmware volume.<BR><br>
    BIT2       - Image from OptionRom.<BR><br>
    BIT3       - Image from removable media which includes CD-ROM, Floppy, USB and network.<BR><br>
    BIT4       - Image from fixed media device which includes hard disk.<BR><br>
 @Prompt Set policy whether trust image before user identification.<br>
 @ValidRange 0x80000002 | 0x00000000 - 0x0000001F<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdDeferImageLoadPolicy</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0000004</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x0000001F</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsPatchableInModule_common_PcdFirmwareDebuggerInitialized gEfiSecurityPkgTokenSpaceGuid.PcdFirmwareDebuggerInitialized
 This PCD indicates if debugger exists. <BR><BR><br>
   TRUE  - Firmware debugger exists.<BR><br>
   FALSE - Firmware debugger doesn't exist.<BR><br>
 @Prompt Firmware debugger status.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdFirmwareDebuggerInitialized</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010009</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>FALSE</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsPatchableInModule_common_PcdFixedMediaImageVerificationPolicy gEfiSecurityPkgTokenSpaceGuid.PcdFixedMediaImageVerificationPolicy
 Image verification policy for fixed media which includes hard disk.<br>
  Only following values are valid:<BR><BR><br>
  NOTE: Do NOT use 0x5 and 0x2 since it violates the UEFI specification and has been removed.<BR><br>
  0x00000000      Always trust the image.<BR><br>
  0x00000001      Never trust the image.<BR><br>
  0x00000002      Allow execution when there is security violation.<BR><br>
  0x00000003      Defer execution when there is security violation.<BR><br>
  0x00000004      Deny execution when there is security violation.<BR><br>
  0x00000005      Query user when there is security violation.<BR><br>
 @Prompt Set policy for the image from fixed media.<br>
 @ValidRange 0x80000001 | 0x00000000 - 0x00000005<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdFixedMediaImageVerificationPolicy</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00000003</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x04</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsPatchableInModule_common_PcdFixedUsbCredentialProviderTokenFileName gEfiSecurityPkgTokenSpaceGuid.PcdFixedUsbCredentialProviderTokenFileName
 Null-terminated Unicode string of the file name that is the default name to save USB credential.<br>
  The specified file should be saved at the root directory of USB storage disk.<br>
 @Prompt File name to save credential.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdFixedUsbCredentialProviderTokenFileName</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00000005</CAPTION></TD><TD><CAPTION>VOID*</CAPTION></TD><TD><CAPTION>L"Token.bin"</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsPatchableInModule_common_PcdMaxAppendVariableSize gEfiSecurityPkgTokenSpaceGuid.PcdMaxAppendVariableSize
 The size of Append variable buffer. This buffer is reserved for runtime use, OS can append data into one existing variable.<br>
  Note: This PCD is not been used.<br>
 @Prompt Max variable size for append operation.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdMaxAppendVariableSize</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x30000005</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x2000</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsPatchableInModule_common_PcdOptionRomImageVerificationPolicy gEfiSecurityPkgTokenSpaceGuid.PcdOptionRomImageVerificationPolicy
 Image verification policy for OptionRom. Only following values are valid:<BR><BR><br>
  NOTE: Do NOT use 0x5 and 0x2 since it violates the UEFI specification and has been removed.<BR><br>
  0x00000000      Always trust the image.<BR><br>
  0x00000001      Never trust the image.<BR><br>
  0x00000002      Allow execution when there is security violation.<BR><br>
  0x00000003      Defer execution when there is security violation.<BR><br>
  0x00000004      Deny execution when there is security violation.<BR><br>
  0x00000005      Query user when there is security violation.<BR><br>
 @Prompt Set policy for the image from OptionRom.<br>
 @ValidRange 0x80000001 | 0x00000000 - 0x00000005<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdOptionRomImageVerificationPolicy</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00000001</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x04</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsPatchableInModule_common_PcdPhysicalPresenceCmdEnable gEfiSecurityPkgTokenSpaceGuid.PcdPhysicalPresenceCmdEnable
 Indicates whether the platform supports the software method of asserting physical presence.<BR><BR><br>
   TRUE  - Supports the software method of asserting physical presence.<BR><br>
   FALSE - Does not support the software method of asserting physical presence.<BR><br>
 @Prompt Enable software method of asserting physical presence.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdPhysicalPresenceCmdEnable</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010004</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>TRUE</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsPatchableInModule_common_PcdPhysicalPresenceHwEnable gEfiSecurityPkgTokenSpaceGuid.PcdPhysicalPresenceHwEnable
 Indicates whether the platform supports the hardware method of asserting physical presence.<BR><BR><br>
   TRUE  - Supports the hardware method of asserting physical presence.<BR><br>
   FALSE - Does not support the hardware method of asserting physical presence.<BR><br>
 @Prompt Enable hardware method of asserting physical presence.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdPhysicalPresenceHwEnable</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010005</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>TRUE</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsPatchableInModule_common_PcdPhysicalPresenceLifetimeLock gEfiSecurityPkgTokenSpaceGuid.PcdPhysicalPresenceLifetimeLock
 Indicates whether TPM physical presence is locked during platform initialization.<br>
  Once it is locked, it can not be unlocked for TPM life time.<BR><BR><br>
   TRUE  - Lock TPM physical presence asserting method.<BR><br>
   FALSE - Not lock TPM physical presence asserting method.<BR><br>
 @Prompt Lock TPM physical presence asserting method.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdPhysicalPresenceLifetimeLock</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010003</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>FALSE</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsPatchableInModule_common_PcdPkcs7CertBuffer gEfiSecurityPkgTokenSpaceGuid.PcdPkcs7CertBuffer
 Provides one PKCS7 cert used to verify Recovery and Capsule Update images<br>
  WARNING: The default value is treated as test key. Please do not use default value in the production.<br>
 @Prompt One PKCS7 cert used to verify Recovery and Capsule Update images<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdPkcs7CertBuffer</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010014</CAPTION></TD><TD><CAPTION>VOID*</CAPTION></TD><TD><CAPTION>{0x30, 0x82, 0x03, 0xec, 0x30, 0x82, 0x02, 0xd4, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x09, 0x00, 0xc0, 0x91, 0xc5, 0xe2, 0xb7, 0x66, 0xc0, 0xf8, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x0b, 0x05, 0x00, 0x30, 0x81, 0x82, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x43, 0x4e, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x08, 0x0c, 0x02, 0x53, 0x48, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x07, 0x0c, 0x02, 0x53, 0x48, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x09, 0x54, 0x69, 0x61, 0x6e, 0x6f, 0x43, 0x6f, 0x72, 0x65, 0x31, 0x0e, 0x30, 0x0c, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x0c, 0x05, 0x45, 0x44, 0x4b, 0x49, 0x49, 0x31, 0x11, 0x30, 0x0f, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x08, 0x54, 0x65, 0x73, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x31, 0x22, 0x30, 0x20, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x09, 0x01, 0x16, 0x13, 0x65, 0x64, 0x6b, 0x69, 0x69, 0x40, 0x74, 0x69, 0x61, 0x6e, 0x6f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6f, 0x72, 0x67, 0x30, 0x1e, 0x17, 0x0d, 0x31, 0x37, 0x30, 0x34, 0x31, 0x30, 0x30, 0x38, 0x32, 0x37, 0x34, 0x30, 0x5a, 0x17, 0x0d, 0x31, 0x37, 0x30, 0x35, 0x31, 0x30, 0x30, 0x38, 0x32, 0x37, 0x34, 0x30, 0x5a, 0x30, 0x81, 0x82, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x43, 0x4e, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x08, 0x0c, 0x02, 0x53, 0x48, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x07, 0x0c, 0x02, 0x53, 0x48, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x09, 0x54, 0x69, 0x61, 0x6e, 0x6f, 0x43, 0x6f, 0x72, 0x65, 0x31, 0x0e, 0x30, 0x0c, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x0c, 0x05, 0x45, 0x44, 0x4b, 0x49, 0x49, 0x31, 0x11, 0x30, 0x0f, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x08, 0x54, 0x65, 0x73, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x31, 0x22, 0x30, 0x20, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x09, 0x01, 0x16, 0x13, 0x65, 0x64, 0x6b, 0x69, 0x69, 0x40, 0x74, 0x69, 0x61, 0x6e, 0x6f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6f, 0x72, 0x67, 0x30, 0x82, 0x01, 0x22, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x01, 0x05, 0x00, 0x03, 0x82, 0x01, 0x0f, 0x00, 0x30, 0x82, 0x01, 0x0a, 0x02, 0x82, 0x01, 0x01, 0x00, 0xb9, 0x29, 0x29, 0x6c, 0x60, 0x0c, 0xd7, 0x23, 0xf6, 0x7d, 0xee, 0xf0, 0x62, 0xff, 0xd9, 0xc9, 0xaa, 0x55, 0x8c, 0x81, 0x95, 0x56, 0x3f, 0xb7, 0x56, 0x53, 0xb0, 0xc2, 0x82, 0x12, 0xc5, 0x3b, 0x75, 0x23, 0xb9, 0x4d, 0xd6, 0xc4, 0x55, 0x73, 0xf3, 0xaa, 0x95, 0xa8, 0x1b, 0xf3, 0x93, 0x7e, 0x9e, 0x40, 0xe4, 0x1d, 0x22, 0x9c, 0x93, 0x07, 0x0b, 0xd7, 0xaa, 0x5b, 0xd7, 0xe4, 0x1a, 0x21, 0x84, 0xd7, 0x63, 0x59, 0x03, 0x50, 0x1f, 0xf5, 0x14, 0x55, 0x93, 0x91, 0x9b, 0xf5, 0x52, 0xb0, 0xbf, 0x0e, 0x5c, 0x68, 0x3b, 0x59, 0x52, 0x98, 0x96, 0x56, 0xe1, 0xab, 0xc4, 0x43, 0xbb, 0x05, 0x57, 0x78, 0x45, 0x01, 0x9f, 0x58, 0x15, 0x53, 0x0e, 0x11, 0x94, 0x2f, 0x0e, 0xf1, 0xa6, 0x19, 0xa2, 0x6e, 0x86, 0x39, 0x2b, 0x33, 0x8d, 0xc7, 0xc5, 0xeb, 0xee, 0x1e, 0x33, 0xd3, 0x32, 0x94, 0xc1, 0x59, 0xc4, 0x0c, 0x97, 0x0b, 0x12, 0x48, 0x5f, 0x33, 0xf6, 0x60, 0x74, 0x7d, 0x57, 0xc2, 0x13, 0x2d, 0x7d, 0xa9, 0x87, 0xa3, 0x35, 0xea, 0x91, 0x83, 0x3f, 0x67, 0x7a, 0x92, 0x1f, 0x01, 0x53, 0x9f, 0x62, 0x5f, 0x99, 0x12, 0xfd, 0x73, 0x1b, 0x2d, 0x9e, 0x2b, 0x6c, 0x34, 0x49, 0xaf, 0x4f, 0x07, 0x8f, 0xc0, 0xe9, 0x6b, 0x9e, 0x5f, 0x79, 0x35, 0xda, 0x2a, 0x5c, 0x88, 0xee, 0xf6, 0x48, 0x61, 0xda, 0x96, 0xe3, 0x48, 0x46, 0xa0, 0x94, 0x1c, 0x9d, 0xf6, 0x5c, 0x87, 0x0e, 0xef, 0x74, 0x09, 0x91, 0x0d, 0x3d, 0x5a, 0xe7, 0xc5, 0x4c, 0x8a, 0x7a, 0xac, 0xa1, 0x85, 0xb6, 0x67, 0x44, 0x17, 0x55, 0x52, 0x3a, 0xe8, 0x11, 0x4d, 0x58, 0xa2, 0x93, 0x00, 0x62, 0xea, 0x7b, 0x80, 0xed, 0xcf, 0xbd, 0xdf, 0x75, 0x80, 0x4b, 0xb9, 0x65, 0x63, 0xad, 0x0b, 0x4d, 0x74, 0xfa, 0x59, 0x02, 0x03, 0x01, 0x00, 0x01, 0xa3, 0x63, 0x30, 0x61, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0x16, 0xaa, 0xd6, 0x8e, 0x1b, 0x2d, 0x43, 0xf3, 0x2d, 0xb0, 0x24, 0xad, 0x36, 0x65, 0x3f, 0xb2, 0xfa, 0xb1, 0x2c, 0xed, 0x30, 0x1f, 0x06, 0x03, 0x55, 0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0x16, 0xaa, 0xd6, 0x8e, 0x1b, 0x2d, 0x43, 0xf3, 0x2d, 0xb0, 0x24, 0xad, 0x36, 0x65, 0x3f, 0xb2, 0xfa, 0xb1, 0x2c, 0xed, 0x30, 0x0f, 0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x05, 0x30, 0x03, 0x01, 0x01, 0xff, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff, 0x04, 0x04, 0x03, 0x02, 0x01, 0x86, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x0b, 0x05, 0x00, 0x03, 0x82, 0x01, 0x01, 0x00, 0x95, 0xde, 0xdf, 0xa4, 0x14, 0xdb, 0x92, 0x22, 0x78, 0x1a, 0xbd, 0x31, 0x9d, 0x1e, 0xd7, 0x2f, 0x0a, 0x10, 0x11, 0x5d, 0x74, 0x61, 0xe8, 0x30, 0xc4, 0xf3, 0x15, 0xe9, 0x30, 0x54, 0xf4, 0xbb, 0x0c, 0x04, 0x78, 0x13, 0x5d, 0x2c, 0xdd, 0x8c, 0x92, 0x90, 0xd1, 0x9c, 0xd0, 0xd0, 0x18, 0xa3, 0xa3, 0xfc, 0x8c, 0x28, 0x5a, 0xd4, 0x91, 0x4d, 0x08, 0xc3, 0xf6, 0x1a, 0xc8, 0xdd, 0xa6, 0x08, 0x58, 0xe2, 0x15, 0x95, 0xfb, 0x2d, 0x2d, 0x8a, 0xb1, 0x30, 0x80, 0xbd, 0x9a, 0xb6, 0xe1, 0x2c, 0x20, 0x3e, 0xdd, 0xc4, 0xc7, 0x55, 0x65, 0xcf, 0x28, 0x17, 0xf4, 0xee, 0xda, 0xbe, 0x77, 0x70, 0xd5, 0x52, 0xd6, 0x15, 0x7a, 0xfb, 0xad, 0xaf, 0xfd, 0xd5, 0x45, 0x90, 0x5a, 0xe6, 0x31, 0x42, 0xd7, 0x84, 0xb3, 0x49, 0x56, 0x6a, 0xd3, 0x47, 0xf3, 0xbf, 0x68, 0x60, 0x8b, 0x0f, 0xe2, 0xaf, 0xf4, 0xe3, 0xec, 0x12, 0xb9, 0xe2, 0x3a, 0x16, 0x11, 0x4e, 0x4d, 0x73, 0x79, 0xaf, 0x47, 0x85, 0x4c, 0x76, 0x26, 0x9e, 0x8b, 0x32, 0xc0, 0x8e, 0xc2, 0xdc, 0x27, 0xa6, 0xef, 0xac, 0x93, 0x9e, 0xa1, 0x5e, 0xcf, 0x34, 0x45, 0xe0, 0x2a, 0xc7, 0x9d, 0x4d, 0xd7, 0xd7, 0x37, 0x72, 0x97, 0xf8, 0x58, 0xf9, 0xb6, 0x35, 0x48, 0xf1, 0xd1, 0x0a, 0x72, 0x7f, 0xfd, 0x4d, 0x7c, 0xe9, 0xcc, 0xd8, 0x48, 0x1b, 0x49, 0x52, 0x53, 0xde, 0x51, 0x01, 0x53, 0x35, 0xbc, 0x90, 0xcd, 0x8c, 0x8a, 0xcc, 0x43, 0x20, 0xa7, 0x45, 0xff, 0x2b, 0x55, 0xb0, 0x8b, 0x2d, 0xff, 0x55, 0x15, 0x4b, 0x84, 0xd0, 0xc3, 0xd3, 0x90, 0x9c, 0x94, 0x4b, 0x55, 0xd5, 0x62, 0xea, 0x22, 0xab, 0x62, 0x68, 0xdd, 0x53, 0xc6, 0xdc, 0xa5, 0xdd, 0x9a, 0x2d, 0x8e, 0x79, 0x7c, 0x2e, 0x9c, 0xe4, 0x66, 0x80, 0x8c, 0x1d}</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsPatchableInModule_common_PcdRandomizePlatformHierarchy gEfiSecurityPkgTokenSpaceGuid.PcdRandomizePlatformHierarchy
 Indicates whether the TPM2 platform hierarchy will be disabled by using<br>
  a random password or by disabling the hierarchy<br>
   TRUE  - A random password will be used<br>
   FALSE - The hierarchy will be disabled<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdRandomizePlatformHierarchy</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010024</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>TRUE</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsPatchableInModule_common_PcdRemovableMediaImageVerificationPolicy gEfiSecurityPkgTokenSpaceGuid.PcdRemovableMediaImageVerificationPolicy
 Image verification policy for removable media which includes CD-ROM, Floppy, USB and network.<br>
  Only following values are valid:<BR><BR><br>
  NOTE: Do NOT use 0x5 and 0x2 since it violates the UEFI specification and has been removed.<BR><br>
  0x00000000      Always trust the image.<BR><br>
  0x00000001      Never trust the image.<BR><br>
  0x00000002      Allow execution when there is security violation.<BR><br>
  0x00000003      Defer execution when there is security violation.<BR><br>
  0x00000004      Deny execution when there is security violation.<BR><br>
  0x00000005      Query user when there is security violation.<BR><br>
 @Prompt Set policy for the image from removable media.<br>
 @ValidRange 0x80000001 | 0x00000000 - 0x00000005<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdRemovableMediaImageVerificationPolicy</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00000002</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x04</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsPatchableInModule_common_PcdRsa2048Sha256PublicKeyBuffer gEfiSecurityPkgTokenSpaceGuid.PcdRsa2048Sha256PublicKeyBuffer
 Provides one or more SHA 256 Hashes of the RSA 2048 public keys used to verify Recovery and Capsule Update images<br>
  WARNING: The default value is treated as test key. Please do not use default value in the production.<br>
 @Prompt One or more SHA 256 Hashes of RSA 2048 bit public keys used to verify Recovery and Capsule Update images<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdRsa2048Sha256PublicKeyBuffer</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010013</CAPTION></TD><TD><CAPTION>VOID*</CAPTION></TD><TD><CAPTION>{0x91, 0x29, 0xc4, 0xbd, 0xea, 0x6d, 0xda, 0xb3, 0xaa, 0x6f, 0x50, 0x16, 0xfc, 0xdb, 0x4b, 0x7e, 0x3c, 0xd6, 0xdc, 0xa4, 0x7a, 0x0e, 0xdd, 0xe6, 0x15, 0x8c, 0x73, 0x96, 0xa2, 0xd4, 0xa6, 0x4d}</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsPatchableInModule_common_PcdSkipHddPasswordPrompt gEfiSecurityPkgTokenSpaceGuid.PcdSkipHddPasswordPrompt
 Indicates if Hdd Password driver skip password prompt.<BR><BR><br>
   TRUE  - Skip password prompt.<BR><br>
   FALSE - Does not skip password prompt.<BR><br>
 @Prompt Skip Hdd Password prompt.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdSkipHddPasswordPrompt</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010021</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>FALSE</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsPatchableInModule_common_PcdSkipOpalPasswordPrompt gEfiSecurityPkgTokenSpaceGuid.PcdSkipOpalPasswordPrompt
 Indicates if Opal DXE driver skip password prompt.<BR><BR><br>
   TRUE  - Skip password prompt.<BR><br>
   FALSE - Does not skip password prompt.<BR><br>
 @Prompt Skip Opal DXE driver password prompt.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdSkipOpalPasswordPrompt</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010020</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>FALSE</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsPatchableInModule_common_PcdSmiCommandIoPort gEfiSecurityPkgTokenSpaceGuid.PcdSmiCommandIoPort
 Defines the IO port used to trigger a software System Management Interrupt (SMI).<BR><BR><br>
  Used as the SMI Command IO port by security functionality that triggers a software SMI such<br>
  as Physical Presence Interface (PPI).<BR><br>
 @Prompt SMI Command IO port.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdSmiCommandIoPort</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00000009</CAPTION></TD><TD><CAPTION>UINT16</CAPTION></TD><TD><CAPTION>0xB2</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsPatchableInModule_common_PcdStatusCodeFvVerificationFail gEfiSecurityPkgTokenSpaceGuid.PcdStatusCodeFvVerificationFail
<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdStatusCodeFvVerificationFail</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010031</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x0303100B</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsPatchableInModule_common_PcdStatusCodeFvVerificationPass gEfiSecurityPkgTokenSpaceGuid.PcdStatusCodeFvVerificationPass
 Progress Code for FV verification result.<BR><BR><br>
  (EFI_SOFTWARE_PEI_MODULE | EFI_SUBCLASS_SPECIFIC | XXX)<br>
 @Prompt Status Code for FV verification result<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdStatusCodeFvVerificationPass</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010030</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x0303100A</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsPatchableInModule_common_PcdStatusCodeSubClassTpmDevice gEfiSecurityPkgTokenSpaceGuid.PcdStatusCodeSubClassTpmDevice
 Progress Code for TPM device subclass definitions.<BR><BR><br>
  EFI_PERIPHERAL_TPM  = (EFI_PERIPHERAL | 0x000D0000) = 0x010D0000<BR><br>
 @Prompt Status Code for TPM device definitions<br>
 @ValidList  0x80000003 | 0x010D0000<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdStatusCodeSubClassTpmDevice</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00000007</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x010D0000</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsPatchableInModule_common_PcdTcg2FinalLogAreaLen gEfiSecurityPkgTokenSpaceGuid.PcdTcg2FinalLogAreaLen
 This PCD defines length(in bytes) of the TCG2 Final event log area.<br>
 @Prompt Length(in bytes) of the TCG2 Final event log area.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTcg2FinalLogAreaLen</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010018</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x8000</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsPatchableInModule_common_PcdTcg2NumberOfPCRBanks gEfiSecurityPkgTokenSpaceGuid.PcdTcg2NumberOfPCRBanks
 This PCR means the OEM configured number of PCR banks.<br>
  0 means dynamic get from supported HASH algorithm<br>
 @Prompt OEM configured number of PCR banks.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTcg2NumberOfPCRBanks</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010015</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x0</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsPatchableInModule_common_PcdTcg2PhysicalPresenceFlags gEfiSecurityPkgTokenSpaceGuid.PcdTcg2PhysicalPresenceFlags
 This PCD defines initial setting of TCG2 Persistent Firmware Management Flags<br>
 PCD can be configured for different settings in different scenarios<br>
 This PCD follows UEFI TCG2 library definition bit of the BIOS TPM/Storage Management Flags<BR><br>
    BIT0  -  Reserved <BR><br>
    BIT1  -  TCG2_BIOS_TPM_MANAGEMENT_FLAG_PP_REQUIRED_FOR_CLEAR <BR><br>
    BIT2  -  Reserved <BR><br>
    BIT3  -  TCG2_LIB_PP_FLAG_RESET_TRACK <BR><br>
    BIT4  -  TCG2_BIOS_TPM_MANAGEMENT_FLAG_PP_REQUIRED_FOR_TURN_ON <BR><br>
    BIT5  -  TCG2_BIOS_TPM_MANAGEMENT_FLAG_PP_REQUIRED_FOR_TURN_OFF <BR><br>
    BIT6  -  TCG2_BIOS_TPM_MANAGEMENT_FLAG_PP_REQUIRED_FOR_CHANGE_EPS <BR><br>
    BIT7  -  TCG2_BIOS_TPM_MANAGEMENT_FLAG_PP_REQUIRED_FOR_CHANGE_PCRS <BR><br>
    BIT16 -  TCG2_BIOS_STORAGE_MANAGEMENT_FLAG_PP_REQUIRED_FOR_ENABLE_BLOCK_SID <BR><br>
    BIT17 -  TCG2_BIOS_STORAGE_MANAGEMENT_FLAG_PP_REQUIRED_FOR_DISABLE_BLOCK_SID <BR><br>
    BIT18 -  TCG2_BIOS_STORAGE_MANAGEMENT_FLAG_ENABLE_BLOCK_SID <BR><br>
 @Prompt Initial setting of TCG2 Persistent Firmware Management Flags<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTcg2PhysicalPresenceFlags</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001001B</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x700E2</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsPatchableInModule_common_PcdTcgLogAreaMinLen gEfiSecurityPkgTokenSpaceGuid.PcdTcgLogAreaMinLen
 This PCD defines minimum length(in bytes) of the system preboot TCG event log area(LAML).<br>
  For PC Client Implementation spec up to and including 1.2 the minimum log size is 64KB.<br>
 @Prompt Minimum length(in bytes) of the system preboot TCG event log area(LAML).<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTcgLogAreaMinLen</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010017</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x10000</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsPatchableInModule_common_PcdTcgPhysicalPresenceInterfaceVer gEfiSecurityPkgTokenSpaceGuid.PcdTcgPhysicalPresenceInterfaceVer
 Null-terminated string of the Version of Physical Presence interface supported by platform.<BR><BR><br>
 To support configuring from setup page, this PCD can be DynamicHii type and map to a setup option.<BR><br>
 For example, map to TCG2_VERSION.PpiVersion to be configured by Tcg2ConfigDxe driver.<BR><br>
 gEfiSecurityPkgTokenSpaceGuid.PcdTcgPhysicalPresenceInterfaceVer|L"TCG2_VERSION"|gTcg2ConfigFormSetGuid|0x0|"1.3"|NV,BS<BR><br>
 @Prompt Version of Physical Presence interface supported by platform.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTcgPhysicalPresenceInterfaceVer</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00000008</CAPTION></TD><TD><CAPTION>VOID*</CAPTION></TD><TD><CAPTION>"1.3"</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsPatchableInModule_common_PcdTpm2AcpiTableRev gEfiSecurityPkgTokenSpaceGuid.PcdTpm2AcpiTableRev
 Indicate the TPM2 ACPI table revision. Rev 4 has been defined since TCG ACPI Specification Rev 00.37.<BR><BR><br>
 To support configuring from setup page, this PCD can be DynamicHii type and map to a setup option.<BR><br>
 For example, map to TCG2_VERSION.Tpm2AcpiTableRev to be configured by Tcg2ConfigDxe driver.<BR><br>
 gEfiSecurityPkgTokenSpaceGuid.PcdTpm2AcpiTableRev|L"TCG2_VERSION"|gTcg2ConfigFormSetGuid|0x8|3|NV,BS<BR><br>
 @Prompt Revision of TPM2 ACPI table.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpm2AcpiTableRev</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001001A</CAPTION></TD><TD><CAPTION>UINT8</CAPTION></TD><TD><CAPTION>3</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsPatchableInModule_common_PcdTpm2CurrentIrqNum gEfiSecurityPkgTokenSpaceGuid.PcdTpm2CurrentIrqNum
 Indicate current TPM2 Interrupt Number reported by _CRS control method.<BR><BR><br>
 TPM2 Interrupt feature is disabled If the pcd is set to 0.<BR><br>
 @Prompt Current TPM2 Interrupt Number<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpm2CurrentIrqNum</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001001C</CAPTION></TD><TD><CAPTION>UINT32</CAPTION></TD><TD><CAPTION>0x00</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsPatchableInModule_common_PcdTpm2InitializationPolicy gEfiSecurityPkgTokenSpaceGuid.PcdTpm2InitializationPolicy
 This PCD indicates the initialization policy for TPM 2.0.<BR><BR><br>
  If 0, no initialization needed - most likely used for chipset SRTM solution, in which TPM is already initialized.<BR><br>
  If 1, initialization needed.<BR><br>
 @Prompt TPM 2.0 device initialization policy.<BR><br>
 @ValidRange 0x80000001 | 0x00 - 0x1<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpm2InitializationPolicy</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001000A</CAPTION></TD><TD><CAPTION>UINT8</CAPTION></TD><TD><CAPTION>1</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsPatchableInModule_common_PcdTpm2PossibleIrqNumBuf gEfiSecurityPkgTokenSpaceGuid.PcdTpm2PossibleIrqNumBuf
 Indicate platform possible TPM2 Interrupt Number reported by _PRS control method.<BR><BR><br>
 Possible TPM2 Interrupt Number Buffer will not be reported if TPM2 Interrupt feature is disabled.<BR><br>
 @Prompt Possible TPM2 Interrupt Number buffer<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpm2PossibleIrqNumBuf</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001001D</CAPTION></TD><TD><CAPTION>VOID*</CAPTION></TD><TD><CAPTION>{0x00, 0x00, 0x00, 0x00}</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsPatchableInModule_common_PcdTpm2ScrtmPolicy gEfiSecurityPkgTokenSpaceGuid.PcdTpm2ScrtmPolicy
 This PCD indicates Static Core Root of Trust for Measurement (SCRTM) policy using TPM 2.0.<BR><BR><br>
  if 0, no SCRTM measurement needed - In this case, it is already done.<BR><br>
  if 1, SCRTM measurement done by BIOS.<BR><br>
 @Prompt SCRTM policy setting for TPM 2.0 device.<br>
 @ValidRange 0x80000001 | 0x00 - 0x1<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpm2ScrtmPolicy</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001000D</CAPTION></TD><TD><CAPTION>UINT8</CAPTION></TD><TD><CAPTION>1</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsPatchableInModule_common_PcdTpm2SelfTestPolicy gEfiSecurityPkgTokenSpaceGuid.PcdTpm2SelfTestPolicy
 This PCD indicates the TPM 2.0 SelfTest policy.<BR><BR><br>
  if 0, no SelfTest needed - most likely used for fTPM, because it might already be tested.<BR><br>
  if 1, SelfTest needed.<BR><br>
 @Prompt TPM 2.0 device selftest.<br>
 @ValidRange 0x80000001 | 0x00 - 0x1<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpm2SelfTestPolicy</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001000C</CAPTION></TD><TD><CAPTION>UINT8</CAPTION></TD><TD><CAPTION>1</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsPatchableInModule_common_PcdTpmAutoDetection gEfiSecurityPkgTokenSpaceGuid.PcdTpmAutoDetection
 This PCD indicates if BIOS auto detect TPM1.2 or dTPM2.0.<BR><BR><br>
  FALSE - No auto detection.<BR><br>
  TRUE  - Auto detection.<BR><br>
 @Prompt TPM type detection.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpmAutoDetection</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010011</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>TRUE</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsPatchableInModule_common_PcdTpmBaseAddress gEfiSecurityPkgTokenSpaceGuid.PcdTpmBaseAddress
 This PCD indicates TPM base address.<BR><BR><br>
 @Prompt TPM device address.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpmBaseAddress</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010012</CAPTION></TD><TD><CAPTION>UINT64</CAPTION></TD><TD><CAPTION>0xFED40000</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsPatchableInModule_common_PcdTpmInitializationPolicy gEfiSecurityPkgTokenSpaceGuid.PcdTpmInitializationPolicy
 This PCD indicates the initialization policy for TPM 1.2.<BR><BR><br>
  If 0, no initialization needed - most likely used for chipset SRTM solution, in which TPM is already initialized.<BR><br>
  If 1, initialization needed.<BR><br>
 @Prompt TPM 1.2 device initialization policy.<br>
 @ValidRange 0x80000001 | 0x00 - 0x1<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpmInitializationPolicy</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001000B</CAPTION></TD><TD><CAPTION>UINT8</CAPTION></TD><TD><CAPTION>1</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsPatchableInModule_common_PcdTpmInstanceGuid  gEfiSecurityPkgTokenSpaceGuid.PcdTpmInstanceGuid 
 Guid name to identify TPM instance.<BR><BR><br>
  NOTE: This Pcd must be FixedAtBuild if Standalone MM is used<br>
  TPM_DEVICE_INTERFACE_NONE means disable.<BR><br>
  TPM_DEVICE_INTERFACE_TPM12 means TPM 1.2 DTPM.<BR><br>
  TPM_DEVICE_INTERFACE_DTPM2 means TPM 2.0 DTPM.<BR><br>
  Other GUID value means other TPM 2.0 device.<BR><br>
 @Prompt TPM device type identifier<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpmInstanceGuid </CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001000F</CAPTION></TD><TD><CAPTION>VOID*</CAPTION></TD><TD><CAPTION>{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsPatchableInModule_common_PcdTpmPhysicalPresence gEfiSecurityPkgTokenSpaceGuid.PcdTpmPhysicalPresence
 Indicates the presence or absence of the platform operator during firmware booting.<br>
  If platform operator is not physical presence during boot. TPM will be locked and the TPM commands<br>
  that required operator physical presence can not run.<BR><BR><br>
   TRUE  - The platform operator is physically present.<BR><br>
   FALSE - The platform operator is not physically present.<BR><br>
 @Prompt Physical presence of the platform operator.<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpmPhysicalPresence</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010001</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>TRUE</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsPatchableInModule_common_PcdTpmPlatformClass gEfiSecurityPkgTokenSpaceGuid.PcdTpmPlatformClass
 Specifies the type of TCG platform that contains TPM chip.<BR><BR><br>
  If 0, TCG platform type is PC client.<BR><br>
  If 1, TCG platform type is PC server.<BR><br>
 @Prompt Select platform type.<br>
 @ValidRange 0x80000001 | 0x00 - 0x1<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpmPlatformClass</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00000006</CAPTION></TD><TD><CAPTION>UINT8</CAPTION></TD><TD><CAPTION>0</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsPatchableInModule_common_PcdTpmScrtmPolicy gEfiSecurityPkgTokenSpaceGuid.PcdTpmScrtmPolicy
 This PCD indicates Static Core Root of Trust for Measurement (SCRTM) policy using TPM 1.2.<BR><BR><br>
  if 0, no SCRTM measurement needed - In this case, it is already done.<BR><br>
  if 1, SCRTM measurement done by BIOS.<BR><br>
 @Prompt SCRTM policy setting for TPM 1.2 device<br>
 @ValidRange 0x80000001 | 0x00 - 0x1<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdTpmScrtmPolicy</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x0001000E</CAPTION></TD><TD><CAPTION>UINT8</CAPTION></TD><TD><CAPTION>1</CAPTION></TD></TR></TABLE>
 **/
/** \page pcd_PcdsPatchableInModule_common_PcdUserPhysicalPresence gEfiSecurityPkgTokenSpaceGuid.PcdUserPhysicalPresence
 Indicate whether a physical presence user exist.<br>
 When it is configured to Dynamic or DynamicEx, it can be set through detection using<br>
 a platform-specific method (e.g. Button pressed) in a actual platform in early boot phase.<BR><BR><br>
 @Prompt A physical presence user status<br>

 \section PCDinformation PCD Information
<TABLE><TR><TD><CAPTION>Name</CAPTION></TD><TD><CAPTION>Token Space</CAPTION></TD><TD><CAPTION>Token number</CAPTION></TD><TD><CAPTION>Data Type</CAPTION></TD><TD><CAPTION>Default Value</CAPTION></TD></TR><TR><TD><CAPTION>PcdUserPhysicalPresence</CAPTION></TD><TD><CAPTION>gEfiSecurityPkgTokenSpaceGuid</CAPTION></TD><TD><CAPTION>0x00010019</CAPTION></TD><TD><CAPTION>BOOLEAN</CAPTION></TD><TD><CAPTION>FALSE</CAPTION></TD></TR></TABLE>
 **/
/** \page guid_root_page GUID
<p> \section content_index INDEX
<ul>
<li>\subpage guid_arch_root_common "common" </li>
</ul>
 **/
/** \page guid_arch_root_common common
<p> \section content_index INDEX
<ul>
<li>\subpage guid_common_gDefaultdbFileGuid "gDefaultdbFileGuid" </li>
<li>\subpage guid_common_gDefaultdbtFileGuid "gDefaultdbtFileGuid" </li>
<li>\subpage guid_common_gDefaultdbxFileGuid "gDefaultdbxFileGuid" </li>
<li>\subpage guid_common_gDefaultKEKFileGuid "gDefaultKEKFileGuid" </li>
<li>\subpage guid_common_gDefaultPKFileGuid "gDefaultPKFileGuid" </li>
<li>\subpage guid_common_gEfiCertDbGuid "gEfiCertDbGuid" </li>
<li>\subpage guid_common_gEfiCustomModeEnableGuid "gEfiCustomModeEnableGuid" </li>
<li>\subpage guid_common_gEfiPhysicalPresenceGuid "gEfiPhysicalPresenceGuid" </li>
<li>\subpage guid_common_gEfiSecureBootEnableDisableGuid "gEfiSecureBootEnableDisableGuid" </li>
<li>\subpage guid_common_gEfiSecurityPkgTokenSpaceGuid "gEfiSecurityPkgTokenSpaceGuid" </li>
<li>\subpage guid_common_gEfiTcg2PhysicalPresenceGuid "gEfiTcg2PhysicalPresenceGuid" </li>
<li>\subpage guid_common_gEfiTpmDeviceInstanceNoneGuid "gEfiTpmDeviceInstanceNoneGuid" </li>
<li>\subpage guid_common_gEfiTpmDeviceInstanceTpm12Guid "gEfiTpmDeviceInstanceTpm12Guid" </li>
<li>\subpage guid_common_gEfiTpmDeviceInstanceTpm20DtpmGuid "gEfiTpmDeviceInstanceTpm20DtpmGuid" </li>
<li>\subpage guid_common_gEfiTpmDeviceSelectedGuid "gEfiTpmDeviceSelectedGuid" </li>
<li>\subpage guid_common_gEfiVendorKeysNvGuid "gEfiVendorKeysNvGuid" </li>
<li>\subpage guid_common_gMeasuredFvHobGuid "gMeasuredFvHobGuid" </li>
<li>\subpage guid_common_gOpalExtraInfoVariableGuid "gOpalExtraInfoVariableGuid" </li>
<li>\subpage guid_common_gSecureBootConfigFormSetGuid "gSecureBootConfigFormSetGuid" </li>
<li>\subpage guid_common_gTcg2ConfigFormSetGuid "gTcg2ConfigFormSetGuid" </li>
<li>\subpage guid_common_gTcg2MmSwSmiRegisteredGuid "gTcg2MmSwSmiRegisteredGuid" </li>
<li>\subpage guid_common_gTcg800155PlatformIdEventHobGuid "gTcg800155PlatformIdEventHobGuid" </li>
<li>\subpage guid_common_gTcgConfigFormSetGuid "gTcgConfigFormSetGuid" </li>
<li>\subpage guid_common_gTcgEvent2EntryHobGuid "gTcgEvent2EntryHobGuid" </li>
<li>\subpage guid_common_gTcgEventEntryHobGuid "gTcgEventEntryHobGuid" </li>
<li>\subpage guid_common_gTpm2StartupLocalityHobGuid "gTpm2StartupLocalityHobGuid" </li>
<li>\subpage guid_common_gTpmErrorHobGuid "gTpmErrorHobGuid" </li>
<li>\subpage guid_common_gTpmNvsMmGuid "gTpmNvsMmGuid" </li>
<li>\subpage guid_common_gUserIdentifyManagerGuid "gUserIdentifyManagerGuid" </li>
</ul>
 **/
/** \page guid_common_gDefaultdbFileGuid gDefaultdbFileGuid
 GUID used to specify section with default db content<br>
 \section BasicGuidInfo GUID Information
<TABLE><TR><TD><CAPTION>GUID's Guid Name</CAPTION></TD><TD><CAPTION>GUID's Guid</CAPTION></TD></TR><TR><TD>gDefaultdbFileGuid</TD><TD>{ 0xc491d352, 0x7623, 0x4843, { 0xac, 0xcc, 0x27, 0x91, 0xa7, 0x57, 0x44, 0x21 } }</TD></TR></TABLE>
 **/
/** \page guid_common_gDefaultdbtFileGuid gDefaultdbtFileGuid
 GUID used to specify section with default dbt content<br>
 \section BasicGuidInfo GUID Information
<TABLE><TR><TD><CAPTION>GUID's Guid Name</CAPTION></TD><TD><CAPTION>GUID's Guid</CAPTION></TD></TR><TR><TD>gDefaultdbtFileGuid</TD><TD>{ 0x36c513ee, 0xa338, 0x4976, { 0xa0, 0xfb, 0x6d, 0xdb, 0xa3, 0xda, 0xfe, 0x87 } }</TD></TR></TABLE>
 **/
/** \page guid_common_gDefaultdbxFileGuid gDefaultdbxFileGuid
 GUID used to specify section with default dbx content<br>
 \section BasicGuidInfo GUID Information
<TABLE><TR><TD><CAPTION>GUID's Guid Name</CAPTION></TD><TD><CAPTION>GUID's Guid</CAPTION></TD></TR><TR><TD>gDefaultdbxFileGuid</TD><TD>{ 0x5740766a, 0x718e, 0x4dc0, { 0x99, 0x35, 0xc3, 0x6f, 0x7d, 0x3f, 0x88, 0x4f } }</TD></TR></TABLE>
 **/
/** \page guid_common_gDefaultKEKFileGuid gDefaultKEKFileGuid
 GUID used to specify section with default KEK content<br>
 \section BasicGuidInfo GUID Information
<TABLE><TR><TD><CAPTION>GUID's Guid Name</CAPTION></TD><TD><CAPTION>GUID's Guid</CAPTION></TD></TR><TR><TD>gDefaultKEKFileGuid</TD><TD>{ 0x6f64916e, 0x9f7a, 0x4c35, { 0xb9, 0x52, 0xcd, 0x04, 0x1e, 0xfb, 0x05, 0xa3 } }</TD></TR></TABLE>
 **/
/** \page guid_common_gDefaultPKFileGuid gDefaultPKFileGuid
 GUID used to specify section with default PK content<br>
 \section BasicGuidInfo GUID Information
<TABLE><TR><TD><CAPTION>GUID's Guid Name</CAPTION></TD><TD><CAPTION>GUID's Guid</CAPTION></TD></TR><TR><TD>gDefaultPKFileGuid</TD><TD>{ 0x85254ea7, 0x4759, 0x4fc4, { 0x82, 0xd4, 0x5e, 0xed, 0x5f, 0xb0, 0xa4, 0xa0 } }</TD></TR></TABLE>
 **/
/** \page guid_common_gEfiCertDbGuid gEfiCertDbGuid
 GUID used to "certdb"/"certdbv" variable to store the signer's certificates for common variables with EFI_VARIABLE_TIME_BASED_AUTHENTICATED_WRITE_ACCESS attribute.<br>  Include/Guid/AuthenticatedVariableFormat.h<br>
 \section BasicGuidInfo GUID Information
<TABLE><TR><TD><CAPTION>GUID's Guid Name</CAPTION></TD><TD><CAPTION>GUID's Guid</CAPTION></TD></TR><TR><TD>gEfiCertDbGuid</TD><TD>{ 0xd9bee56e, 0x75dc, 0x49d9, { 0xb4, 0xd7, 0xb5, 0x34, 0x21, 0xf, 0x63, 0x7a } }</TD></TR></TABLE>
 \section ref Refer to Header File
\link SecurityPkg/Include/Guid/AuthenticatedVariableFormat.h
\endlink

 **/
/** \page guid_common_gEfiCustomModeEnableGuid gEfiCustomModeEnableGuid
 GUID used to "CustomMode" variable for two Secure Boot modes feature: "Custom" and "Standard".<br>  Standard Secure Boot mode is the default mode as UEFI Spec's description.<br>  Custom Secure Boot mode allows for more flexibility as specified in the following:<br>  Can enroll or delete PK without existing PK's private key.<br>  Can enroll or delete KEK without existing PK's private key.<br>  Can enroll or delete signature from DB/DBX without KEK's private key.<br>  Include/Guid/AuthenticatedVariableFormat.h<br>
 \section BasicGuidInfo GUID Information
<TABLE><TR><TD><CAPTION>GUID's Guid Name</CAPTION></TD><TD><CAPTION>GUID's Guid</CAPTION></TD></TR><TR><TD>gEfiCustomModeEnableGuid</TD><TD>{ 0xc076ec0c, 0x7028, 0x4399, { 0xa0, 0x72, 0x71, 0xee, 0x5c, 0x44, 0x8b, 0x9f } }</TD></TR></TABLE>
 \section ref Refer to Header File
\link SecurityPkg/Include/Guid/AuthenticatedVariableFormat.h
\endlink

 **/
/** \page guid_common_gEfiPhysicalPresenceGuid gEfiPhysicalPresenceGuid
 GUID used to "PhysicalPresence" variable and "PhysicalPresenceFlags" variable for TPM request and response.<br>  Include/Guid/PhysicalPresenceData.h<br>
 \section BasicGuidInfo GUID Information
<TABLE><TR><TD><CAPTION>GUID's Guid Name</CAPTION></TD><TD><CAPTION>GUID's Guid</CAPTION></TD></TR><TR><TD>gEfiPhysicalPresenceGuid</TD><TD>{ 0xf6499b1, 0xe9ad, 0x493d, { 0xb9, 0xc2, 0x2f, 0x90, 0x81, 0x5c, 0x6c, 0xbc }}</TD></TR></TABLE>
 \section ref Refer to Header File
\link SecurityPkg/Include/Guid/PhysicalPresenceData.h
\endlink

 **/
/** \page guid_common_gEfiSecureBootEnableDisableGuid gEfiSecureBootEnableDisableGuid
 GUID used to "SecureBootEnable" variable for the Secure Boot feature enable/disable.<br>  This variable is used for allowing a physically present user to disable Secure Boot via firmware setup without the possession of PKpriv.<br>  Include/Guid/AuthenticatedVariableFormat.h<br>
 \section BasicGuidInfo GUID Information
<TABLE><TR><TD><CAPTION>GUID's Guid Name</CAPTION></TD><TD><CAPTION>GUID's Guid</CAPTION></TD></TR><TR><TD>gEfiSecureBootEnableDisableGuid</TD><TD>{ 0xf0a30bc7, 0xaf08, 0x4556, { 0x99, 0xc4, 0x0, 0x10, 0x9, 0xc9, 0x3a, 0x44 } }</TD></TR></TABLE>
 \section ref Refer to Header File
\link SecurityPkg/Include/Guid/AuthenticatedVariableFormat.h
\endlink

 **/
/** \page guid_common_gEfiSecurityPkgTokenSpaceGuid gEfiSecurityPkgTokenSpaceGuid
 Security package token space guid.<br> Include/Guid/SecurityPkgTokenSpace.h<br>
 \section BasicGuidInfo GUID Information
<TABLE><TR><TD><CAPTION>GUID's Guid Name</CAPTION></TD><TD><CAPTION>GUID's Guid</CAPTION></TD></TR><TR><TD>gEfiSecurityPkgTokenSpaceGuid</TD><TD>{ 0xd3fb176, 0x9569, 0x4d51, { 0xa3, 0xef, 0x7d, 0x61, 0xc6, 0x4f, 0xea, 0xba }}</TD></TR></TABLE>
 \section ref Refer to Header File
\link SecurityPkg/Include/Guid/SecurityPkgTokenSpace.h
\endlink

 **/
/** \page guid_common_gEfiTcg2PhysicalPresenceGuid gEfiTcg2PhysicalPresenceGuid
 GUID used to "Tcg2PhysicalPresence" variable and "Tcg2PhysicalPresenceFlags" variable for TPM2 request and response.<br>  Include/Guid/Tcg2PhysicalPresenceData.h<br>
 \section BasicGuidInfo GUID Information
<TABLE><TR><TD><CAPTION>GUID's Guid Name</CAPTION></TD><TD><CAPTION>GUID's Guid</CAPTION></TD></TR><TR><TD>gEfiTcg2PhysicalPresenceGuid</TD><TD>{ 0xaeb9c5c1, 0x94f1, 0x4d02, { 0xbf, 0xd9, 0x46, 0x2, 0xdb, 0x2d, 0x3c, 0x54 }}</TD></TR></TABLE>
 \section ref Refer to Header File
\link SecurityPkg/Include/Guid/Tcg2PhysicalPresenceData.h
\endlink

 **/
/** \page guid_common_gEfiTpmDeviceInstanceNoneGuid gEfiTpmDeviceInstanceNoneGuid
 GUID value used for PcdTpmInstanceGuid to indicate TPM is disabled.<br>  Include/Guid/TpmInstance.h<br>
 \section BasicGuidInfo GUID Information
<TABLE><TR><TD><CAPTION>GUID's Guid Name</CAPTION></TD><TD><CAPTION>GUID's Guid</CAPTION></TD></TR><TR><TD>gEfiTpmDeviceInstanceNoneGuid</TD><TD>{ 0x00000000, 0x0000, 0x0000, { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } }</TD></TR></TABLE>
 \section ref Refer to Header File
\link SecurityPkg/Include/Guid/TpmInstance.h
\endlink

 **/
/** \page guid_common_gEfiTpmDeviceInstanceTpm12Guid gEfiTpmDeviceInstanceTpm12Guid
 GUID value used for PcdTpmInstanceGuid to indicate TPM 1.2 device is selected to support.<br>  Include/Guid/TpmInstance.h<br>
 \section BasicGuidInfo GUID Information
<TABLE><TR><TD><CAPTION>GUID's Guid Name</CAPTION></TD><TD><CAPTION>GUID's Guid</CAPTION></TD></TR><TR><TD>gEfiTpmDeviceInstanceTpm12Guid</TD><TD>{ 0x8b01e5b6, 0x4f19, 0x46e8, { 0xab, 0x93, 0x1c, 0x53, 0x67, 0x1b, 0x90, 0xcc } }</TD></TR></TABLE>
 \section ref Refer to Header File
\link SecurityPkg/Include/Guid/TpmInstance.h
\endlink

 **/
/** \page guid_common_gEfiTpmDeviceInstanceTpm20DtpmGuid gEfiTpmDeviceInstanceTpm20DtpmGuid
 GUID value used for PcdTpmInstanceGuid to indicate discrete TPM 2.0 device is selected to support.<br>  Include/Guid/TpmInstance.h<br>
 \section BasicGuidInfo GUID Information
<TABLE><TR><TD><CAPTION>GUID's Guid Name</CAPTION></TD><TD><CAPTION>GUID's Guid</CAPTION></TD></TR><TR><TD>gEfiTpmDeviceInstanceTpm20DtpmGuid</TD><TD>{ 0x286bf25a, 0xc2c3, 0x408c, { 0xb3, 0xb4, 0x25, 0xe6, 0x75, 0x8b, 0x73, 0x17 } }</TD></TR></TABLE>
 \section ref Refer to Header File
\link SecurityPkg/Include/Guid/TpmInstance.h
\endlink

 **/
/** \page guid_common_gEfiTpmDeviceSelectedGuid gEfiTpmDeviceSelectedGuid
 GUID used to select supported TPM instance from UI.<br>  Include/Guid/TpmInstance.h<br>
 \section BasicGuidInfo GUID Information
<TABLE><TR><TD><CAPTION>GUID's Guid Name</CAPTION></TD><TD><CAPTION>GUID's Guid</CAPTION></TD></TR><TR><TD>gEfiTpmDeviceSelectedGuid</TD><TD>{ 0x7f4158d3, 0x74d, 0x456d, { 0x8c, 0xb2, 0x1, 0xf9, 0xc8, 0xf7, 0x9d, 0xaa } }</TD></TR></TABLE>
 \section ref Refer to Header File
\link SecurityPkg/Include/Guid/TpmInstance.h
\endlink

 **/
/** \page guid_common_gEfiVendorKeysNvGuid gEfiVendorKeysNvGuid
 GUID used to "VendorKeysNv" variable to record the out of band secure boot keys modification.<br>  This variable is a read-only NV variable that indicates whether someone other than the platform vendor has used a<br>  mechanism not defined by the UEFI Specification to transition the system to setup mode or to update secure boot keys.<br>  Include/Guid/AuthenticatedVariableFormat.h<br>
 \section BasicGuidInfo GUID Information
<TABLE><TR><TD><CAPTION>GUID's Guid Name</CAPTION></TD><TD><CAPTION>GUID's Guid</CAPTION></TD></TR><TR><TD>gEfiVendorKeysNvGuid</TD><TD>{ 0x9073e4e0, 0x60ec, 0x4b6e, { 0x99, 0x3, 0x4c, 0x22, 0x3c, 0x26, 0xf, 0x3c } }</TD></TR></TABLE>
 \section ref Refer to Header File
\link SecurityPkg/Include/Guid/AuthenticatedVariableFormat.h
\endlink

 **/
/** \page guid_common_gMeasuredFvHobGuid gMeasuredFvHobGuid
 HOB GUID used to pass all PEI measured FV info to DXE Driver.<br>  Include/Guid/MeasuredFvHob.h<br>
 \section BasicGuidInfo GUID Information
<TABLE><TR><TD><CAPTION>GUID's Guid Name</CAPTION></TD><TD><CAPTION>GUID's Guid</CAPTION></TD></TR><TR><TD>gMeasuredFvHobGuid</TD><TD>{ 0xb2360b42, 0x7173, 0x420a, { 0x86, 0x96, 0x46, 0xca, 0x6b, 0xab, 0x10, 0x60 }}</TD></TR></TABLE>
 \section ref Refer to Header File
\link SecurityPkg/Include/Guid/MeasuredFvHob.h
\endlink

 **/
/** \page guid_common_gOpalExtraInfoVariableGuid gOpalExtraInfoVariableGuid
 Include/OpalPasswordExtraInfoVariable.h<br>
 \section BasicGuidInfo GUID Information
<TABLE><TR><TD><CAPTION>GUID's Guid Name</CAPTION></TD><TD><CAPTION>GUID's Guid</CAPTION></TD></TR><TR><TD>gOpalExtraInfoVariableGuid</TD><TD>{0x44a2ad5d, 0x612c, 0x47b3, {0xb0, 0x6e, 0xc8, 0xf5, 0x0b, 0xfb, 0xf0, 0x7d}}</TD></TR></TABLE>
 **/
/** \page guid_common_gSecureBootConfigFormSetGuid gSecureBootConfigFormSetGuid
 GUID used for FormSet.<br>  Include/Guid/SecureBootConfigHii.h<br>
 \section BasicGuidInfo GUID Information
<TABLE><TR><TD><CAPTION>GUID's Guid Name</CAPTION></TD><TD><CAPTION>GUID's Guid</CAPTION></TD></TR><TR><TD>gSecureBootConfigFormSetGuid</TD><TD>{ 0x5daf50a5, 0xea81, 0x4de2, {0x8f, 0x9b, 0xca, 0xbd, 0xa9, 0xcf, 0x5c, 0x14}}</TD></TR></TABLE>
 \section ref Refer to Header File
\link SecurityPkg/Include/Guid/SecureBootConfigHii.h
\endlink

 **/
/** \page guid_common_gTcg2ConfigFormSetGuid gTcg2ConfigFormSetGuid
 GUID used for FormSet and config variable.<br>  Include/Guid/Tcg2ConfigHii.h<br>
 \section BasicGuidInfo GUID Information
<TABLE><TR><TD><CAPTION>GUID's Guid Name</CAPTION></TD><TD><CAPTION>GUID's Guid</CAPTION></TD></TR><TR><TD>gTcg2ConfigFormSetGuid</TD><TD>{0x6339d487, 0x26ba, 0x424b, { 0x9a, 0x5d, 0x68, 0x7e, 0x25, 0xd7, 0x40, 0xbc }}</TD></TR></TABLE>
 \section ref Refer to Header File
\link SecurityPkg/Include/Guid/Tcg2ConfigHii.h
\endlink

 **/
/** \page guid_common_gTcg2MmSwSmiRegisteredGuid gTcg2MmSwSmiRegisteredGuid
 GUID used to enforce loading order between Tcg2Acpi and Tcg2Smm<br>
 \section BasicGuidInfo GUID Information
<TABLE><TR><TD><CAPTION>GUID's Guid Name</CAPTION></TD><TD><CAPTION>GUID's Guid</CAPTION></TD></TR><TR><TD>gTcg2MmSwSmiRegisteredGuid</TD><TD>{ 0x9d4548b9, 0xa48d, 0x4db4, { 0x9a, 0x68, 0x32, 0xc5, 0x13, 0x9e, 0x20, 0x18 } }</TD></TR></TABLE>
 **/
/** \page guid_common_gTcg800155PlatformIdEventHobGuid gTcg800155PlatformIdEventHobGuid
 Include/Guid/TcgEventHob.h<br>
 \section BasicGuidInfo GUID Information
<TABLE><TR><TD><CAPTION>GUID's Guid Name</CAPTION></TD><TD><CAPTION>GUID's Guid</CAPTION></TD></TR><TR><TD>gTcg800155PlatformIdEventHobGuid</TD><TD>{ 0xe2c3bc69, 0x615c, 0x4b5b, { 0x8e, 0x5c, 0xa0, 0x33, 0xa9, 0xc2, 0x5e, 0xd6 }}</TD></TR></TABLE>
 \section ref Refer to Header File
\link SecurityPkg/Include/Guid/TcgEventHob.h
\endlink

 **/
/** \page guid_common_gTcgConfigFormSetGuid gTcgConfigFormSetGuid
 GUID used for FormSet.<br>  Include/Guid/TcgConfigHii.h<br>
 \section BasicGuidInfo GUID Information
<TABLE><TR><TD><CAPTION>GUID's Guid Name</CAPTION></TD><TD><CAPTION>GUID's Guid</CAPTION></TD></TR><TR><TD>gTcgConfigFormSetGuid</TD><TD>{ 0xb0f901e4, 0xc424, 0x45de, { 0x90, 0x81, 0x95, 0xe2, 0xb, 0xde, 0x6f, 0xb5 }}</TD></TR></TABLE>
 \section ref Refer to Header File
\link SecurityPkg/Include/Guid/TcgConfigHii.h
\endlink

 **/
/** \page guid_common_gTcgEvent2EntryHobGuid gTcgEvent2EntryHobGuid
 Include/Guid/TcgEventHob.h<br>
 \section BasicGuidInfo GUID Information
<TABLE><TR><TD><CAPTION>GUID's Guid Name</CAPTION></TD><TD><CAPTION>GUID's Guid</CAPTION></TD></TR><TR><TD>gTcgEvent2EntryHobGuid</TD><TD>{ 0xd26c221e, 0x2430, 0x4c8a, { 0x91, 0x70, 0x3f, 0xcb, 0x45, 0x0, 0x41, 0x3f }}</TD></TR></TABLE>
 \section ref Refer to Header File
\link SecurityPkg/Include/Guid/TcgEventHob.h
\endlink

 **/
/** \page guid_common_gTcgEventEntryHobGuid gTcgEventEntryHobGuid
 Hob GUID used to pass a TCG_PCR_EVENT from a TPM PEIM to a TPM DXE Driver.<br>  Include/Guid/TcgEventHob.h<br>
 \section BasicGuidInfo GUID Information
<TABLE><TR><TD><CAPTION>GUID's Guid Name</CAPTION></TD><TD><CAPTION>GUID's Guid</CAPTION></TD></TR><TR><TD>gTcgEventEntryHobGuid</TD><TD>{ 0x2b9ffb52, 0x1b13, 0x416f, { 0xa8, 0x7b, 0xbc, 0x93, 0xd, 0xef, 0x92, 0xa8 }}</TD></TR></TABLE>
 \section ref Refer to Header File
\link SecurityPkg/Include/Guid/TcgEventHob.h
\endlink

 **/
/** \page guid_common_gTpm2StartupLocalityHobGuid gTpm2StartupLocalityHobGuid
 Include/Guid/TcgEventHob.h<br>
 \section BasicGuidInfo GUID Information
<TABLE><TR><TD><CAPTION>GUID's Guid Name</CAPTION></TD><TD><CAPTION>GUID's Guid</CAPTION></TD></TR><TR><TD>gTpm2StartupLocalityHobGuid</TD><TD>{ 0x397b0c9, 0x22e8, 0x459e, { 0xa4, 0xff, 0x99, 0xbc, 0x65, 0x27, 0x9, 0x29 }}</TD></TR></TABLE>
 \section ref Refer to Header File
\link SecurityPkg/Include/Guid/TcgEventHob.h
\endlink

 **/
/** \page guid_common_gTpmErrorHobGuid gTpmErrorHobGuid
 HOB GUID used to record TPM device error.<br>  Include/Guid/TcgEventHob.h<br>
 \section BasicGuidInfo GUID Information
<TABLE><TR><TD><CAPTION>GUID's Guid Name</CAPTION></TD><TD><CAPTION>GUID's Guid</CAPTION></TD></TR><TR><TD>gTpmErrorHobGuid</TD><TD>{ 0xef598499, 0xb25e, 0x473a, { 0xbf, 0xaf, 0xe7, 0xe5, 0x7d, 0xce, 0x82, 0xc4 }}</TD></TR></TABLE>
 \section ref Refer to Header File
\link SecurityPkg/Include/Guid/TcgEventHob.h
\endlink

 **/
/** \page guid_common_gTpmNvsMmGuid gTpmNvsMmGuid
 Include/Guid/TpmNvsMm.h<br>
 \section BasicGuidInfo GUID Information
<TABLE><TR><TD><CAPTION>GUID's Guid Name</CAPTION></TD><TD><CAPTION>GUID's Guid</CAPTION></TD></TR><TR><TD>gTpmNvsMmGuid</TD><TD>{ 0xc96c76eb, 0xbc78, 0x429c, { 0x9f, 0x4b, 0xda, 0x51, 0x78, 0xc2, 0x84, 0x57 }}</TD></TR></TABLE>
 \section ref Refer to Header File
\link SecurityPkg/Include/Guid/TpmNvsMm.h
\endlink

 **/
/** \page guid_common_gUserIdentifyManagerGuid gUserIdentifyManagerGuid
 GUID used for FormSet guid and user profile variable.<br> Include/Guid/UserIdentifyManagerHii.h<br>
 \section BasicGuidInfo GUID Information
<TABLE><TR><TD><CAPTION>GUID's Guid Name</CAPTION></TD><TD><CAPTION>GUID's Guid</CAPTION></TD></TR><TR><TD>gUserIdentifyManagerGuid</TD><TD>{ 0x3ccd3dd8, 0x8d45, 0x4fed, { 0x96, 0x2d, 0x2b, 0x38, 0xcd, 0x82, 0xb3, 0xc4 }}</TD></TR></TABLE>
 **/
/** \page ppi_root_page PPI
<p> \section content_index INDEX
<ul>
<li>\subpage ppi_arch_root_common "common" </li>
</ul>
 **/
/** \page ppi_arch_root_common common
<p> \section content_index INDEX
<ul>
<li>\subpage ppi_page_gEdkiiPeiFirmwareVolumeInfoPrehashedFvPpiGuid "gEdkiiPeiFirmwareVolumeInfoPrehashedFvPpiGuid" </li>
<li>\subpage ppi_page_gEdkiiPeiFirmwareVolumeInfoStoredHashFvPpiGuid "gEdkiiPeiFirmwareVolumeInfoStoredHashFvPpiGuid" </li>
<li>\subpage ppi_page_gEdkiiTcgPpiGuid "gEdkiiTcgPpiGuid" </li>
<li>\subpage ppi_page_gEfiPeiFirmwareVolumeInfoMeasurementExcludedPpiGuid "gEfiPeiFirmwareVolumeInfoMeasurementExcludedPpiGuid" </li>
<li>\subpage ppi_page_gPeiLockPhysicalPresencePpiGuid "gPeiLockPhysicalPresencePpiGuid" </li>
<li>\subpage ppi_page_gPeiTpmInitializationDonePpiGuid "gPeiTpmInitializationDonePpiGuid" </li>
<li>\subpage ppi_page_gPeiTpmInitializedPpiGuid "gPeiTpmInitializedPpiGuid" </li>
</ul>
 **/
/** \page ppi_page_gEdkiiPeiFirmwareVolumeInfoPrehashedFvPpiGuid gEdkiiPeiFirmwareVolumeInfoPrehashedFvPpiGuid
 Include/Ppi/FirmwareVolumeInfoPrehashedFV.h<br>
 \section BasicPpiInfo PPI Information
<TABLE><TR><TD><CAPTION>PPI's Guid Name</CAPTION></TD><TD><CAPTION>PPI's Guid</CAPTION></TD></TR><TR><TD>gEdkiiPeiFirmwareVolumeInfoPrehashedFvPpiGuid</TD><TD>{ 0x3ce1e631, 0x7008, 0x477c, { 0xad, 0xa7, 0x5d, 0xcf, 0xc7, 0xc1, 0x49, 0x4b } }</TD></TR></TABLE>
 \section ref Refer to Header File
\link SecurityPkg/Include/Ppi/FirmwareVolumeInfoPrehashedFV.h
\endlink

 **/
/** \page ppi_page_gEdkiiPeiFirmwareVolumeInfoStoredHashFvPpiGuid gEdkiiPeiFirmwareVolumeInfoStoredHashFvPpiGuid
 Include/Ppi/FirmwareVolumeInfoStoredHashFv.h<br>
 \section BasicPpiInfo PPI Information
<TABLE><TR><TD><CAPTION>PPI's Guid Name</CAPTION></TD><TD><CAPTION>PPI's Guid</CAPTION></TD></TR><TR><TD>gEdkiiPeiFirmwareVolumeInfoStoredHashFvPpiGuid</TD><TD>{0x7f5e4e31, 0x81b1, 0x47e5, { 0x9e, 0x21, 0x1e, 0x4b, 0x5b, 0xc2, 0xf6, 0x1d } }</TD></TR></TABLE>
 \section ref Refer to Header File
\link SecurityPkg/Include/Ppi/FirmwareVolumeInfoStoredHashFv.h
\endlink

 **/
/** \page ppi_page_gEdkiiTcgPpiGuid gEdkiiTcgPpiGuid
 Include/Ppi/Tcg.h<br>
 \section BasicPpiInfo PPI Information
<TABLE><TR><TD><CAPTION>PPI's Guid Name</CAPTION></TD><TD><CAPTION>PPI's Guid</CAPTION></TD></TR><TR><TD>gEdkiiTcgPpiGuid</TD><TD>{0x57a13b87, 0x133d, 0x4bf3, { 0xbf, 0xf1, 0x1b, 0xca, 0xc7, 0x17, 0x6c, 0xf1 } }</TD></TR></TABLE>
 \section ref Refer to Header File
\link SecurityPkg/Include/Ppi/Tcg.h
\endlink

 **/
/** \page ppi_page_gEfiPeiFirmwareVolumeInfoMeasurementExcludedPpiGuid gEfiPeiFirmwareVolumeInfoMeasurementExcludedPpiGuid
 Include/Ppi/FirmwareVolumeInfoMeasurementExcluded.h<br>
 \section BasicPpiInfo PPI Information
<TABLE><TR><TD><CAPTION>PPI's Guid Name</CAPTION></TD><TD><CAPTION>PPI's Guid</CAPTION></TD></TR><TR><TD>gEfiPeiFirmwareVolumeInfoMeasurementExcludedPpiGuid</TD><TD>{ 0x6e056ff9, 0xc695, 0x4364, { 0x9e, 0x2c, 0x61, 0x26, 0xf5, 0xce, 0xea, 0xae } }</TD></TR></TABLE>
 \section ref Refer to Header File
\link SecurityPkg/Include/Ppi/FirmwareVolumeInfoMeasurementExcluded.h
\endlink

 **/
/** \page ppi_page_gPeiLockPhysicalPresencePpiGuid gPeiLockPhysicalPresencePpiGuid
 The PPI GUID for that TPM physical presence should be locked.<br> Include/Ppi/LockPhysicalPresence.h<br>
 \section BasicPpiInfo PPI Information
<TABLE><TR><TD><CAPTION>PPI's Guid Name</CAPTION></TD><TD><CAPTION>PPI's Guid</CAPTION></TD></TR><TR><TD>gPeiLockPhysicalPresencePpiGuid</TD><TD>{ 0xef9aefe5, 0x2bd3, 0x4031, { 0xaf, 0x7d, 0x5e, 0xfe, 0x5a, 0xbb, 0x9a, 0xd } }</TD></TR></TABLE>
 \section ref Refer to Header File
\link SecurityPkg/Include/Ppi/LockPhysicalPresence.h
\endlink

 **/
/** \page ppi_page_gPeiTpmInitializationDonePpiGuid gPeiTpmInitializationDonePpiGuid
 The PPI GUID for that TPM initialization is done. TPM initialization may be success or fail.<br> Include/Ppi/TpmInitialized.h<br>
 \section BasicPpiInfo PPI Information
<TABLE><TR><TD><CAPTION>PPI's Guid Name</CAPTION></TD><TD><CAPTION>PPI's Guid</CAPTION></TD></TR><TR><TD>gPeiTpmInitializationDonePpiGuid</TD><TD>{ 0xa030d115, 0x54dd, 0x447b, { 0x90, 0x64, 0xf2, 0x6, 0x88, 0x3d, 0x7c, 0xcc }}</TD></TR></TABLE>
 \section ref Refer to Header File
\link SecurityPkg/Include/Ppi/TpmInitialized.h
\endlink

 **/
/** \page ppi_page_gPeiTpmInitializedPpiGuid gPeiTpmInitializedPpiGuid
 The PPI GUID for that TPM is initialized.<br> Include/Ppi/TpmInitialized.h<br>
 \section BasicPpiInfo PPI Information
<TABLE><TR><TD><CAPTION>PPI's Guid Name</CAPTION></TD><TD><CAPTION>PPI's Guid</CAPTION></TD></TR><TR><TD>gPeiTpmInitializedPpiGuid</TD><TD>{ 0xe9db0d58, 0xd48d, 0x47f6, { 0x9c, 0x6e, 0x6f, 0x40, 0xe8, 0x6c, 0x7b, 0x41 }}</TD></TR></TABLE>
 \section ref Refer to Header File
\link SecurityPkg/Include/Ppi/TpmInitialized.h
\endlink

 **/