# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master_pipeline

pool:
  vmImage: 'vs2017-win2016'

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
    python --version
  displayName: 'Run a multi-line script'

- script: |
    set WORKSPACE=%CD%
    set EDK_TOOLS_PATH=%WORKSPACE%\BaseTools

    #
    # Retrieve all submodules
    #
    git submodule update --init
    
    #
    # Install NASM
    #
    powershell "& {[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; Invoke-WebRequest -Uri "https://www.nasm.us/pub/nasm/releasebuilds/2.13.03/win64/nasm-2.13.03-win64.zip -OutFile nasm-2.13.03-win64.zip"}"
    powershell Expand-Archive nasm-2.13.03-win64.zip .
    set NASM_PREFIX=%WORKSPACE%\nasm-2.13.03\
    
    #
    # Install iASL
    #
    powershell "& {[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; Invoke-WebRequest -Uri "https://acpica.org/sites/acpica/files/iasl-win-20190509.zip -OutFile iasl-win-20190509.zip"}"
    powershell Expand-Archive iasl-win-20190509.zip
    set IASL_PREFIX=%WORKSPACE%\iasl-win-20190509\

    #
    # Add openssl command line tools to PATH
    #
    path=%path%;%WORKSPACE%\openssl-1.0.2r-x64_86-win64
    
    #
    # Setup EDK II environment and rebuild BaseTools
    #
    call edkSetup.bat Rebuild
    
    #
    # Build OVMF
    #
    build -a IA32 -a X64 -n 0 -t VS2017 -p OvmfPkg/OvmfPkgIa32X64.dsc -D DEBUG_ON_SERIAL_PORT
